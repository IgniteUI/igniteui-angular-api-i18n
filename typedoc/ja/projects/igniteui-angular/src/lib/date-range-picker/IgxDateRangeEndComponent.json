{
    "IgxDateRangeEndComponent": {
        "comment": {
            "blockTags": [
                {
                    "tag": "@igxModule",
                    "content": [
                        {
                            "kind": "text",
                            "text": "IgxDateRangePickerModule"
                        }
                    ]
                },
                {
                    "tag": "@igxTheme",
                    "content": [
                        {
                            "kind": "text",
                            "text": "igx-input-group-theme, igx-calendar-theme, igx-date-range-picker-theme"
                        }
                    ]
                },
                {
                    "tag": "@igxKeywords",
                    "content": [
                        {
                            "kind": "text",
                            "text": "date, range, date range, date picker"
                        }
                    ]
                },
                {
                    "tag": "@igxGroup",
                    "content": [
                        {
                            "kind": "text",
                            "text": "スケージュール"
                        }
                    ]
                },
                {
                    "tag": "@備考",
                    "content": [
                        {
                            "kind": "text",
                            "text": "テンプレート化する場合、end 入力は個別にテンプレート化する必要があります。"
                        }
                    ]
                },
                {
                    "tag": "@例",
                    "content": [
                        {
                            "kind": "code",
                            "text": "```html\n<igx-date-range-picker mode=\"dropdown\">\n     ...\n     <igx-date-range-end>\n         <input igxInput igxDateTimeEditor type=\"text\">\n     </igx-date-range-end>\n</igx-date-range-picker>\n```"
                        }
                    ]
                }
            ],
            "modifierTags": {},
            "summary": [
                {
                    "kind": "text",
                    "text": "Date Range Picker の end 入力を定義します。"
                }
            ]
        },
        "properties": {
            "defaultClass": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "`IgxInputGroupComponent`"
                        },
                        {
                            "kind": "text",
                            "text": " の自動生成されたクラスを有効/無効にするプロパティ。\nデフォルトでクラスが適用されます。\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n @ViewChild(\"MyInputGroup\")\n public inputGroup: IgxInputGroupComponent;\n ngAfterViewInit(){\n this.inputGroup.defaultClass = false;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n}"
                        }
                    ]
                }
            },
            "suppressInputAutofocus": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@備考",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "自動フォーカスにより、ソフトウェア キーボードがモバイル デバイスに表示されます。"
                                }
                            ]
                        },
                        {
                            "tag": "@例",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-input-group [suppressInputAutofocus]=\"true\"></igx-input-group>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "入力グループ内の他の要素 (Prefix または Suffix など) をクリックすると、入力に自動的にフォーカスすることを防止します。"
                        }
                    ]
                }
            }
        },
        "methods": {
            "getComponentSizeStyles": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "表示密度の値に基づいて "
                        },
                        {
                            "kind": "code",
                            "text": "`--component-size`"
                        },
                        {
                            "kind": "text",
                            "text": " CSS 変数を設定します。"
                        }
                    ]
                }
            }
        },
        "accessors": {
            "resourceStrings": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "リソース文字列を返します。"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "リソース文字列を設定します。\nデフォルトで EN リソースを使用します。"
                            }
                        ]
                    }
                }
            },
            "type": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "`IgxInputGroupComponent`"
                            },
                            {
                                "kind": "text",
                                "text": " のタイプを返します。入力のスタイル設定方法。\nデフォルトは "
                            },
                            {
                                "kind": "code",
                                "text": "`line`"
                            },
                            {
                                "kind": "text",
                                "text": " です。\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"MyInputGroup\")\npublic inputGroup: IgxInputGroupComponent;\nngAfterViewInit(){\n   let inputType = this.inputGroup.type;\n}\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@Input",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "入力のスタイルを設定する @Input プロパティ。\nIgxInputGroupType 型の許可された値。\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-input-group [type]=\"'search'\">\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "\n"
                            }
                        ]
                    }
                }
            },
            "theme": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "入力のテーマを返します。\n戻り値は IgxInputGroupType 型です。\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"MyInputGroup\")\npublic inputGroup: IgxInputGroupComponent;\nngAfterViewInit() {\n let inputTheme = this.inputGroup.theme;\n}"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "入力のテーマを設定します。\nIgxInputGroupTheme 型の有効な値。\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"MyInputGroup\")\npublic inputGroup: IgxInputGroupComponent;\nngAfterViewInit() {\n let inputTheme = 'fluent';\n}"
                            }
                        ]
                    }
                }
            },
            "hasHints": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "`IgxInputGroupComponent`"
                            },
                            {
                                "kind": "text",
                                "text": " にヒントがあるかどうかを返します。\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"MyInputGroup\")\npublic inputGroup: IgxInputGroupComponent;\nngAfterViewInit(){\n   let inputHints = this.inputGroup.hasHints;\n}\n```"
                            }
                        ]
                    }
                }
            },
            "hasBorder": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "`IgxInputGroupComponent`"
                            },
                            {
                                "kind": "text",
                                "text": " に境界線があるかどうかを返します。\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"MyInputGroup\")\npublic inputGroup: IgxInputGroupComponent;\nngAfterViewInit(){\n   let inputBorder = this.inputGroup.hasBorder;\n}\n```"
                            }
                        ]
                    }
                }
            },
            "isTypeLine": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "`IgxInputGroupComponent` の "
                            },
                            {
                                "kind": "code",
                                "text": "type"
                            },
                            {
                                "kind": "text",
                                "text": " が line かどうかを返します。\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"MyInputGroup1\")\npublic inputGroup: IgxInputGroupComponent;\nngAfterViewInit(){\n   let isTypeLine = this.inputGroup.isTypeLine;\n}\n```"
                            }
                        ]
                    }
                }
            },
            "isTypeBox": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "`IgxInputGroupComponent` の "
                            },
                            {
                                "kind": "code",
                                "text": "type"
                            },
                            {
                                "kind": "text",
                                "text": " が box かどうかを返します。\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"MyInputGroup1\")\npublic inputGroup: IgxInputGroupComponent;\nngAfterViewInit(){\n   let isTypeBox = this.inputGroup.isTypeBox;\n}\n```"
                            }
                        ]
                    }
                }
            },
            "isTypeBorder": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "`IgxInputGroupComponent` の "
                            },
                            {
                                "kind": "code",
                                "text": "type"
                            },
                            {
                                "kind": "text",
                                "text": " が border かどうかを返します。\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"MyInputGroup1\")\npublic inputGroup: IgxInputGroupComponent;\nngAfterViewInit(){\n   let isTypeBorder = this.inputGroup.isTypeBorder;\n}\n```"
                            }
                        ]
                    }
                }
            },
            "isTypeFluent": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "IgxInputGroupComponent` のテーマが "
                            },
                            {
                                "kind": "code",
                                "text": "Fluent"
                            },
                            {
                                "kind": "text",
                                "text": " の場合、true を返します。\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"MyInputGroup1\")\npublic inputGroup: IgxInputGroupComponent;\nngAfterViewInit(){\n   let isTypeFluent = this.inputGroup.isTypeFluent;\n}\n```"
                            }
                        ]
                    }
                }
            },
            "isTypeBootstrap": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "IgxInputGroupComponent` のテーマが "
                            },
                            {
                                "kind": "code",
                                "text": "Bootstrap"
                            },
                            {
                                "kind": "text",
                                "text": " の場合、true を返します。\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"MyInputGroup1\")\npublic inputGroup: IgxInputGroupComponent;\nngAfterViewInit(){\n   let isTypeBootstrap = this.inputGroup.isTypeBootstrap;\n}\n```"
                            }
                        ]
                    }
                }
            },
            "isTypeIndigo": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "IgxInputGroupComponent` のテーマが "
                            },
                            {
                                "kind": "code",
                                "text": "Indigo"
                            },
                            {
                                "kind": "text",
                                "text": " の場合、true を返します。\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"MyInputGroup1\")\npublic inputGroup: IgxInputGroupComponent;\nngAfterViewInit(){\n   let isTypeIndigo = this.inputGroup.isTypeIndigo;\n}\n```"
                            }
                        ]
                    }
                }
            },
            "isTypeSearch": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "IgxInputGroupComponent` の "
                            },
                            {
                                "kind": "code",
                                "text": "type"
                            },
                            {
                                "kind": "text",
                                "text": " が search かどうかを返します。\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"MyInputGroup1\")\npublic inputGroup: IgxInputGroupComponent;\nngAfterViewInit(){\n   let isTypeSearch = this.inputGroup.isTypeSearch;\n}\n```"
                            }
                        ]
                    }
                }
            },
            "displayDensity": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@非推奨",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "バージョン 16.1.x 以降。\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`--ig-size`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " CSS カスタム プロパティを使用してください。"
                                    }
                                ]
                            },
                            {
                                "tag": "@参照",
                                "content": [
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@link",
                                        "text": "[アップデート ガイド](https://jp.infragistics.com/products/ignite-ui-angular/angular/components/general/update-guide#160x-から-161x-の場合)"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nコンポーネントのテーマを返します。\nデフォルトのテーマは "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`comfortable`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " です。\n利用可能なオプションは "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`comfortable`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "、"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`cosy`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "、または "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`compact`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " です。\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nlet componentTheme = this.component.displayDensity;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": []
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "コンポーネントのテーマを設定します。"
                            }
                        ]
                    }
                }
            }
        }
    }
}
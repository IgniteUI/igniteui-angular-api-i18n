{
    "IgxOverlayService": {
        "comment": {
            "tags": {},
            "shortText": [
                "[Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/overlay-main)",
                "The overlay service allows users to show components on overlay div above all other elements in the page."
            ]
        },
        "properties": {
            "onOpening": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Emitted before the component is opened.",
                        "```typescript",
                        "onOpening(event: OverlayCancelableEventArgs){",
                        "    const onOpening = event;",
                        "}",
                        "```"
                    ]
                }
            },
            "onAppended": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Emitted after the component is appended to the overlay, and before animations are started.",
                        "```typescript",
                        "onAppended(event: OverlayEventArgs){",
                        "    const onAppended = event;",
                        "}",
                        "```"
                    ]
                }
            },
            "onOpened": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Emitted after the component is opened and all animations are finished.",
                        "```typescript",
                        "onOpened(event: OverlayEventArgs){",
                        "    const onOpened = event;",
                        "}",
                        "```"
                    ]
                }
            },
            "onClosing": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Emitted before the component is closed.",
                        "```typescript",
                        "onClosing(event: OverlayCancelableEventArgs){",
                        "    const onClosing = event;",
                        "}",
                        "```"
                    ]
                }
            },
            "onClosed": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Emitted after the component is closed and all animations are finished.",
                        "```typescript",
                        "onClosed(event: OverlayEventArgs){",
                        "    const onClosed = event;",
                        "}",
                        "```"
                    ]
                }
            },
            "onAnimation": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Emitted before animation is started",
                        "```typescript",
                        "onAnimation(event: OverlayAnimationEventArgs){",
                        "    const onAnimation = event;",
                        "}",
                        "```"
                    ]
                }
            }
        },
        "methods": {
            "createAbsoluteOverlaySettings": {
                "comment": {
                    "returns": "Non-modal overlay settings based on Global or Container position strategy and the provided position.\n",
                    "parameters": {
                        "position": {
                            "comment": {
                                "text": "Preset position settings. Default position is 'center'"
                            }
                        },
                        "outlet": {
                            "comment": {
                                "text": "The outlet container to attach the overlay to"
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "Creates overlay settings with global or container position strategy and preset position settings"
                }
            },
            "createRelativeOverlaySettings": {
                "comment": {
                    "returns": "Non-modal overlay settings based on the provided target, strategy and position.\n",
                    "parameters": {
                        "target": {
                            "comment": {
                                "text": "Attaching target for the component to show"
                            }
                        },
                        "position": {
                            "comment": {
                                "text": "Preset position settings. By default the element is positioned below the target, left aligned."
                            }
                        },
                        "strategy": {
                            "comment": {
                                "text": "The relative position strategy to be applied to the overlay settings. Default is Auto positioning strategy."
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "Creates overlay settings with auto, connected or elastic position strategy and preset position settings"
                }
            },
            "attach": {
                "comment": {
                    "returns": "Id of the created overlay. Valid until `onClosed` is emitted.\n",
                    "parameters": {
                        "component": {
                            "comment": {
                                "text": "Component Type to show in overlay"
                            }
                        },
                        "settings": {
                            "comment": {
                                "text": "Display settings for the overlay, such as positioning and scroll/close behavior."
                            }
                        },
                        "moduleRef": {
                            "comment": {
                                "text": [
                                    "Optional reference to an object containing Injector and ComponentFactoryResolver",
                                    "that can resolve the component's factory"
                                ]
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "Generates Id. Provide this Id when call `show(id)` method"
                }
            },
            "detach": {
                "comment": {
                    "parameters": {
                        "id": {
                            "comment": {
                                "text": [
                                    "Id of the overlay to remove",
                                    "```typescript",
                                    "this.overlay.detach(id);",
                                    "```"
                                ]
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "Remove overlay with the provided id."
                }
            },
            "detachAll": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Remove all the overlays.",
                        "```typescript",
                        "this.overlay.detachAll();",
                        "```"
                    ]
                }
            },
            "show": {
                "comment": {
                    "parameters": {
                        "id": {
                            "comment": {
                                "text": "Id to show overlay for"
                            }
                        },
                        "settings": {
                            "comment": {
                                "text": "Display settings for the overlay, such as positioning and scroll/close behavior."
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "Shows the overlay for provided id."
                }
            },
            "hide": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Hides the component with the ID provided as a parameter.",
                        "```typescript",
                        "this.overlay.hide(id);",
                        "```"
                    ]
                }
            },
            "hideAll": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Hides all the components and the overlay.",
                        "```typescript",
                        "this.overlay.hideAll();",
                        "```"
                    ]
                }
            },
            "reposition": {
                "comment": {
                    "parameters": {
                        "id": {
                            "comment": {
                                "text": [
                                    "Id to reposition overlay for",
                                    "```typescript",
                                    "this.overlay.reposition(id);",
                                    "```"
                                ]
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "Repositions the component with ID provided as a parameter."
                }
            },
            "setOffset": {
                "comment": {
                    "parameters": {
                        "id": {
                            "comment": {
                                "text": "Id to offset overlay for"
                            }
                        },
                        "deltaX": {
                            "comment": {
                                "text": "Amount of offset in horizontal direction"
                            }
                        },
                        "deltaY": {
                            "comment": {
                                "text": [
                                    "Amount of offset in vertical direction",
                                    "```typescript",
                                    "this.overlay.setOffset(id, deltaX, deltaY);",
                                    "```"
                                ]
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "Offsets the content along the corresponding axis by the provided amount"
                }
            }
        },
        "accessors": {}
    }
}
{
    "IgxInputGroupComponent": {
        "properties": {
            "element": {
                "comment": {
                    "shortText": [
                        "`IgxInputGroupComponent` の ElementRef プロパティ。"
                    ]
                }
            },
            "id": {
                "comment": {
                    "shortText": [
                        "`id` 属性の値を設定する @Input プロパティ。提供されていない場合、自動的に生成されます。",
                        "```html",
                        "<igx-input-group [id]=\"'igx-input-group-55'\"></igx-input-group>",
                        "```"
                    ]
                }
            },
            "defaultClass": {
                "comment": {
                    "shortText": [
                        "`IgxInputGroupComponent` の自動生成されたクラスを有効/無効にするプロパティ。",
                        "デフォルトでクラスが適用されます。",
                        "```typescript",
                        "@ViewChild(\"MyInputGroup\")",
                        "public inputGroup: IgxInputGroupComponent;",
                        "ngAfterViewInit(){",
                        "this.inputGroup.defaultClass = false;",
                        "```",
                        "}"
                    ]
                }
            },
            "disabled": {
                "comment": {
                    "shortText": [
                        "`IgxInputGroupComponent` を無効にする @Input プロパティ。",
                        "```html",
                        "<igx-input-group [disabled]=\"'true'\"></igx-input-group>",
                        "```"
                    ]
                }
            }
        },
        "methods": {},
        "accessors": {
            "type": {
                "setter": {
                    "comment": {
                        "shortText": [
                            "入力のスタイルを設定する @Input プロパティ。",
                            "有効な値は `line`、`box`、`border`、および `search` です。デフォルト値は `line` です。",
                            "```html",
                            "<igx-input-group [type]=\"'search'\">",
                            "```"
                        ]
                    }
                },
                "getter": {
                    "comment": {
                        "shortText": [
                            "`IgxInputGroupComponent` のタイプを返します。入力のスタイル設定。",
                            "利用可能な値は `line` - 0、`box` - 1、`border` - 2、おおび `search` - 3。デフォルト値は `line` です。",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let inputType = this.inputGroup.type;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "supressInputAutofocus": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "入力グループの入力要素がオンクリックで自動的にフォーカスされるかどうかを返します。",
                            "```typescript",
                            "let supressInputAutofocus = this.inputGroup.supressInputAutofocus;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "shortText": [
                            "入力グループの入力要素がオンクリックで自動的にフォーカスされるかどうかを設定します。",
                            "```html",
                            "<igx-input-group [supressInputAutofocus]=\"true\"></igx-input-group>",
                            "```"
                        ]
                    }
                }
            },
            "hasHints": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "`IgxInputGroupComponent` にヒントがあるかどうかを返します。",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let inputHints = this.inputGroup.hasHints;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "hasBorder": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "`IgxInputGroupComponent` に境界線があるかどうかを返します。",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let inputBroder = this.inputGroup.hasBorder;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "isTypeLine": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "`IgxInputGroupComponent` の type が line かどうかを返します。",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup1\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let isTypeLine = this.inputGroup.isTypeLine;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "isTypeBox": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "`IgxInputGroupComponent` の type が box かどうかを返します。",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup1\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let isTypeBox = this.inputGroup.isTypeBox;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "isTypeBorder": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "`IgxInputGroupComponent` の type が border かどうかを返します。",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup1\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let isTypeBorder = this.inputGroup.isTypeBorder;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "isTypeSearch": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "`IgxInputGroupComponent` の type が search かどうかを返します。",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup1\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let isTypeSearch = this.inputGroup.isTypeSearch;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "displayDensity": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "コンポーネントのテーマを返します。",
                            "デフォルト テーマは `comfortable` です。",
                            "利用可能なオプションは `comfortable`、`cosy`、および `compact` です。",
                            "```typescript",
                            "let componentTheme = this.component.displayDensity;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "shortText": "コンポーネントのテーマを設定します。"
                    }
                }
            }
        }
    }
}

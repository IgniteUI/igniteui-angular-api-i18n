{
    "IgxTreeGridComponent": {
        "comment": {
            "blockTags": [],
            "modifierTags": {},
            "summary": [
                {
                    "kind": "text",
                    "text": "**Ignite UI for Angular Tree Grid** -\n[Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/grid/grid)\n\nThe Ignite UI Tree Grid displays and manipulates hierarchical data with consistent schema formatted as a table and\nprovides features such as sorting, filtering, editing, column pinning, paging, column moving and hiding.\n\nExample:\n"
                },
                {
                    "kind": "code",
                    "text": "```html\n<igx-tree-grid [data]=\"employeeData\" primaryKey=\"employeeID\" foreignKey=\"PID\" [autoGenerate]=\"false\">\n  <igx-column field=\"first\" header=\"First Name\"></igx-column>\n  <igx-column field=\"last\" header=\"Last Name\"></igx-column>\n  <igx-column field=\"role\" header=\"Role\"></igx-column>\n</igx-tree-grid>\n```"
                }
            ]
        },
        "properties": {
            "childDataKey": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@Input",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "property that sets the child data key of the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxTreeGridComponent`"
                                },
                                {
                                    "kind": "text",
                                    "text": ".\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-tree-grid #grid [data]=\"employeeData\" [childDataKey]=\"'employees'\" [autoGenerate]=\"true\"></igx-tree-grid>\n```"
                                }
                            ]
                        },
                        {
                            "tag": "@memberof",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "IgxTreeGridComponent"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "An"
                        }
                    ]
                }
            },
            "foreignKey": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@Input",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "property that sets the foreign key of the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxTreeGridComponent`"
                                },
                                {
                                    "kind": "text",
                                    "text": ".\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-tree-grid #grid [data]=\"employeeData\" [primaryKey]=\"'employeeID'\" [foreignKey]=\"'parentID'\" [autoGenerate]=\"true\">\n</igx-tree-grid>\n```"
                                }
                            ]
                        },
                        {
                            "tag": "@memberof",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "IgxTreeGridComponent"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "An"
                        }
                    ]
                }
            },
            "hasChildrenKey": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@Input",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "property that sets the key indicating whether a row has children.\nThis property is only used for load on demand scenarios.\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-tree-grid #grid [data]=\"employeeData\" [primaryKey]=\"'employeeID'\" [foreignKey]=\"'parentID'\"\n               [loadChildrenOnDemand]=\"loadChildren\"\n               [hasChildrenKey]=\"'hasEmployees'\">\n</igx-tree-grid>\n```"
                                }
                            ]
                        },
                        {
                            "tag": "@memberof",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "IgxTreeGridComponent"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "An"
                        }
                    ]
                }
            },
            "cascadeOnDelete": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@Input",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "property indicating whether child records should be deleted when their parent gets deleted.\nBy default it is set to true and deletes all children along with the parent.\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-tree-grid [data]=\"employeeData\" [primaryKey]=\"'employeeID'\" [foreignKey]=\"'parentID'\" cascadeOnDelete=\"false\">\n</igx-tree-grid>\n```"
                                }
                            ]
                        },
                        {
                            "tag": "@memberof",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "IgxTreeGridComponent"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "An"
                        }
                    ]
                }
            },
            "id": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@Input",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "property that sets the value of the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`id`"
                                },
                                {
                                    "kind": "text",
                                    "text": " attribute. If not provided it will be automatically generated.\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-tree-grid [id]=\"'igx-tree-grid-1'\"></igx-tree-grid>\n```"
                                }
                            ]
                        },
                        {
                            "tag": "@memberof",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "IgxTreeGridComponent"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "An"
                        }
                    ]
                }
            },
            "rootRecords": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@memberof",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "IgxTreeGridComponent"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns an array of the root level "
                        },
                        {
                            "kind": "code",
                            "text": "`ITreeGridRecord`"
                        },
                        {
                            "kind": "text",
                            "text": "s.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// gets the root record with index=2\nconst states = this.grid.rootRecords[2];\n```"
                        }
                    ]
                }
            },
            "records": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@memberof",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "IgxTreeGridComponent"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns a map of all "
                        },
                        {
                            "kind": "code",
                            "text": "`ITreeGridRecord`"
                        },
                        {
                            "kind": "text",
                            "text": "s.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// gets the record with primaryKey=2\nconst states = this.grid.records.get(2);\n```"
                        }
                    ]
                }
            },
            "processedRootRecords": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@memberof",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "IgxTreeGridComponent"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns an array of processed (filtered and sorted) root "
                        },
                        {
                            "kind": "code",
                            "text": "`ITreeGridRecord`"
                        },
                        {
                            "kind": "text",
                            "text": "s.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// gets the processed root record with index=2\nconst states = this.grid.processedRootRecords[2];\n```"
                        }
                    ]
                }
            },
            "processedRecords": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@memberof",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "IgxTreeGridComponent"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns a map of all processed (filtered and sorted) "
                        },
                        {
                            "kind": "code",
                            "text": "`ITreeGridRecord`"
                        },
                        {
                            "kind": "text",
                            "text": "s.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// gets the processed record with primaryKey=2\nconst states = this.grid.processedRecords.get(2);\n```"
                        }
                    ]
                }
            },
            "snackbarDisplayTime": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "By default it is 6000ms."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/Sets the display time for the row adding snackbar notification."
                        }
                    ]
                }
            },
            "autoGenerate": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "The default value is false. When set to true, it will override all columns declared through code or in markup."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid [data]=\"Data\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/Sets whether to auto-generate the columns."
                        }
                    ]
                }
            },
            "autoGenerateExclude": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "The collection is only used during initialization and changing it will not cause any changes in the generated columns at runtime\nunless the grid is destroyed and recreated. To modify the columns visible in the UI at runtime, please use their\n[hidden](https://www.infragistics.com/products/ignite-ui-angular/docs/typescript/latest/classes/IgxColumnComponent.html#hidden) property."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid data=[Data] [autoGenerate]=\"true\" [autoGenerateExclude]=\"['ProductName', 'Count']\"></igx-grid>\n```"
                                },
                                {
                                    "kind": "text",
                                    "text": "\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```typescript\nconst Data = [{ 'Id': '1', 'ProductName': 'name1', 'Description': 'description1', 'Count': 5 }]\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/Sets a list of property keys to be excluded from the generated column collection"
                        }
                    ]
                }
            },
            "moving": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Controls whether columns moving is enabled in the grid."
                        }
                    ]
                }
            },
            "emptyGridTemplate": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid [id]=\"'igx-grid-1'\" [data]=\"Data\" [emptyGridTemplate]=\"myTemplate\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/Sets a custom template when empty."
                        }
                    ]
                }
            },
            "addRowEmptyTemplate": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid [id]=\"'igx-grid-1'\" [data]=\"Data\" [addRowEmptyTemplate]=\"myTemplate\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/Sets a custom template for adding row UI when grid is empty."
                        }
                    ]
                }
            },
            "loadingGridTemplate": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid [id]=\"'igx-grid-1'\" [data]=\"Data\" [loadingGridTemplate]=\"myTemplate\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/Sets a custom template when loading."
                        }
                    ]
                }
            },
            "clipboardOptions": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Controls the copy behavior of the grid."
                        }
                    ]
                }
            },
            "filteringExpressionsTreeChange": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the filtering expressions tree of the column for which filtering was performed."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\"\n             (filteringExpressionsTreeChange)=\"filteringExprTreeChange($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after filtering is performed."
                        }
                    ]
                }
            },
            "advancedFilteringExpressionsTreeChange": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the advanced filtering expressions tree."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\"\n          (advancedFilteringExpressionsTreeChange)=\"advancedFilteringExprTreeChange($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after advanced filtering is performed."
                        }
                    ]
                }
            },
            "gridScroll": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\"\n             (gridScroll)=\"onScroll($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when grid is scrolled horizontally/vertically."
                        }
                    ]
                }
            },
            "rowClasses": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@memberof",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "IgxColumnComponent"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Sets a conditional class selector to the grid's row element.\nAccepts an object literal, containing key-value pairs,\nwhere the key is the name of the CSS class and the value is\neither a callback function that returns a boolean, or boolean, like so:\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\ncallback = (row: RowType) => { return row.selected > 6; }\nrowClasses = { 'className' : this.callback };\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-grid #grid [data]=\"Data\" [rowClasses] = \"rowClasses\" [autoGenerate]=\"true\"></igx-grid>\n```"
                        }
                    ]
                }
            },
            "rowStyles": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@memberof",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "IgxColumnComponent"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Sets conditional style properties on the grid row element.\nIt accepts an object literal where the keys are\nthe style properties and the value is an expression to be evaluated.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nstyles = {\n background: 'yellow',\n color: (row: RowType) => row.selected : 'red': 'white'\n}\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-grid #grid [data]=\"Data\" [rowStyles]=\"styles\" [autoGenerate]=\"true\"></igx-grid>\n```"
                        }
                    ]
                }
            },
            "primaryKey": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" [primaryKey]=\"'ProductID'\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/Sets the primary key."
                        }
                    ]
                }
            },
            "cellClick": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxGridCell`"
                                },
                                {
                                    "kind": "text",
                                    "text": "."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid (cellClick)=\"cellClick($event)\" [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when a cell is clicked."
                        }
                    ]
                }
            },
            "formGroupCreated": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid (formGroupCreated)=\"formGroupCreated($event)\" [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when formGroup is created on edit of row/cell."
                        }
                    ]
                }
            },
            "validationStatusChange": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid (validationStatusChange)=\"validationStatusChange($event)\" [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when grid's validation status changes."
                        }
                    ]
                }
            },
            "selected": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxGridCell`"
                                },
                                {
                                    "kind": "text",
                                    "text": "."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid (selected)=\"onCellSelect($event)\" [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when a cell is selected."
                        }
                    ]
                }
            },
            "rowSelectionChanging": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid (rowSelectionChanging)=\"rowSelectionChanging($event)\" [data]=\"localData\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxGridRowComponent`"
                        },
                        {
                            "kind": "text",
                            "text": " is selected."
                        }
                    ]
                }
            },
            "columnSelectionChanging": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid (columnSelectionChanging)=\"columnSelectionChanging($event)\" [data]=\"localData\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxColumnComponent`"
                        },
                        {
                            "kind": "text",
                            "text": " is selected."
                        }
                    ]
                }
            },
            "columnPin": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "The index at which to insert the column may be changed through the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`insertAtIndex`"
                                },
                                {
                                    "kind": "text",
                                    "text": " property."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\npublic columnPinning(event) {\n    if (event.column.field === \"Name\") {\n      event.insertAtIndex = 0;\n    }\n}\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted before "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxColumnComponent`"
                        },
                        {
                            "kind": "text",
                            "text": " is pinned."
                        }
                    ]
                }
            },
            "columnPinned": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "The index that the column is inserted at may be changed through the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`insertAtIndex`"
                                },
                                {
                                    "kind": "text",
                                    "text": " property."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\npublic columnPinning(event) {\n    if (event.column.field === \"Name\") {\n      event.insertAtIndex = 0;\n    }\n}\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxColumnComponent`"
                        },
                        {
                            "kind": "text",
                            "text": " is pinned."
                        }
                    ]
                }
            },
            "cellEditEnter": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This event is cancelable."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid3 (cellEditEnter)=\"editStart($event)\" [data]=\"data\" [primaryKey]=\"'ProductID'\">\n</igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when cell enters edit mode."
                        }
                    ]
                }
            },
            "cellEditExit": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid3 (cellEditExit)=\"editExit($event)\" [data]=\"data\" [primaryKey]=\"'ProductID'\">\n</igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when cell exits edit mode."
                        }
                    ]
                }
            },
            "cellEdit": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Event is fired after editing is completed, when the cell is exiting edit mode.\nThis event is cancelable."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid3 (cellEdit)=\"editDone($event)\" [data]=\"data\" [primaryKey]=\"'ProductID'\">\n</igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when cell has been edited."
                        }
                    ]
                }
            },
            "cellEditDone": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid3 (cellEditDone)=\"editDone($event)\" [data]=\"data\" [primaryKey]=\"'ProductID'\">\n</igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after cell has been edited and editing has been committed."
                        }
                    ]
                }
            },
            "rowEditEnter": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Emitted when [rowEditable]=\"true\".\nThis event is cancelable."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid3 (rowEditEnter)=\"editStart($event)\" [primaryKey]=\"'ProductID'\" [rowEditable]=\"true\">\n</igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when a row enters edit mode."
                        }
                    ]
                }
            },
            "rowEdit": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Emitted when [rowEditable]=\"true\" & "
                                },
                                {
                                    "kind": "code",
                                    "text": "`endEdit(true)`"
                                },
                                {
                                    "kind": "text",
                                    "text": " is called.\nEmitted when changing rows during edit mode, selecting an un-editable cell in the edited row,\nperforming paging operation, column resizing, pinning, moving or hitting "
                                },
                                {
                                    "kind": "code",
                                    "text": "`Done`"
                                },
                                {
                                    "kind": "text",
                                    "text": "\nbutton inside of the rowEditingOverlay, or hitting the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`Enter`"
                                },
                                {
                                    "kind": "text",
                                    "text": " key while editing a cell.\nThis event is cancelable."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid3 (rowEdit)=\"editDone($event)\" [data]=\"data\" [primaryKey]=\"'ProductID'\" [rowEditable]=\"true\">\n</igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when exiting edit mode for a row."
                        }
                    ]
                }
            },
            "rowEditDone": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Emitted when [rowEditable]=\"true\" & "
                                },
                                {
                                    "kind": "code",
                                    "text": "`endEdit(true)`"
                                },
                                {
                                    "kind": "text",
                                    "text": " is called.\nEmitted when changing rows during edit mode, selecting an un-editable cell in the edited row,\nperforming paging operation, column resizing, pinning, moving or hitting "
                                },
                                {
                                    "kind": "code",
                                    "text": "`Done`"
                                },
                                {
                                    "kind": "text",
                                    "text": "\nbutton inside of the rowEditingOverlay, or hitting the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`Enter`"
                                },
                                {
                                    "kind": "text",
                                    "text": " key while editing a cell."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid3 (rowEditDone)=\"editDone($event)\" [data]=\"data\" [primaryKey]=\"'ProductID'\" [rowEditable]=\"true\">\n</igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after exiting edit mode for a row and editing has been committed."
                        }
                    ]
                }
            },
            "rowEditExit": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Emits when [rowEditable]=\"true\" & "
                                },
                                {
                                    "kind": "code",
                                    "text": "`endEdit(false)`"
                                },
                                {
                                    "kind": "text",
                                    "text": " is called.\nEmitted when changing hitting "
                                },
                                {
                                    "kind": "code",
                                    "text": "`Esc`"
                                },
                                {
                                    "kind": "text",
                                    "text": " key during cell editing and when click on the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`Cancel`"
                                },
                                {
                                    "kind": "text",
                                    "text": " button\nin the row editing overlay."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid3 (rowEditExit)=\"editExit($event)\" [data]=\"data\" [primaryKey]=\"'ProductID'\" [rowEditable]=\"true\">\n</igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when row editing is canceled."
                        }
                    ]
                }
            },
            "columnInit": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the column object."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" (columnInit)=\"initColumns($event)\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when a column is initialized."
                        }
                    ]
                }
            },
            "sorting": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns an "
                                },
                                {
                                    "kind": "code",
                                    "text": "`ISortingEventArgs`"
                                },
                                {
                                    "kind": "text",
                                    "text": " object. "
                                },
                                {
                                    "kind": "code",
                                    "text": "`sortingExpressions`"
                                },
                                {
                                    "kind": "text",
                                    "text": " key holds the sorting expressions."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" [autoGenerate]=\"true\" (sorting)=\"sorting($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted before sorting expressions are applied."
                        }
                    ]
                }
            },
            "sortingDone": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the sorting expression."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" [autoGenerate]=\"true\" (sortingDone)=\"sortingDone($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after sorting is completed."
                        }
                    ]
                }
            },
            "filtering": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns an "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IFilteringEventArgs`"
                                },
                                {
                                    "kind": "text",
                                    "text": " object. "
                                },
                                {
                                    "kind": "code",
                                    "text": "`filteringExpressions`"
                                },
                                {
                                    "kind": "text",
                                    "text": " key holds the filtering expressions for the column."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\" (filtering)=\"filtering($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted before filtering expressions are applied."
                        }
                    ]
                }
            },
            "filteringDone": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the filtering expressions tree of the column for which filtering was performed."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\" (filteringDone)=\"filteringDone($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after filtering is performed through the UI."
                        }
                    ]
                }
            },
            "rowAdded": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the data for the new "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxGridRowComponent`"
                                },
                                {
                                    "kind": "text",
                                    "text": " object."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" (rowAdded)=\"rowAdded($event)\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when a row is added."
                        }
                    ]
                }
            },
            "rowDeleted": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns an "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IRowDataEventArgs`"
                                },
                                {
                                    "kind": "text",
                                    "text": " object."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" (rowDeleted)=\"rowDeleted($event)\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when a row is deleted."
                        }
                    ]
                }
            },
            "rowDelete": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This event is cancelable.\nReturns an "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IGridEditEventArgs`"
                                },
                                {
                                    "kind": "text",
                                    "text": " object."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" (rowDelete)=\"rowDelete($event)\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emmited when deleting a row."
                        }
                    ]
                }
            },
            "rowAdd": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This event is cancelable.\nReturns an "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IGridEditEventArgs`"
                                },
                                {
                                    "kind": "text",
                                    "text": " object."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" (rowAdd)=\"rowAdd($event)\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emmited just before the newly added row is commited."
                        }
                    ]
                }
            },
            "columnResized": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxColumnComponent`"
                                },
                                {
                                    "kind": "text",
                                    "text": " object's old and new width."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" (columnResized)=\"resizing($event)\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after column is resized."
                        }
                    ]
                }
            },
            "contextMenu": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxGridCell`"
                                },
                                {
                                    "kind": "text",
                                    "text": " object.\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" (contextMenu)=\"contextMenu($event)\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when a cell is right clicked."
                        }
                    ]
                }
            },
            "doubleClick": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxGridCell`"
                                },
                                {
                                    "kind": "text",
                                    "text": " object."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" (doubleClick)=\"dblClick($event)\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when a cell is double clicked."
                        }
                    ]
                }
            },
            "columnVisibilityChanging": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Args: { column: any, newValue: boolean }"
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid (columnVisibilityChanging)=\"visibilityChanging($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted before column visibility is changed."
                        }
                    ]
                }
            },
            "columnVisibilityChanged": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Args: { column: IgxColumnComponent, newValue: boolean }"
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid (columnVisibilityChanged)=\"visibilityChanged($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after column visibility is changed."
                        }
                    ]
                }
            },
            "columnMovingStart": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the moved "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxColumnComponent`"
                                },
                                {
                                    "kind": "text",
                                    "text": " object."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid (columnMovingStart)=\"movingStart($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when column moving starts."
                        }
                    ]
                }
            },
            "columnMoving": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the source and target "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxColumnComponent`"
                                },
                                {
                                    "kind": "text",
                                    "text": " objects. This event is cancelable."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid (columnMoving)=\"moving($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted during the column moving operation."
                        }
                    ]
                }
            },
            "columnMovingEnd": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the source and target "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxColumnComponent`"
                                },
                                {
                                    "kind": "text",
                                    "text": " objects."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid (columnMovingEnd)=\"movingEnds($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when column moving ends."
                        }
                    ]
                }
            },
            "gridKeydown": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This event is fired only if the key combination is supported in the grid.\nReturn the target type, target object and the original event. This event is cancelable."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n <igx-grid (gridKeydown)=\"customKeydown($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when keydown is triggered over element inside grid's body."
                        }
                    ]
                }
            },
            "rowDragStart": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Return the dragged row."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when start dragging a row."
                        }
                    ]
                }
            },
            "rowDragEnd": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Return the dropped row."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when dropping a row."
                        }
                    ]
                }
            },
            "gridCopy": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Fired only if copy behavior is enabled through the ["
                                },
                                {
                                    "kind": "code",
                                    "text": "`clipboardOptions`"
                                },
                                {
                                    "kind": "text",
                                    "text": "]"
                                },
                                {
                                    "kind": "inline-tag",
                                    "tag": "@link",
                                    "text": "IgxGridBaseDirective#clipboardOptions"
                                },
                                {
                                    "kind": "text",
                                    "text": "."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when a copy operation is executed."
                        }
                    ]
                }
            },
            "rowToggle": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid [data]=\"employeeData\" (rowToggle)=\"rowToggle($event)\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when the expanded state of a row gets changed."
                        }
                    ]
                }
            },
            "rowPinning": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid [data]=\"employeeData\" (rowPinning)=\"rowPin($event)\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when the pinned state of a row is changed."
                        }
                    ]
                }
            },
            "rowPinned": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid [data]=\"employeeData\" (rowPinned)=\"rowPin($event)\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when the pinned state of a row is changed."
                        }
                    ]
                }
            },
            "activeNodeChange": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```\n<igx-grid [data]=\"data\" [autoGenerate]=\"true\" (activeNodeChange)=\"activeNodeChange($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emmited when the active node is changed."
                        }
                    ]
                }
            },
            "sortingExpressionsChange": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the sorting expressions."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" [autoGenerate]=\"true\" (sortingExpressionsChange)=\"sortingExprChange($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted before sorting is performed."
                        }
                    ]
                }
            },
            "toolbarExporting": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\ntoolbarExporting(event: IGridToolbarExportEventArgs){\n    const toolbarExporting = event;\n}\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when an export process is initiated by the user."
                        }
                    ]
                }
            },
            "rangeSelected": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Range selection can be made either through drag selection or through keyboard selection."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when making a range selection."
                        }
                    ]
                }
            },
            "rendered": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after the ngAfterViewInit hook. At this point the grid exists in the DOM"
                        }
                    ]
                }
            },
            "dataChanging": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\n <igx-grid #grid [data]=\"localData\" [autoGenerate]=\"true\" (dataChanging)='handleDataChangingEvent()'></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted before the grid's data view is changed because of a data operation, rebinding, etc."
                        }
                    ]
                }
            },
            "dataChanged": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\n <igx-grid #grid [data]=\"localData\" [autoGenerate]=\"true\" (dataChanged)='handleDataChangedEvent()'></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after the grid's data view is changed because of a data operation, rebinding, etc."
                        }
                    ]
                }
            },
            "validationTrigger": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid validationTrigger='blur'></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/Sets the trigger for validators used when editing the grid."
                        }
                    ]
                }
            },
            "shouldGenerate": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This will allow to bind the grid to remote data and having auto-generated columns at the same time.\nNote that after generating the columns, this property would be disabled to avoid re-creating\ncolumns each time a new data is assigned."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\n this.grid.shouldGenerate = true;\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/Sets whether the columns should be auto-generated once again after the initialization of the grid"
                        }
                    ]
                }
            },
            "lastSearchInfo": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Represents the last search information."
                        }
                    ]
                }
            }
        },
        "methods": {
            "__type": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Provides a callback for loading unique column values on demand.\nIf this property is provided, the unique values it generates will be used by the Excel Style Filtering."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid [data]=\"localData\" [filterMode]=\"'excelStyleFilter'\" [uniqueColumnValuesStrategy]=\"columnValuesStrategy\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/Sets a unique values strategy used by the Excel Style Filtering"
                        }
                    ]
                }
            },
            "expandAll": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@memberof",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "IgxTreeGridComponent"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Expands all rows.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.grid.expandAll();\n```"
                        }
                    ]
                }
            },
            "collapseAll": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@memberof",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "IgxTreeGridComponent"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Collapses all rows.\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.grid.collapseAll();\n ```"
                        }
                    ]
                }
            },
            "addRow": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@memberof",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "IgxTreeGridComponent"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Creates a new "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxTreeGridRowComponent`"
                        },
                        {
                            "kind": "text",
                            "text": " with the given data. If a parentRowID is not specified, the newly created\nrow would be added at the root level. Otherwise, it would be added as a child of the row whose primaryKey matches\nthe specified parentRowID. If the parentRowID does not exist, an error would be thrown.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nconst record = {\n    ID: this.grid.data[this.grid1.data.length - 1].ID + 1,\n    Name: this.newRecord\n};\nthis.grid.addRow(record, 1); // Adds a new child row to the row with ID=1.\n```"
                        }
                    ]
                }
            },
            "beginAddRowByIndex": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Accepted values for index are integers from 0 to this.grid.dataView.length"
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.beginAddRowByIndex(10);\nthis.grid.beginAddRowByIndex(10, true);\nthis.grid.beginAddRowByIndex(null);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Enters add mode by spawning the UI with the context of the specified row by index."
                        }
                    ]
                }
            },
            "getSelectedData": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "If "
                                },
                                {
                                    "kind": "code",
                                    "text": "`formatters`"
                                },
                                {
                                    "kind": "text",
                                    "text": " is enabled, the cell value will be formatted by its respective column formatter (if any).\nIf "
                                },
                                {
                                    "kind": "code",
                                    "text": "`headers`"
                                },
                                {
                                    "kind": "text",
                                    "text": " is enabled, it will use the column header (if any) instead of the column field."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns an array of the current cell selection in the form of "
                        },
                        {
                            "kind": "code",
                            "text": "`[{ column.field: cell.value }, ...]`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "getRowByIndex": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nconst myRow = treeGrid.getRowByIndex(1);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns the "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxTreeGridRow`"
                        },
                        {
                            "kind": "text",
                            "text": " by index."
                        }
                    ]
                }
            },
            "getRowByKey": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nconst myRow = this.treeGrid.getRowByIndex(1);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns the "
                        },
                        {
                            "kind": "code",
                            "text": "`RowType`"
                        },
                        {
                            "kind": "text",
                            "text": " object by the specified primary key."
                        }
                    ]
                }
            },
            "getCellByColumn": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nconst myCell = this.grid1.getCellByColumn(2, \"UnitPrice\");\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns a "
                        },
                        {
                            "kind": "code",
                            "text": "`CellType`"
                        },
                        {
                            "kind": "text",
                            "text": " object that matches the conditions."
                        }
                    ]
                }
            },
            "getCellByKey": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Requires that the primaryKey property is set."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\ngrid.getCellByKey(1, 'index');\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns a "
                        },
                        {
                            "kind": "code",
                            "text": "`CellType`"
                        },
                        {
                            "kind": "text",
                            "text": " object that matches the conditions."
                        }
                    ]
                }
            },
            "isRecordPinnedByIndex": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns whether the record is pinned or not."
                        }
                    ]
                }
            },
            "toggleColumnVisibility": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid1.toggleColumnVisibility({\n      column: this.grid1.columns[0],\n      newValue: true\n});\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Toggles the specified column's visibility."
                        }
                    ]
                }
            },
            "expandRow": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "ID is either the primaryKey value or the data record instance."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.expandRow(rowID);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Expands the row by its id."
                        }
                    ]
                }
            },
            "collapseRow": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "ID is either the primaryKey value or the data record instance."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.collapseRow(rowID);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Collapses the row by its id."
                        }
                    ]
                }
            },
            "toggleRow": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "ID is either the primaryKey value or the data record instance."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.toggleRow(rowID);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Toggles the row by its id."
                        }
                    ]
                }
            },
            "getHeaderGroupWidth": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets the "
                        },
                        {
                            "kind": "code",
                            "text": "`width`"
                        },
                        {
                            "kind": "text",
                            "text": " to be set on "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxGridHeaderGroupComponent`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "getColumnByName": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nconst myCol = this.grid1.getColumnByName(\"ID\");\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns the "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxColumnComponent`"
                        },
                        {
                            "kind": "text",
                            "text": " by field name."
                        }
                    ]
                }
            },
            "recalculateAutoSizes": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid1.recalculateAutoSizes();\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Recalculates all widths of columns that have size set to "
                        },
                        {
                            "kind": "code",
                            "text": "`auto`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "moveColumn": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\ngrid.moveColumn(column, target);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Places a column before or after the specified target column."
                        }
                    ]
                }
            },
            "markForCheck": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\ngrid.markForCheck();\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Triggers change detection for the "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxGridComponent`"
                        },
                        {
                            "kind": "text",
                            "text": ".\nCalling markForCheck also triggers the grid pipes explicitly, resulting in all updates being processed.\nMay degrade performance if used when not needed, or if misused:\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// DON'Ts:\n// don't call markForCheck from inside a loop\n// don't call markForCheck when a primitive has changed\ngrid.data.forEach(rec => {\n rec = newValue;\n grid.markForCheck();\n});\n\n// DOs\n// call markForCheck after updating a nested property\ngrid.data.forEach(rec => {\n rec.nestedProp1.nestedProp2 = newValue;\n});\ngrid.markForCheck();\n```"
                        }
                    ]
                }
            },
            "deleteRow": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Requires that the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`primaryKey`"
                                },
                                {
                                    "kind": "text",
                                    "text": " property is set.\nThe method accept rowSelector as a parameter, which is the rowID."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid1.deleteRow(0);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Removes the "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxGridRowComponent`"
                        },
                        {
                            "kind": "text",
                            "text": " and the corresponding data record by primary key."
                        }
                    ]
                }
            },
            "updateCell": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Requires that the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`primaryKey`"
                                },
                                {
                                    "kind": "text",
                                    "text": " property is set."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.gridWithPK.updateCell('Updated', 1, 'ProductName');\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Updates the "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxGridRowComponent`"
                        },
                        {
                            "kind": "text",
                            "text": " and the corresponding data record by primary key."
                        }
                    ]
                }
            },
            "updateRow": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "The row is specified by\nrowSelector parameter and the data source record with the passed value.\nThis method will apply requested update only if primary key is specified in the grid."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\ngrid.updateRow({\n      ProductID: 1, ProductName: 'Spearmint', InStock: true, UnitsInStock: 1, OrderDate: new Date('2005-03-21')\n  }, 1);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Updates the "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxGridRowComponent`"
                        }
                    ]
                }
            },
            "getRowData": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "If the primary key is not specified the row selector match the row data."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nconst data = grid.getRowData(94741);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns the data that is contained in the row component."
                        }
                    ]
                }
            },
            "sort": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Sort the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxGridComponent`"
                                },
                                {
                                    "kind": "text",
                                    "text": "'s "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxColumnComponent`"
                                },
                                {
                                    "kind": "text",
                                    "text": " based on the provided array of sorting expressions."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.sort({ fieldName: name, dir: SortingDirection.Asc, ignoreCase: false });\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Sort a single "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxColumnComponent`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "filter": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\npublic filter(term) {\n     this.grid.filter(\"ProductName\", term, IgxStringFilteringOperand.instance().condition(\"contains\"));\n}\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Filters a single "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxColumnComponent`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "filterGlobal": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\ngrid.filterGlobal('some', IgxStringFilteringOperand.instance().condition('contains'));\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Filters all the "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxColumnComponent`"
                        },
                        {
                            "kind": "text",
                            "text": " in the "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxGridComponent`"
                        },
                        {
                            "kind": "text",
                            "text": " with the same condition."
                        }
                    ]
                }
            },
            "enableSummaries": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "If you do not provide the customSummary, then the default summary for the column data type will be applied."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\ngrid.enableSummaries([{ fieldName: 'ProductName' }, { fieldName: 'ID' }]);\n```"
                                },
                                {
                                    "kind": "text",
                                    "text": "\nEnable summaries for the listed columns."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\ngrid.enableSummaries('ProductName');\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Enables summaries for the specified column and applies your customSummary."
                        }
                    ]
                }
            },
            "disableSummaries": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\ngrid.disableSummaries('ProductName');\n```"
                                }
                            ]
                        },
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Disable summaries for the listed columns."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\ngrid.disableSummaries([{ fieldName: 'ProductName' }]);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Disable summaries for the specified column."
                        }
                    ]
                }
            },
            "clearFilter": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Otherwise clears the filtering state of all "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxColumnComponent`"
                                },
                                {
                                    "kind": "text",
                                    "text": "s."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.clearFilter();\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "If name is provided, clears the filtering state of the corresponding "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxColumnComponent`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "clearSort": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "otherwise clears the sorting state of all "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxColumnComponent`"
                                },
                                {
                                    "kind": "text",
                                    "text": "."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.clearSort();\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "If name is provided, clears the sorting state of the corresponding "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxColumnComponent`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "pinColumn": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns whether the operation is successful."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.pinColumn(\"ID\");\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Pins a column by field name."
                        }
                    ]
                }
            },
            "unpinColumn": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.pinColumn(\"ID\");\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Unpins a column by field name. Returns whether the operation is successful."
                        }
                    ]
                }
            },
            "reflow": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Should be run when changing DOM elements dimentions manually that affect the grid's size."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.reflow();\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Recalculates grid width/height dimensions."
                        }
                    ]
                }
            },
            "findNext": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns how many times the grid contains the string."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.findNext(\"financial\");\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Finds the next occurrence of a given string in the grid and scrolls to the cell if it isn't visible."
                        }
                    ]
                }
            },
            "findPrev": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns how many times the grid contains the string."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.findPrev(\"financial\");\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Finds the previous occurrence of a given string in the grid and scrolls to the cell if it isn't visible."
                        }
                    ]
                }
            },
            "refreshSearch": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns how many times the grid contains the last search."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.refreshSearch();\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Reapplies the existing search."
                        }
                    ]
                }
            },
            "clearSearch": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.clearSearch();\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Removes all the highlights in the cell."
                        }
                    ]
                }
            },
            "getPinnedWidth": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nconst pinnedWidth = this.grid.getPinnedWidth();\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets calculated width of the pinned area."
                        }
                    ]
                }
            },
            "selectRows": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.selectRows([1,2,5], true);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Select specified rows by ID."
                        }
                    ]
                }
            },
            "deselectRows": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.deselectRows([1,2,5]);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Deselect specified rows by ID."
                        }
                    ]
                }
            },
            "selectAllRows": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "By default if filtering is in place, selectAllRows() and deselectAllRows() select/deselect all filtered rows.\nIf you set the parameter onlyFilterData to false that will select all rows in the grid exept deleted rows."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.selectAllRows();\nthis.grid.selectAllRows(false);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Selects all rows"
                        }
                    ]
                }
            },
            "deselectAllRows": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "By default if filtering is in place, selectAllRows() and deselectAllRows() select/deselect all filtered rows.\nIf you set the parameter onlyFilterData to false that will deselect all rows in the grid exept deleted rows."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.deselectAllRows();\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Deselects all rows"
                        }
                    ]
                }
            },
            "clearCellSelection": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.clearCellSelection();\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Deselect selected cells."
                        }
                    ]
                }
            },
            "selectRange": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Select range(s) of cells between certain rows and columns of the grid."
                        }
                    ]
                }
            },
            "getSelectedRanges": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Get the currently selected ranges in the grid."
                        }
                    ]
                }
            },
            "selectedColumns": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns an array with selected columns\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```typescript\nconst selectedColumns = this.grid.selectedColumns();\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Get current selected columns."
                        }
                    ]
                }
            },
            "selectColumns": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.selectColumns(['ID','Name'], true);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Select specified columns."
                        }
                    ]
                }
            },
            "deselectColumns": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.deselectColumns(['ID','Name']);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Deselect specified columns by field."
                        }
                    ]
                }
            },
            "deselectAllColumns": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.deselectAllColumns();\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Deselects all columns"
                        }
                    ]
                }
            },
            "selectAllColumns": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.deselectAllColumns();\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Selects all columns"
                        }
                    ]
                }
            },
            "getSelectedColumnsData": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "If "
                                },
                                {
                                    "kind": "code",
                                    "text": "`formatters`"
                                },
                                {
                                    "kind": "text",
                                    "text": " is enabled, the cell value will be formatted by its respective column formatter (if any).\nIf "
                                },
                                {
                                    "kind": "code",
                                    "text": "`headers`"
                                },
                                {
                                    "kind": "text",
                                    "text": " is enabled, it will use the column header (if any) instead of the column field."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns an array of the current columns selection in the form of "
                        },
                        {
                            "kind": "code",
                            "text": "`[{ column.field: cell.value }, ...]`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "navigateTo": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Also can execute a custom logic over the target element,\nthrough a callback function that accepts { targetType: GridKeydownTargetType, target: Object }"
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\n this.grid.navigateTo(10, 3, (args) => { args.target.nativeElement.focus(); });\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Navigates to a position in the grid based on provided "
                        },
                        {
                            "kind": "code",
                            "text": "`rowindex`"
                        },
                        {
                            "kind": "text",
                            "text": " and "
                        },
                        {
                            "kind": "code",
                            "text": "`visibleColumnIndex`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "getNextCell": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "You can pass callback function as a third parameter of "
                                },
                                {
                                    "kind": "code",
                                    "text": "`getPreviousCell`"
                                },
                                {
                                    "kind": "text",
                                    "text": " method.\nThe callback function accepts IgxColumnComponent as a param"
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\n const nextEditableCellPosition = this.grid.getNextCell(0, 3, (column) => column.editable);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns "
                        },
                        {
                            "kind": "code",
                            "text": "`ICellPosition`"
                        },
                        {
                            "kind": "text",
                            "text": " which defines the next cell,\naccording to the current position, that match specific criteria."
                        }
                    ]
                }
            },
            "getPreviousCell": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "You can pass callback function as a third parameter of "
                                },
                                {
                                    "kind": "code",
                                    "text": "`getPreviousCell`"
                                },
                                {
                                    "kind": "text",
                                    "text": " method.\nThe callback function accepts IgxColumnComponent as a param"
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\n const previousEditableCellPosition = this.grid.getPreviousCell(0, 3, (column) => column.editable);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns "
                        },
                        {
                            "kind": "code",
                            "text": "`ICellPosition`"
                        },
                        {
                            "kind": "text",
                            "text": " which defines the previous cell,\naccording to the current position, that match specific criteria."
                        }
                    ]
                }
            },
            "openAdvancedFilteringDialog": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Opens the advanced filtering dialog."
                        }
                    ]
                }
            },
            "closeAdvancedFilteringDialog": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Closes the advanced filtering dialog."
                        }
                    ]
                }
            },
            "endEdit": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "If "
                                },
                                {
                                    "kind": "code",
                                    "text": "`commit === true`"
                                },
                                {
                                    "kind": "text",
                                    "text": ", passes them from the pending state to the data (or transaction service)"
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<button type=\"button\" igxButton (click)=\"grid.endEdit(true)\">Commit Row</button>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Finishes the row transactions on the current row and returns whether the grid editing was canceled."
                        }
                    ]
                }
            },
            "beginAddRowById": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "If null is passed as rowID, the row adding UI is spawned as the first record in the data view"
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.beginAddRowById('ALFKI');\nthis.grid.beginAddRowById('ALFKI', true);\nthis.grid.beginAddRowById(null);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Enters add mode by spawning the UI under the specified row by rowID."
                        }
                    ]
                }
            },
            "getComponentSizeStyles": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Sets the "
                        },
                        {
                            "kind": "code",
                            "text": "`--component-size`"
                        },
                        {
                            "kind": "text",
                            "text": " CSS variable based on the value of Display Density"
                        }
                    ]
                }
            }
        },
        "accessors": {
            "data": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@Input",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "property that lets you fill the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`IgxTreeGridComponent`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " with an array of data.\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-tree-grid [data]=\"Data\" [autoGenerate]=\"true\"></igx-tree-grid>\n```"
                                    }
                                ]
                            },
                            {
                                "tag": "@memberof",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "IgxTreeGridComponent"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "An"
                            }
                        ]
                    }
                }
            },
            "expansionDepth": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@Input",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "property that sets the count of levels to be expanded in the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`IgxTreeGridComponent`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ". By default it is\nset to "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Infinity`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " which means all levels would be expanded.\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-tree-grid #grid [data]=\"employeeData\" [childDataKey]=\"'employees'\" expansionDepth=\"1\" [autoGenerate]=\"true\"></igx-tree-grid>\n```"
                                    }
                                ]
                            },
                            {
                                "tag": "@memberof",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "IgxTreeGridComponent"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "An"
                            }
                        ]
                    }
                }
            },
            "rowLoadingIndicatorTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@Input",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "property that provides a template for the row loading indicator when load on demand is enabled.\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```html\n<ng-template #rowLoadingTemplate>\n    <igx-icon>loop</igx-icon>\n</ng-template>\n\n<igx-tree-grid #grid [data]=\"employeeData\" [primaryKey]=\"'ID'\" [foreignKey]=\"'parentID'\"\n               [loadChildrenOnDemand]=\"loadChildren\"\n               [rowLoadingIndicatorTemplate]=\"rowLoadingTemplate\">\n</igx-tree-grid>\n```"
                                    }
                                ]
                            },
                            {
                                "tag": "@memberof",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "IgxTreeGridComponent"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "An"
                            }
                        ]
                    }
                }
            },
            "selectedCells": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst selectedCells = this.grid.selectedCells;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns an array of the selected "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxGridCell`"
                            },
                            {
                                "kind": "text",
                                "text": "s."
                            }
                        ]
                    }
                }
            },
            "summaryRowHeight": {
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Get/Set IgxSummaryRow height"
                            }
                        ]
                    }
                }
            },
            "dataCloneStrategy": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n <igx-grid #grid [data]=\"localData\" [dataCloneStrategy]=\"customCloneStrategy\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the data clone strategy of the grid when in edit mode."
                            }
                        ]
                    }
                }
            },
            "dragGhostCustomTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the custom template, if any, used for row drag ghost."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets a custom template for the row drag ghost.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template #template igxRowDragGhost>\n   <igx-icon>menu</igx-icon>\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"'template'\", {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.dragGhostCustomTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "rowEditTextTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the row edit text template."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the row edit text template.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template #template igxRowEditText let-rowChangesCount>\nChanges: {{rowChangesCount}}\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild('template', {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.rowEditTextTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "rowAddTextTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the row add text template."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the row add text template.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template #template igxRowAddText>\nAdding Row\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild('template', {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.rowAddTextTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "rowEditActionsTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the row edit actions template."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the row edit actions template.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template #template igxRowEditActions let-endRowEdit>\n    <button type=\"button\" igxButton igxRowEditTabStop (click)=\"endRowEdit(false)\">Cancel</button>\n    <button type=\"button\" igxButton igxRowEditTabStop (click)=\"endRowEdit(true)\">Apply</button>\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild('template', {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.rowEditActionsTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "rowExpandedIndicatorTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the row expand indicator template."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the row expand indicator template.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template igxRowExpandedIndicator>\n <igx-icon role=\"button\">remove</igx-icon>\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild('template', {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.rowExpandedIndicatorTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "rowCollapsedIndicatorTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the row collapse indicator template."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the row collapse indicator template.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template igxRowCollapsedIndicator>\n <igx-icon role=\"button\">add</igx-icon>\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild('template', {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.rowCollapsedIndicatorTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "headerExpandedIndicatorTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the header expand indicator template."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the header expand indicator template.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template igxHeaderExpandedIndicator>\n <igx-icon role=\"button\">remove</igx-icon>\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild('template', {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.headerExpandedIndicatorTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "headerCollapsedIndicatorTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the row collapse indicator template."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the row collapse indicator template.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template igxHeaderCollapsedIndicator>\n <igx-icon role=\"button\">add</igx-icon>\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild('template', {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.headerCollapsedIndicatorTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "excelStyleHeaderIconTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the excel style header icon."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the excel style header icon.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template #template igxExcelStyleHeaderIcon>\n<igx-icon>filter_alt</igx-icon>\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild('template', {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.excelStyleHeaderIconTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "sortAscendingHeaderIconTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "The custom template, if any, that should be used when rendering a header sorting indicator when columns are sorted in asc order."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets a custom template that should be used when rendering a header sorting indicator when columns are sorted in asc order.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template #template igxSortAscendingHeaderIcon>\n   <igx-icon>expand_less</igx-icon>\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"'template'\", {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.sortAscendingHeaderIconTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "sortDescendingHeaderIconTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "The custom template, if any, that should be used when rendering a header sorting indicator when columns are sorted in desc order."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets a custom template that should be used when rendering a header sorting indicator when columns are sorted in desc order.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template #template igxSortDescendingHeaderIcon>\n   <igx-icon>expand_more</igx-icon>\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"'template'\", {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.sortDescendingHeaderIconTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "sortHeaderIconTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets custom template, if any, that should be used when rendering a header sorting indicator when columns are not sorted."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets a custom template that should be used when rendering a header sorting indicator when columns are not sorted.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template #template igxSortHeaderIcon>\n   <igx-icon>unfold_more</igx-icon>\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"'template'\", {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.sortHeaderIconTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "resourceStrings": {
                "setter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "By default it uses EN resources."
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the resource strings."
                            }
                        ]
                    }
                }
            },
            "filteringLogic": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "The default is AND."
                                    }
                                ]
                            },
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid [data]=\"Data\" [autoGenerate]=\"true\" [filteringLogic]=\"filtering\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the filtering logic of the "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxGridComponent`"
                            },
                            {
                                "kind": "text",
                                "text": "."
                            }
                        ]
                    }
                }
            },
            "filteringExpressionsTree": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [data]=\"Data\" [autoGenerate]=\"true\" [(filteringExpressionsTree)]=\"model.filteringExpressions\"></igx-grid>\n```"
                                    }
                                ]
                            },
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "Supports two-way binding."
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the filtering state."
                            }
                        ]
                    }
                }
            },
            "advancedFilteringExpressionsTree": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nlet advancedFilteringExpressionsTree = this.grid.advancedFilteringExpressionsTree;\nthis.grid.advancedFilteringExpressionsTree = logic;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the advanced filtering state."
                            }
                        ]
                    }
                }
            },
            "locale": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "If not set, returns browser's language."
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the locale."
                            }
                        ]
                    }
                }
            },
            "hideRowSelectors": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "By default row selectors are shown"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets if the row selectors are hidden."
                            }
                        ]
                    }
                }
            },
            "rowDraggable": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [rowDraggable]=\"true\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets whether rows can be moved."
                            }
                        ]
                    }
                }
            },
            "rowEditable": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "By default it is set to false."
                                    }
                                ]
                            },
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [rowEditable]=\"true\" [primaryKey]=\"'ProductID'\" ></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets whether the rows are editable."
                            }
                        ]
                    }
                }
            },
            "height": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [data]=\"Data\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the height."
                            }
                        ]
                    }
                }
            },
            "width": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nlet gridWidth = this.grid.width;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the width of the grid."
                            }
                        ]
                    }
                }
            },
            "rowHeight": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [data]=\"localData\" [rowHeight]=\"100\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the row height."
                            }
                        ]
                    }
                }
            },
            "columnWidth": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [data]=\"localData\" [columnWidth]=\"100\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the default width of the columns."
                            }
                        ]
                    }
                }
            },
            "emptyGridMessage": {
                "setter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [data]=\"Data\" [emptyGridMessage]=\"'The grid is empty'\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Get/Sets the message displayed when there are no records."
                            }
                        ]
                    }
                }
            },
            "isLoading": {
                "setter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [data]=\"Data\" [isLoading]=\"true\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets whether the grid is going to show a loading indicator."
                            }
                        ]
                    }
                }
            },
            "emptyFilteredGridMessage": {
                "setter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [data]=\"Data\" [emptyGridMessage]=\"'The grid is empty'\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the message displayed when there are no records and the grid is filtered."
                            }
                        ]
                    }
                }
            },
            "pinning": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "Allows to apply pinning the columns to the start or the end.\nNote that pinning to both sides at a time is not allowed."
                                    }
                                ]
                            },
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid [pinning]=\"pinningConfig\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the initial pinning configuration."
                            }
                        ]
                    }
                }
            },
            "allowFiltering": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [data]=\"localData\" [allowFiltering]=\"true\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets if the filtering is enabled."
                            }
                        ]
                    }
                }
            },
            "allowAdvancedFiltering": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [data]=\"localData\" [allowAdvancedFiltering]=\"true\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets a value indicating whether the advanced filtering is enabled."
                            }
                        ]
                    }
                }
            },
            "filterMode": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [data]=\"localData\" [filterMode]=\"'quickFilter'\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                    }
                                ]
                            },
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "By default it's set to FilterMode.quickFilter."
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the filter mode."
                            }
                        ]
                    }
                }
            },
            "summaryPosition": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [data]=\"localData\" summaryPosition=\"top\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                    }
                                ]
                            },
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "By default it is bottom."
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the summary position."
                            }
                        ]
                    }
                }
            },
            "summaryCalculationMode": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [data]=\"localData\" summaryCalculationMode=\"rootLevelOnly\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                    }
                                ]
                            },
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "By default it is rootAndChildLevels which means the summaries are calculated for the root level and each child level."
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the summary calculation mode."
                            }
                        ]
                    }
                }
            },
            "showSummaryOnCollapse": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [data]=\"localData\" [showSummaryOnCollapse]=\"true\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                    }
                                ]
                            },
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "By default showSummaryOnCollapse is set to 'false' which means that the summary row is not visible\nwhen the groupBy/parent row is collapsed."
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Controls whether the summary row is visible when groupBy/parent row is collapsed."
                            }
                        ]
                    }
                }
            },
            "filterStrategy": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n <igx-grid #grid [data]=\"localData\" [filterStrategy]=\"filterStrategy\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the filtering strategy of the grid."
                            }
                        ]
                    }
                }
            },
            "sortStrategy": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n <igx-grid #grid [data]=\"localData\" [sortStrategy]=\"sortStrategy\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the sorting strategy of the grid."
                            }
                        ]
                    }
                }
            },
            "sortingOptions": {
                "setter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst _sortingOptions: ISortingOptions = {\n     mode: 'single'\n}\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "html\n<igx-grid [sortingOptions]=\"sortingOptions\"><igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the sorting options - single or multiple sorting.\nAccepts an "
                            },
                            {
                                "kind": "code",
                                "text": "`ISortingOptions`"
                            },
                            {
                                "kind": "text",
                                "text": " object with any of the "
                            },
                            {
                                "kind": "code",
                                "text": "`mode`"
                            },
                            {
                                "kind": "text",
                                "text": " properties."
                            }
                        ]
                    }
                }
            },
            "selectedRows": {
                "setter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "Represents the selected rows' IDs (primary key or rowData)"
                                    }
                                ]
                            },
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid [data]=\"localData\" primaryKey=\"ID\" rowSelection=\"multiple\" [selectedRows]=\"[0, 1, 2]\"><igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the current selection state."
                            }
                        ]
                    }
                }
            },
            "rowList": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst rowList = this.grid.rowList;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "A list of "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxGridRowComponent`"
                            },
                            {
                                "kind": "text",
                                "text": "."
                            }
                        ]
                    }
                }
            },
            "dataRowList": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst dataList = this.grid.dataRowList;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "A list of currently rendered "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxGridRowComponent`"
                            },
                            {
                                "kind": "text",
                                "text": "'s."
                            }
                        ]
                    }
                }
            },
            "headSelectorTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the header row selector template."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the header row selector template.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template #template igxHeadSelector let-headContext>\n{{ headContext.selectedCount }} / {{ headContext.totalCount  }}\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"'template'\", {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.headSelectorTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "rowSelectorTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the row selector template."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets a custom template for the row selectors.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template #template igxRowSelector let-rowContext>\n   <igx-checkbox [checked]=\"rowContext.selected\"></igx-checkbox>\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"'template'\", {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.rowSelectorTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "dragIndicatorIconTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "The custom template, if any, that should be used when rendering the row drag indicator icon"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets a custom template that should be used when rendering the row drag indicator icon.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template #template igxDragIndicatorIcon>\n   <igx-icon>expand_less</igx-icon>\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"'template'\", {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.dragIndicatorIconTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "sortingExpressions": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "Supports two-way data binding."
                                    }
                                ]
                            },
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [data]=\"Data\" [autoGenerate]=\"true\" [(sortingExpressions)]=\"model.sortingExpressions\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the sorting state."
                            }
                        ]
                    }
                }
            },
            "hiddenColumnsCount": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst hiddenCol = this.grid.hiddenColumnsCount;\n``"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the number of hidden columns."
                            }
                        ]
                    }
                }
            },
            "pinnedColumnsCount": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the number of pinned columns."
                            }
                        ]
                    }
                }
            },
            "batchEditing": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid [batchEditing]=\"true\" [data]=\"someData\">\n</igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets whether the grid has batch editing enabled.\nWhen batch editing is enabled, changes are not made directly to the underlying data.\nInstead, they are stored as transactions, which can later be committed w/ the "
                            },
                            {
                                "kind": "code",
                                "text": "`commit`"
                            },
                            {
                                "kind": "text",
                                "text": " method."
                            }
                        ]
                    }
                }
            },
            "cellSelection": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "By default the cell selection mode is multiple"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets cell selection mode."
                            }
                        ]
                    }
                }
            },
            "rowSelection": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "By default the row selection mode is 'none'\nNote that in IgxGrid and IgxHierarchicalGrid 'multipleCascade' behaves like 'multiple'"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets row selection mode"
                            }
                        ]
                    }
                }
            },
            "columnSelection": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "By default the row selection mode is none"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets column selection mode"
                            }
                        ]
                    }
                }
            },
            "filteredData": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nlet filteredData = this.grid.filteredData;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns an array of objects containing the filtered data."
                            }
                        ]
                    }
                }
            },
            "filteredSortedData": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst filteredSortedData = this.grid1.filteredSortedData;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns an array containing the filtered sorted data."
                            }
                        ]
                    }
                }
            },
            "virtualizationState": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "Includes the start index and how many records are rendered."
                                    }
                                ]
                            },
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst gridVirtState = this.grid1.virtualizationState;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the state of the grid virtualization."
                            }
                        ]
                    }
                }
            },
            "expansionStates": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "Includes only states that differ from the default one.\nSupports two-way binding."
                                    }
                                ]
                            },
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [data]=\"data\" [(expansionStates)]=\"model.expansionStates\">\n</igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets a list of key-value pairs [row ID, expansion state]."
                            }
                        ]
                    }
                }
            },
            "nativeElement": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst nativeEl = this.grid.nativeElement.\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the native element."
                            }
                        ]
                    }
                }
            },
            "outlet": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remark",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "If set, returns the outlet defined outside the grid. Otherwise returns the grid's internal outlet directive."
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the outlet used to attach the grid's overlays to."
                            }
                        ]
                    }
                }
            },
            "defaultRowHeight": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst rowHeigh = this.grid.defaultRowHeight;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the default row height."
                            }
                        ]
                    }
                }
            },
            "defaultHeaderGroupMinWidth": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "Used internally for restricting header group component width.\nThe values below depend on the header cell default right/left padding values."
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxGridHeaderGroupComponent`"
                            },
                            {
                                "kind": "text",
                                "text": "'s minimum allowed width."
                            }
                        ]
                    }
                }
            },
            "columns": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst colums = this.grid.columns.\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets an array of "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxColumnComponent`"
                            },
                            {
                                "kind": "text",
                                "text": "s."
                            }
                        ]
                    }
                }
            },
            "pinnedColumns": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst pinnedColumns = this.grid.pinnedColumns.\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets an array of the pinned "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxColumnComponent`"
                            },
                            {
                                "kind": "text",
                                "text": "s."
                            }
                        ]
                    }
                }
            },
            "pinnedRows": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst pinnedRow = this.grid.pinnedRows;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets an array of the pinned "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxRowComponent`"
                            },
                            {
                                "kind": "text",
                                "text": "s."
                            }
                        ]
                    }
                }
            },
            "unpinnedColumns": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst unpinnedColumns = this.grid.unpinnedColumns.\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets an array of unpinned "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxColumnComponent`"
                            },
                            {
                                "kind": "text",
                                "text": "s."
                            }
                        ]
                    }
                }
            },
            "visibleColumns": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst visibleColumns = this.grid.visibleColumns.\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns an array of visible "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxColumnComponent`"
                            },
                            {
                                "kind": "text",
                                "text": "s."
                            }
                        ]
                    }
                }
            },
            "totalRecords": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "Only functions when paging is enabled."
                                    }
                                ]
                            },
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst totalRecords = this.grid.totalRecords;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the total number of records."
                            }
                        ]
                    }
                }
            },
            "dataView": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\n     const dataView = this.grid.dataView;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the currently transformed paged/filtered/sorted/grouped/pinned/unpinned row data, displayed in the grid."
                            }
                        ]
                    }
                }
            },
            "selectRowOnClick": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "By default it is set to true"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets whether clicking over a row should select/deselect it"
                            }
                        ]
                    }
                }
            },
            "displayDensity": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@deprecated",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "since version 16.1.x.\nPlease use the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`--ig-size`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " CSS custom property."
                                    }
                                ]
                            },
                            {
                                "tag": "@see",
                                "content": [
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@link",
                                        "text": "[Update Guide](https://www.infragistics.com/products/ignite-ui-angular/angular/components/general/update-guide#from-160x-to-161x)"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nReturns the theme of the component.\nThe default theme is "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`comfortable`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\nAvailable options are "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`comfortable`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`cosy`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`compact`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nlet componentTheme = this.component.displayDensity;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": []
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the theme of the component."
                            }
                        ]
                    }
                }
            }
        }
    }
}
{
    "IgxForOfDirective": {
        "properties": {
            "igxForOf": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@Input",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "描画するデータを設定する @Input プロパティ。\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```html\n<ng-template igxFor let-item [igxForOf]=\"data\" [igxForScrollOrientation]=\"'horizontal'\"></ng-template>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "\n"
                        }
                    ]
                }
            },
            "igxForSizePropName": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@Input",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "データ オブジェクトのサイズを読み込むためのプロパティ名を設定する @Input プロパティ。"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "\n"
                        }
                    ]
                }
            },
            "igxForScrollOrientation": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@Input",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "スクロール方向を指定する @Input プロパティ。\nスクロール方向を \"vertical\" または \"horizontal\" に設定できます。\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```html\n<ng-template igxFor let-item [igxForOf]=\"data\" [igxForScrollOrientation]=\"'horizontal'\"></ng-template>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "\n"
                        }
                    ]
                }
            },
            "igxForScrollContainer": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "水平と垂直の両方向にスクロールする仮想テンプレートを作成するために親 "
                        },
                        {
                            "kind": "code",
                            "text": "`igxFor`"
                        },
                        {
                            "kind": "text",
                            "text": " ンスタンスをオプションに渡します。\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<ng-template #scrollContainer igxFor let-rowData [igxForOf]=\"data\"\n      [igxForScrollOrientation]=\"'vertical'\"\n      [igxForContainerSize]=\"'500px'\"\n      [igxForItemSize]=\"'50px'\"\n      let-rowIndex=\"index\">\n      <div [style.display]=\"'flex'\" [style.height]=\"'50px'\">\n          <ng-template #childContainer igxFor let-item [igxForOf]=\"data\"\n              [igxForScrollOrientation]=\"'horizontal'\"\n              [igxForScrollContainer]=\"parentVirtDir\"\n              [igxForContainerSize]=\"'500px'\">\n                  <div [style.min-width]=\"'50px'\">{{rowIndex}} : {{item.text}}</div>\n          </ng-template>\n      </div>\n</ng-template>\n```"
                        }
                    ]
                }
            },
            "igxForContainerSize": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@Input",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "スクロールする軸でコンテナーの px 単位のサイズを設定する @Input プロパティ。\n\"horizontal\" 方向の場合、この値はコンテナーの幅で、\"vertical\" 方向の場合、値はコンテナーの高さです。\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```html\n<ng-template igxFor let-item [igxForOf]=\"data\" [igxForContainerSize]=\"'500px'\"\n     [igxForScrollOrientation]=\"'horizontal'\">\n</ng-template>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "\n"
                        }
                    ]
                }
            },
            "igxForItemSize": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@Input",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "スクロールする軸で項目の px 単位のサイズを設定する @Input プロパティ。\n\"horizontal\" 方向の場合、この値は列の幅で、\"vertical\" 方向の場合、値は行の高さです。\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```html\n<ng-template igxFor let-item [igxForOf]=\"data\" [igxForScrollOrientation]=\"'horizontal'\" [igxForItemSize]=\"'50px'\"></ng-template>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "\n"
                        }
                    ]
                }
            },
            "chunkLoad": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "新しいチャンクが読み込んだ後に発生するイベント。\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<ng-template igxFor [igxForOf]=\"data\" [igxForScrollOrientation]=\"'horizontal'\" (chunkLoad)=\"loadChunk($event)\"></ng-template>\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nloadChunk(e){\nalert(\"chunk loaded!\");\n}\n```"
                        }
                    ]
                }
            },
            "contentSizeChange": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "igxForOf のレンダリングされたコンテンツのサイズが変更された後に発行されるイベント。"
                        }
                    ]
                }
            },
            "dataChanged": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "データが編集された後に発生するイベント。\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<ng-template igxFor [igxForOf]=\"data\" [igxForScrollOrientation]=\"'horizontal'\" (dataChanged)=\"dataChanged($event)\"></ng-template>\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\ndataChanged(e){\nalert(\"data changed!\");\n}\n```"
                        }
                    ]
                }
            },
            "chunkPreload": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "startIndex、endIndex、totalCount の現在の状態情報を出力するためにチャンクの読み込みで発生されるイベント。\nigxFor データのリモートのロードオンデマンドを実装するために使用できます。\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<ng-template igxFor [igxForOf]=\"data\" [igxForScrollOrientation]=\"'horizontal'\" (chunkPreload)=\"chunkPreload($event)\"></ng-template>\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nchunkPreload(e){\nalert(\"chunk is loading!\");\n}\n```"
                        }
                    ]
                }
            },
            "state": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "ディレクティブの現在の状態。"
                        },
                        {
                            "kind": "code",
                            "text": "`startIndex`"
                        },
                        {
                            "kind": "text",
                            "text": " および "
                        },
                        {
                            "kind": "code",
                            "text": "`chunkSize`"
                        },
                        {
                            "kind": "text",
                            "text": " を含みます。\nstate.startIndex - 現在の表示チャンクが開始する項目のインデックス。\nstate.chunkSize - 現在表示されているチャンクが保持する項目数。\nこれらのオプションは、必要な状態情報が提供されるため、リモート仮想化を実装する際に使用できます。\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nconst gridState = this.parentVirtDir.state;\n```"
                        }
                    ]
                }
            }
        },
        "methods": {
            "addScrollTop": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "スクロールのつまみ位置を移動します。\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.parentVirtDir.addScrollTop(5);\n```"
                        }
                    ]
                }
            },
            "scrollTo": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "指定されたインデックスへスクロールします。\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.parentVirtDir.scrollTo(5);\n```"
                        }
                    ]
                }
            },
            "scrollNext": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "「次」の方向に 1 項目スクロールします。\n\"horizontal\" 方向で右列です。\"vertical\" 方向の下の行です。\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.parentVirtDir.scrollNext();\n```"
                        }
                    ]
                }
            },
            "scrollPrev": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "「前」の方向に 1 項目スクロールします。\n\"horizontal\" 方向で左列です。\"vertical\" 方向の上の行です。\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.parentVirtDir.scrollPrev();\n```"
                        }
                    ]
                }
            },
            "scrollNextPage": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "「次」の方向に 1 ページ スクロールします。\n\"horizontal\" 方向に右へ 1 ビューです。\"vertical\" 方向に下へ 1 ビューです。\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.parentVirtDir.scrollNextPage();\n```"
                        }
                    ]
                }
            },
            "scrollPrevPage": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "「前」の方向に 1 ページ スクロールします。\n\"horizontal\" 方向に左へ 1 ビューです。\"vertical\" 方向に上へ 1 ビューです。\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.parentVirtDir.scrollPrevPage();\n```"
                        }
                    ]
                }
            },
            "getItemCountInView": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "完全に表示される項目の合計数を返します。\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.parentVirtDir.getItemCountInView();\n```"
                        }
                    ]
                }
            },
            "getScroll": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "スクロールバーの DOM 要素への参照を返します。\n指定した igxForScrollOrientation に基づいて、垂直または水平のスクロールバーになります。\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\ndir.getScroll();\n```"
                        }
                    ]
                }
            },
            "getSizeAt": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "指定したインデックスの要素のサイズを返します。\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.parentVirtDir.getSizeAt(1);\n```"
                        }
                    ]
                }
            },
            "getScrollForIndex": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "指定したインデックスの要素のスクロール オフセットを返します。\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.parentVirtDir.getScrollForIndex(1);\n```"
                        }
                    ]
                }
            },
            "getIndexAtScroll": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "指定したオフセットにある要素のインデックスを返します。\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.parentVirtDir.getIndexAtScroll(100);\n```"
                        }
                    ]
                }
            },
            "isIndexOutsideView": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "ターゲット インデックスがビュー外にあるかどうかを返します。\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.parentVirtDir.isIndexOutsideView(10);\n```"
                        }
                    ]
                }
            }
        },
        "accessors": {
            "igxForTotalItemCount": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "リモート サービスを使用する場合、仮想データ項目の合計数。\ntotalItemCount プロパティ同様ですが、これによりデータ カウントをテンプレートに設定できます。\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template igxFor let-item [igxForOf]=\"data | async\" [igxForTotalItemCount]=\"count | async\"\n [igxForContainerSize]=\"'500px'\" [igxForItemSize]=\"'50px'\"></ng-template>\n```"
                            }
                        ]
                    }
                }
            },
            "totalItemCount": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "リモート サービスを使用する場合、仮想データ項目の合計数。\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nthis.parentVirtDir.totalItemCount = data.Count;\n```"
                            }
                        ]
                    }
                }
            },
            "scrollPosition": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "スクロール位置を取得または設定します。\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nconst position = directive.scrollPosition;\ndirective.scrollPosition = value;\n```"
                            }
                        ]
                    }
                }
            },
            "igxForTrackBy": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "項目コレクションで変更をトラックするために使用される関数を取得します。\nデフォルトでオブジェクト参照が比較されます。\nオブジェクト参照の代わりに比較で使用可能な一意の識別子値があるか、\n変更のためにトラックする項目オブジェクトにその他のプロパティ値がある場合、これを最適化できます。\nこのオプションは ngForTrackBy と同様です。n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nconst trackFunc = this.parentVirtDir.igxForTrackBy;\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "項目コレクションで変更をトラックするために使用される関数を設定します。\nこの関数は、コレクションの項目の変更のトラッキングを最適化、\nまたはカスタマイズする場合に設定できます。\n在の項目を引数として受け、この項目の一意の識別子を返します。\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nthis.parentVirtDir.igxForTrackBy = (index, item) => {\n     return item.id + item.width;\n};\n```"
                            }
                        ]
                    }
                }
            }
        }
    }
}
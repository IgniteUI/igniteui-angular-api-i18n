{
    "HammerGesturesManager": {
        "comment": {
            "shortText": [
                "Hammer.js に基づくタッチ ジェスチャ。",
                "注: 要素ごとに単一マネージャーの参照をトラックします。まだ決定されません。実装が完了していません。"
            ]
        },
        "properties": {},
        "methods": {
            "addEventListener": {
                "comment": {
                    "shortText": [
                        "Hammer.js のオプションと拡張リスナーを追加します。オプションが指定されない場合、デフォルト値を使用します。",
                        "今後の変更のためにその他のイベント プラグインをモデルにします。"
                    ]
                }
            },
            "addGlobalEventListener": {
                "comment": {
                    "shortText": [
                        "Hammer.js のオプションと拡張リスナーを追加します。オプションが指定されない場合、デフォルト値を使用します。",
                        "今後の変更のためにその他のイベント プラグインをモデルにします。"
                    ]
                }
            },
            "getGlobalEventTarget": {
                "comment": {
                    "shortText": [
                        "グローバル イベント ターゲットを取得するために [Dom]Adapter.getGlobalEventTarget を公開します。",
                        "サポートされるターゲット: window、document、および body。無効な引数の場合、デフォルト値は document です。"
                    ]
                }
            },
            "setManagerOption": {
                "comment": {
                    "shortText": "HammerManager オプションを設定します。"
                }
            },
            "addManagerForElement": {
                "comment": {
                    "shortText": "要素およびマネージャー マップを内部コレクションに追加します。"
                }
            },
            "getManagerForElement": {
                "comment": {
                    "shortText": "要素の HammerManager を取得するか、null。"
                }
            },
            "removeManagerForElement": {
                "comment": {
                    "shortText": "要素の HammerManager を破棄し、イベント リスナーを削除します。"
                }
            },
            "destroy": {
                "comment": {
                    "shortText": "内部でトラックしたすべての HammerManager を破棄し、イベント リスナーを削除します。"
                }
            }
        },
        "accessors": {}
    }
}
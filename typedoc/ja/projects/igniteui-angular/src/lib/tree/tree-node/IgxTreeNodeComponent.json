{
    "IgxTreeNodeComponent": {
        "comment": {
            "blockTags": [],
            "modifierTags": {},
            "summary": [
                {
                    "kind": "text",
                    "text": "ツリー ノード コンポーネントは、ツリー コンポーネントの子ノードまたは別のツリー ノードを表します。\n使用方法:\n\n"
                },
                {
                    "kind": "code",
                    "text": "```html\n <igx-tree>\n ...\n   <igx-tree-node [data]=\"data\" [selected]=\"service.isNodeSelected(data.Key)\" [expanded]=\"service.isNodeExpanded(data.Key)\">\n     {{ data.FirstName }} {{ data.LastName }}\n   </igx-tree-node>\n ...\n </igx-tree>\n```"
                }
            ]
        },
        "properties": {
            "data": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@備考",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "ノードの検索に必要です。"
                                }
                            ]
                        },
                        {
                            "tag": "@例",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n <igx-tree>\n ...\n   <igx-tree-node [data]=\"data\">\n     {{ data.FirstName }} {{ data.LastName }}\n   </igx-tree-node>\n ...\n </igx-tree>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "ノードが可視化しているデータ エントリ。"
                        }
                    ]
                }
            },
            "loading": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@備考",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "ノードを読み込んでも子は描画されません。"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "ノードがデータを読み込んでいるかどうかを指定するためにロードオンデマンド シナリオで使用されます。"
                        }
                    ]
                }
            },
            "selectedChange": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "ノードの "
                        },
                        {
                            "kind": "code",
                            "text": "`selected`"
                        },
                        {
                            "kind": "text",
                            "text": " プロパティが変更されたときに発生されます。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-tree>\n     <igx-tree-node *ngFor=\"let node of data\" [data]=\"node\" [(selected)]=\"node.selected\">\n     </igx-tree-node>\n</igx-tree>\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nconst node: IgxTreeNode<any> = this.tree.findNodes(data[0])[0];\nnode.selectedChange.pipe(takeUntil(this.destroy$)).subscribe((e: boolean) => console.log(\"Node selection changed to \", e))\n```"
                        }
                    ]
                }
            },
            "expandedChange": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "ノードの "
                        },
                        {
                            "kind": "code",
                            "text": "`expanded`"
                        },
                        {
                            "kind": "text",
                            "text": " プロパティが変更されたときに発生されます。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-tree>\n     <igx-tree-node *ngFor=\"let node of data\" [data]=\"node\" [(expanded)]=\"node.expanded\">\n     </igx-tree-node>\n</igx-tree>\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nconst node: IgxTreeNode<any> = this.tree.findNodes(data[0])[0];\nnode.expandedChange.pipe(takeUntil(this.destroy$)).subscribe((e: boolean) => console.log(\"Node expansion state changed to \", e))\n```"
                        }
                    ]
                }
            }
        },
        "methods": {
            "toggle": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "ノードの展開状態を切り替え、アニメーションをトリガーします。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-tree>\n     <igx-tree-node #node>My Node</igx-tree-node>\n</igx-tree>\n<button type=\"button\" igxButton (click)=\"node.toggle()\">Toggle Node</button>\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nconst myNode: IgxTreeNode<any> = this.tree.findNodes(data[0])[0];\nmyNode.toggle();\n```"
                        }
                    ]
                }
            },
            "expand": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "ノードを展開し、アニメーションをトリガーします。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-tree>\n     <igx-tree-node #node>My Node</igx-tree-node>\n</igx-tree>\n<button type=\"button\" igxButton (click)=\"node.expand()\">Expand Node</button>\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nconst myNode: IgxTreeNode<any> = this.tree.findNodes(data[0])[0];\nmyNode.expand();\n```"
                        }
                    ]
                }
            },
            "collapse": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "ノードを縮小し、アニメーションをトリガーします。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-tree>\n     <igx-tree-node #node>My Node</igx-tree-node>\n</igx-tree>\n<button type=\"button\" igxButton (click)=\"node.collapse()\">Collapse Node</button>\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nconst myNode: IgxTreeNode<any> = this.tree.findNodes(data[0])[0];\nmyNode.collapse();\n```"
                        }
                    ]
                }
            }
        },
        "accessors": {
            "resourceStrings": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "リソース文字列を返すアクセサー。"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@備考",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "デフォルトで EN リソースを使用します。"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "リソース文字列を取得/設定します。"
                            }
                        ]
                    }
                }
            },
            "active": {
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "ノードのアクティブ状態を取得または設定します。"
                            }
                        ]
                    }
                }
            },
            "path": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "自身を含むノードへのフル パスを取得します。\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nconst node: IgxTreeNode<any> = this.tree.findNodes(data[0])[0];\nconst path: IgxTreeNode<any>[] = node.path;\n```"
                            }
                        ]
                    }
                }
            },
            "disabled": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "ノードの無効状態を取得または設定します。"
                            }
                        ]
                    }
                }
            },
            "children": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@備考",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "ノードに子がない場合は "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`null`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " を返します。"
                                    }
                                ]
                            },
                            {
                                "tag": "@例",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst node: IgxTreeNode<any> = this.tree.findNodes(data[0])[0];\nconst children: IgxTreeNode<any>[] = node.children;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "ノードの子ノードを返します (存在する場合)。"
                            }
                        ]
                    }
                }
            },
            "level": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "ルートに対するノードの深さ。\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<igx-tree>\n ...\n <igx-tree-node #node>\n     My level is {{ node.level }}\n </igx-tree-node>\n</igx-tree>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nconst node: IgxTreeNode<any> = this.tree.findNodes(data[12])[0];\nconst level: number = node.level;\n```"
                            }
                        ]
                    }
                }
            },
            "selected": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "ノードが選択されているかどうかを取得または設定します。双方向バインディングをサポートします。\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<igx-tree>\n ...\n <igx-tree-node *ngFor=\"let node of data\" [(selected)]=\"node.selected\">\n     {{ node.label }}\n </igx-tree-node>\n</igx-tree>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nconst node: IgxTreeNode<any> = this.tree.findNodes(data[0])[0];\nconst selected = node.selected;\nnode.selected = true;\n```"
                            }
                        ]
                    }
                }
            },
            "expanded": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "ノードが展開されているかどうかを取得または設定します。\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<igx-tree>\n ...\n <igx-tree-node *ngFor=\"let node of data\" [expanded]=\"node.name === this.expandedNode\">\n     {{ node.label }}\n </igx-tree-node>\n</igx-tree>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nconst node: IgxTreeNode<any> = this.tree.findNodes(data[0])[0];\nconst expanded = node.expanded;\nnode.expanded = true;\n```"
                            }
                        ]
                    }
                }
            }
        }
    }
}
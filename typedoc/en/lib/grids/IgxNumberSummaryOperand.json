{
    "IgxNumberSummaryOperand": {
        "properties": {},
        "methods": {
            "min": {
                "comment": {
                    "shortText": [
                        "Returns the minimum numeric value in the provided data records.",
                        "If filtering is applied, returns the minimum value in the filtered data records.",
                        "```typescript",
                        "IgxNumberSummaryOperand.min(data);",
                        "```"
                    ]
                }
            },
            "max": {
                "comment": {
                    "shortText": [
                        "Returns the maximum numeric value in the provided data records.",
                        "If filtering is applied, returns the maximum value in the filtered data records.",
                        "```typescript",
                        "IgxNumberSummaryOperand.max(data);",
                        "```"
                    ]
                }
            },
            "sum": {
                "comment": {
                    "shortText": [
                        "Returns the sum of the numeric values in the provided data records.",
                        "If filtering is applied, returns the sum of the numeric values in the data records.",
                        "```typescript",
                        "IgxNumberSummaryOperand.sum(data);",
                        "```"
                    ]
                }
            },
            "average": {
                "comment": {
                    "shortText": [
                        "Returns the average numeric value in the data provided data records.",
                        "If filtering is applied, returns the average numeric value in the filtered data records.",
                        "```typescript",
                        "IgxSummaryOperand.average(data);",
                        "```"
                    ]
                }
            },
            "operate": {
                "comment": {
                    "shortText": [
                        "Executes the static methods and returns `IgxSummaryResult[]`.",
                        "```typescript",
                        "interface IgxSummaryResult {",
                        "  key: string;",
                        "  label: string;",
                        "  summaryResult: any;",
                        "}",
                        "```",
                        "Can be overridden in the inherited classes to provide customization for the `summary`.",
                        "```typescript",
                        "class CustomNumberSummary extends IgxNumberSummaryOperand {",
                        "  constructor() {",
                        "    super();",
                        "  }",
                        "  public operate(data?: any[]): IgxSummaryResult[] {",
                        "    const result = [];",
                        "    result.push({",
                        "      key: \"avg\",",
                        "      label: \"Avg\",",
                        "      summaryResult: IgxNumberSummaryOperand.average(data)",
                        "    });",
                        "    result.push({",
                        "      key: \"max\",",
                        "      label: \"Max\",",
                        "      summaryResult: IgxNumberSummaryOperand.max(data)",
                        "    });",
                        "    return result;",
                        "  }",
                        "}",
                        "this.grid.getColumnByName('ColumnName').summaries = CustomNumberSummary;",
                        "```"
                    ]
                }
            },
            "count": {
                "comment": {
                    "shortText": [
                        "Counts all the records in the data source.",
                        "If filtering is applied, counts only the filtered records.",
                        "```typescript",
                        "IgxSummaryOperand.count(dataSource);",
                        "```"
                    ]
                }
            }
        },
        "accessors": {}
    }
}
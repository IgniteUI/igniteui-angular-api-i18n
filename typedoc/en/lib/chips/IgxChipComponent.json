{
    "IgxChipComponent": {
        "properties": {
            "id": {
                "comment": {
                    "shortText": [
                        "An @Input property that sets the value of `id` attribute. If not provided it will be automatically generated.",
                        "```html",
                        "<igx-chip [id]=\"'igx-chip-1'\"></igx-chip>",
                        "```"
                    ]
                }
            },
            "data": {
                "comment": {
                    "shortText": [
                        "An @Input property that stores data related to the chip.",
                        "```html",
                        "<igx-chip [data]=\"{ value: 'Country' }\"></igx-chip>",
                        "```"
                    ]
                }
            },
            "draggable": {
                "comment": {
                    "shortText": [
                        "An @Input property that defines if the `IgxChipComponent` can be dragged in order to change it's position.",
                        "By default it is set to false.",
                        "```html",
                        "<igx-chip [id]=\"'igx-chip-1'\" [draggable]=\"true\"></igx-chip>",
                        "```"
                    ]
                }
            },
            "removable": {
                "comment": {
                    "shortText": [
                        "An @Input property that defines if the `IgxChipComponent` should render remove button and throw remove events.",
                        "By default it is set to false.",
                        "```html",
                        "<igx-chip [id]=\"'igx-chip-1'\" [draggable]=\"true\" [removable]=\"true\"></igx-chip>",
                        "```"
                    ]
                }
            },
            "removeIcon": {
                "comment": {
                    "shortText": [
                        "An @Input property that overrides the default icon that the chip applies to the remove button.",
                        "```html",
                        "<igx-chip [id]=\"chip.id\" [removable]=\"true\" [removeIcon]=\"iconTemplate\"></igx-chip>",
                        "<ng-template #iconTemplate><igx-icon>delete</igx-icon></ng-template>",
                        "```"
                    ]
                }
            },
            "selectable": {
                "comment": {
                    "shortText": [
                        "An @Input property that defines if the `IgxChipComponent` can be selected on click or through navigation,",
                        "By default it is set to false.",
                        "```html",
                        "<igx-chip [id]=\"chip.id\" [draggable]=\"true\" [removable]=\"true\" [selectable]=\"true\"></igx-chip>",
                        "```"
                    ]
                }
            },
            "selectIcon": {
                "comment": {
                    "shortText": [
                        "An @Input property that overrides the default icon that the chip applies when it is selected.",
                        "```html",
                        "<igx-chip [id]=\"chip.id\" [selectable]=\"true\" [selectIcon]=\"iconTemplate\"></igx-chip>",
                        "<ng-template #iconTemplate><igx-icon>done_outline</igx-icon></ng-template>",
                        "```"
                    ]
                }
            },
            "disabled": {
                "comment": {
                    "shortText": [
                        "An @Input property that defines if the `IgxChipComponent` is disabled. When disabled it restricts user interactions",
                        "like focusing on click or tab, selection on click or Space, dragging.",
                        "By default it is set to false.",
                        "```html",
                        "<igx-chip [id]=\"chip.id\" [disabled]=\"true\"></igx-chip>",
                        "```"
                    ]
                }
            },
            "onMoveStart": {
                "comment": {
                    "shortText": [
                        "Emits an event when the `IgxChipComponent` moving starts.",
                        "Returns the moving `IgxChipComponent`.",
                        "```typescript",
                        "moveStarted(event: IBaseChipEventArgs){",
                        "    let movingChip = event.owner;",
                        "}",
                        "```",
                        "```html",
                        "<igx-chip #myChip [id]=\"'igx-chip-1'\" [draggable]=\"true\" (onMoveStart)=\"moveStarted($event)\">",
                        "```"
                    ]
                }
            },
            "onMoveEnd": {
                "comment": {
                    "shortText": [
                        "Emits an event when the `IgxChipComponent` moving ends.",
                        "Returns the moved `IgxChipComponent`.",
                        "```typescript",
                        "moveEnded(event: IBaseChipEventArgs){",
                        "    let movedChip = event.owner;",
                        "}",
                        "```",
                        "```html",
                        "<igx-chip #myChip [id]=\"'igx-chip-1'\" [draggable]=\"true\" (onMoveEnd)=\"moveEnded($event)\">",
                        "```"
                    ]
                }
            },
            "onRemove": {
                "comment": {
                    "shortText": [
                        "Emits an event when the `IgxChipComponent` is removed.",
                        "Returns the removed `IgxChipComponent`.",
                        "```typescript",
                        "remove(event: IBaseChipEventArgs){",
                        "    let removedChip = event.owner;",
                        "}",
                        "```",
                        "```html",
                        "<igx-chip #myChip [id]=\"'igx-chip-1'\" [draggable]=\"true\" (onRemove)=\"remove($event)\">",
                        "```"
                    ]
                }
            },
            "onClick": {
                "comment": {
                    "shortText": [
                        "Emits an event when the `IgxChipComponent` is clicked.",
                        "Returns the clicked `IgxChipComponent`, whether the event should be canceled.",
                        "```typescript",
                        "chipClick(event: IChipClickEventArgs){",
                        "    let clickedChip = event.owner;",
                        "}",
                        "```",
                        "```html",
                        "<igx-chip #myChip [id]=\"'igx-chip-1'\" [draggable]=\"true\" (onClick)=\"chipClick($event)\">",
                        "```"
                    ]
                }
            },
            "onSelection": {
                "comment": {
                    "shortText": [
                        "Emits event when the `IgxChipComponent` is selected/deselected.",
                        "Returns the selected chip reference, whether the event should be canceled, what is the next selection state and",
                        "when the event is triggered by interaction `originalEvent` is provided, otherwise `originalEvent` is `null`.",
                        "```typescript",
                        "chipSelect(event: IChipSelectEventArgs){",
                        "    let selectedChip = event.owner;",
                        "}",
                        "```",
                        "```html",
                        "<igx-chip #myChip [id]=\"'igx-chip-1'\" [draggable]=\"true\" (onSelection)=\"chipSelect($event)\">",
                        "```"
                    ]
                }
            },
            "onKeyDown": {
                "comment": {
                    "shortText": [
                        "Emits an event when the `IgxChipComponent` keyboard navigation is being used.",
                        "Returns the focused/selected `IgxChipComponent`, whether the event should be canceled,",
                        "if the `alt`, `shift` or `control` key is pressed and the pressed key name.",
                        "```typescript",
                        "chipKeyDown(event: IChipKeyDownEventArgs){",
                        "    let keyDown = event.key;",
                        "}",
                        "```",
                        "```html",
                        "<igx-chip #myChip [id]=\"'igx-chip-1'\" [draggable]=\"true\" (onKeyDown)=\"chipKeyDown($event)\">",
                        "```"
                    ]
                }
            },
            "onDragEnter": {
                "comment": {
                    "shortText": [
                        "Emits an event when the `IgxChipComponent` has entered the `IgxChipsAreaComponent`.",
                        "Returns the target `IgxChipComponent`, the drag `IgxChipComponent`, as  well as",
                        "the original drop event arguments.",
                        "```typescript",
                        "chipEnter(event: IChipEnterDragAreaEventArgs){",
                        "    let targetChip = event.targetChip;",
                        "}",
                        "```",
                        "```html",
                        "<igx-chip #myChip [id]=\"'igx-chip-1'\" [draggable]=\"true\" (onDragEnter)=\"chipEnter($event)\">",
                        "```"
                    ]
                }
            }
        },
        "methods": {},
        "accessors": {
            "selected": {
                "setter": {
                    "comment": {
                        "shortText": [
                            "Sets the `IgxChipComponent` selected state.",
                            "```html",
                            "<igx-chip #myChip [id]=\"'igx-chip-1'\" [selectable]=\"true\" [selected]=\"true\">",
                            "```"
                        ]
                    }
                },
                "getter": {
                    "comment": {
                        "shortText": [
                            "Returns if the `IgxChipComponent` is selected.",
                            "```typescript",
                            "@ViewChild('myChip')",
                            "public chip: IgxChipComponent;",
                            "selectedChip(){",
                            "    let selectedChip = this.chip.selected;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "displayDensity": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Returns the `IgxChipComponent` theme.",
                            "```typescript",
                            "@ViewChild('myChip')",
                            "public chip: IgxChipComponent;",
                            "    ngAfterViewInit(){",
                            "    let chipTheme = this.chip.displayDensity;",
                            "}",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "shortText": [
                            "An @Input property that sets the `IgxChipComponent` theme.",
                            "Available options are `compact`, `cosy`, `comfortable`.",
                            "The default theme is `comfortable`.",
                            "```html",
                            "<igx-chip #myChip [id]=\"'igx-chip-1'\" [displayDensity]=\"'compact'\"></igx-chip>",
                            "```"
                        ]
                    }
                }
            },
            "color": {
                "setter": {
                    "comment": {
                        "shortText": [
                            "An @Input property that sets the `IgxChipComponent` background color.",
                            "The `color` property supports string, rgb, hex.",
                            "```html",
                            "<igx-chip #myChip [id]=\"'igx-chip-1'\" [color]=\"'#ff0000'\"></igx-chip>",
                            "```"
                        ]
                    }
                },
                "getter": {
                    "comment": {
                        "shortText": [
                            "Returns the background color of the `IgxChipComponent`.",
                            "```typescript",
                            "@ViewChild('myChip')",
                            "public chip: IgxChipComponent;",
                            "ngAfterViewInit(){",
                            "    let chipColor = this.chip.color;",
                            "}",
                            "```"
                        ]
                    }
                }
            }
        }
    }
}
{
    "IgxChipComponent": {
        "properties": {
            "id": {
                "comment": {
                    "shortText": [
                        "`id` 属性の値を設定する @Input プロパティ。提供されていない場合、自動的に生成されます。",
                        "```html",
                        "<igx-chip [id]=\"'igx-chip-1'\"></igx-chip>",
                        "```"
                    ]
                }
            },
            "data": {
                "comment": {
                    "shortText": [
                        "チップに関連するデータを保存する @Input プロパティ。",
                        "```html",
                        "<igx-chip [data]=\"{ value: 'Country' }\"></igx-chip>",
                        "```"
                    ]
                }
            },
            "draggable": {
                "comment": {
                    "shortText": [
                        "`IgxChipComponent` の位置を変更するためにドラッグできるかどうかを定義する @Input プロパティ。",
                        "デフォルトで false に設定されます。",
                        "```html",
                        "<igx-chip [id]=\"'igx-chip-1'\" [draggable]=\"true\"></igx-chip>",
                        "```"
                    ]
                }
            },
            "animateOnRelease": {
                "comment": {
                    "shortText": [
                        "要素が解放されたときにドラッグ可能な要素のアニメーションを有効/無効にする @Input プロパティ。",
                        "デフォルトで true に設定されます。",
                        "```html",
                        "<igx-chip [id]=\"'igx-chip-1'\" [draggable]=\"true\" [animateOnRelease]=\"false\"></igx-chip>",
                        "```"
                    ]
                }
            },
            "hideBaseOnDrag": {
                "comment": {
                    "shortText": [
                        "ドラッグされた基本要素の非表示を有効または無効にする @Input プロパティ。",
                        "デフォルトで true に設定されます。",
                        "```html",
                        "<igx-chip [id]=\"'igx-chip-1'\" [draggable]=\"true\" [hideBaseOnDrag]=\"false\"></igx-chip>",
                        "```"
                    ]
                }
            },
            "removable": {
                "comment": {
                    "shortText": [
                        "`IgxChipComponent` が [削除] ボタンを描画し、削除イベントを発生するかどうかを定義する @Input プロパティ。",
                        "デフォルトで false に設定されます。",
                        "```html",
                        "<igx-chip [id]=\"'igx-chip-1'\" [draggable]=\"true\" [removable]=\"true\"></igx-chip>",
                        "```"
                    ]
                }
            },
            "removeIcon": {
                "comment": {
                    "shortText": [
                        "チップが削除ボタンに適用するデフォルト アイコンをオーバーライドする @Input プロパティ。",
                        "```html",
                        "<igx-chip [id]=\"chip.id\" [removable]=\"true\" [removeIcon]=\"iconTemplate\"></igx-chip>",
                        "<ng-template #iconTemplate><igx-icon>delete</igx-icon></ng-template>",
                        "```"
                    ]
                }
            },
            "selectable": {
                "comment": {
                    "shortText": [
                        "`IgxChipComponent` がクリックまたはナビゲーションで選択可能かどうかを定義する @Input プロパティ。",
                        "デフォルトで false に設定されます。",
                        "```html",
                        "<igx-chip [id]=\"chip.id\" [draggable]=\"true\" [removable]=\"true\" [selectable]=\"true\"></igx-chip>",
                        "```"
                    ]
                }
            },
            "selectIcon": {
                "comment": {
                    "shortText": [
                        "選択時にチップが適用するデフォルト アイコンをオーバーライドする @Input プロパティ。 ",
                        "```html",
                        "<igx-chip [id]=\"chip.id\" [selectable]=\"true\" [selectIcon]=\"iconTemplate\"></igx-chip>",
                        "<ng-template #iconTemplate><igx-icon>done_outline</igx-icon></ng-template>",
                        "```"
                    ]
                }
            },
            "disabled": {
                "comment": {
                    "shortText": [
                        "`IgxChipComponent` が無効かどうかを定義する @Input プロパティ。",
                        "無効な場合、クリックまたはタブでフォーカス、クリックまたはスペースで選択、ドラッグなどのユーザー インタラクションを制限します。",
                        "デフォルトで false に設定されます。",
                        "```html",
                        "<igx-chip [id]=\"chip.id\" [disabled]=\"true\"></igx-chip>",
                        "```"
                    ]
                }
            },
            "onMoveStart": {
                "comment": {
                    "shortText": [
                        "`IgxChipComponent` の移動が開始するときにイベントを発生します。",
                        "移動している `IgxChipComponent` を返します。",
                        "```typescript",
                        "moveStarted(event: IBaseChipEventArgs){",
                        "    let movingChip = event.owner;",
                        "}",
                        "```",
                        "```html",
                        "<igx-chip #myChip [id]=\"'igx-chip-1'\" [draggable]=\"true\" (onMoveStart)=\"moveStarted($event)\">",
                        "```"
                    ]
                }
            },
            "onMoveEnd": {
                "comment": {
                    "shortText": [
                        "`IgxChipComponent` の移動が終了するときにイベントを発生します。",
                        "移動した `IgxChipComponent` を返します。",
                        "```typescript",
                        "moveEnded(event: IBaseChipEventArgs){",
                        "    let movedChip = event.owner;",
                        "}",
                        "```",
                        "```html",
                        "<igx-chip #myChip [id]=\"'igx-chip-1'\" [draggable]=\"true\" (onMoveEnd)=\"moveEnded($event)\">",
                        "```"
                    ]
                }
            },
            "onRemove": {
                "comment": {
                    "shortText": [
                        "`IgxChipComponent` が削除されたときにイベントを発生します。",
                        "Returns the removed `IgxChipComponent`.",
                        "```typescript",
                        "remove(event: IBaseChipEventArgs){",
                        "    let removedChip = event.owner;",
                        "}",
                        "```",
                        "```html",
                        "<igx-chip #myChip [id]=\"'igx-chip-1'\" [draggable]=\"true\" (onRemove)=\"remove($event)\">",
                        "```"
                    ]
                }
            },
            "onClick": {
                "comment": {
                    "shortText": [
                        "`IgxChipComponent` がクリックされたときにイベントを発生します。",
                        "クリックした `IgxChipComponent` およびイベントをキャンセルするかどうかを返します。",
                        "```typescript",
                        "chipClick(event: IChipClickEventArgs){",
                        "    let clickedChip = event.owner;",
                        "}",
                        "```",
                        "```html",
                        "<igx-chip #myChip [id]=\"'igx-chip-1'\" [draggable]=\"true\" (onClick)=\"chipClick($event)\">",
                        "```"
                    ]
                }
            },
            "onSelection": {
                "comment": {
                    "shortText": [
                        "`IgxChipComponent` が選択/選択解除されたときにイベントを発生します。",
                        "選択したチップへの参照、イベントをキャンセルするかどうか、次の選択状態を返します。",
                        "イベントがインタラクションでトリガーされた場合に `originalEvent` が提供されます。それ以外の場合、`originalEvent` は `null` です。",
                        "```typescript",
                        "chipSelect(event: IChipSelectEventArgs){",
                        "    let selectedChip = event.owner;",
                        "}",
                        "```",
                        "```html",
                        "<igx-chip #myChip [id]=\"'igx-chip-1'\" [draggable]=\"true\" (onSelection)=\"chipSelect($event)\">",
                        "```"
                    ]
                }
            },
            "onKeyDown": {
                "comment": {
                    "shortText": [
                        "`IgxChipComponent` のキーボード ナビゲーションが使用されるときにイベントを発生します。",
                        "フォーカス/選択した `IgxChipComponent`、イベントをキャンセルするかどうかを返します。",
                        "`Alt、shift、control`、`shift`、`control` キーが押されていてキー名が押されたかどうか。",
                        "```typescript",
                        "chipKeyDown(event: IChipKeyDownEventArgs){",
                        "    let keyDown = event.key;",
                        "}",
                        "```",
                        "```html",
                        "<igx-chip #myChip [id]=\"'igx-chip-1'\" [draggable]=\"true\" (onKeyDown)=\"chipKeyDown($event)\">",
                        "```"
                    ]
                }
            },
            "onDragEnter": {
                "comment": {
                    "shortText": [
                        "`IgxChipComponent` が `IgxChipsAreaComponent` に入ったときにイベントを発生します。",
                        "ターゲットの `IgxChipComponent`、ドラッグしている `IgxChipComponent`、および元のドロップ イベント引数を返します。",
                        "",
                        "```typescript",
                        "chipEnter(event: IChipEnterDragAreaEventArgs){",
                        "    let targetChip = event.targetChip;",
                        "}",
                        "```",
                        "```html",
                        "<igx-chip #myChip [id]=\"'igx-chip-1'\" [draggable]=\"true\" (onDragEnter)=\"chipEnter($event)\">",
                        "```"
                    ]
                }
            },
            "dragDirective": {
                "comment": {
                    "shortText": [
                        "`IgxChipComponent` がドラッグ動作のために使う `IgxDragDirective` の参照を含むプロパティ。",
                        "```html",
                        "<igx-chip [id]=\"chip.id\" [draggable]=\"true\"></igx-chip>",
                        "```",
                        "```typescript",
                        "onMoveStart(event: IBaseChipEventArgs){",
                        "    let dragDirective = event.owner.dragDirective;",
                        "}",
                        "```"
                    ]
                }
            }
        },
        "methods": {},
        "accessors": {
            "selected": {
                "setter": {
                    "comment": {
                        "shortText": [
                            "`IgxChipComponent` の選択状態を設定します。",
                            "```html",
                            "<igx-chip #myChip [id]=\"'igx-chip-1'\" [selectable]=\"true\" [selected]=\"true\">",
                            "```"
                        ]
                    }
                },
                "getter": {
                    "comment": {
                        "shortText": [
                            "`IgxChipComponent` が選択されるかどうかを返します。",
                            "```typescript",
                            "@ViewChild('myChip')",
                            "public chip: IgxChipComponent;",
                            "selectedChip(){",
                            "    let selectedChip = this.chip.selected;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "color": {
                "setter": {
                    "comment": {
                        "shortText": [
                            "`IgxChipComponent` の背景色を設定する @Input プロパティ。",
                            "`color` プロパティは文字列、rgb、および16 進数をサポートします。",
                            "```html",
                            "<igx-chip #myChip [id]=\"'igx-chip-1'\" [color]=\"'#ff0000'\"></igx-chip>",
                            "```"
                        ]
                    }
                },
                "getter": {
                    "comment": {
                        "shortText": [
                            "`IgxChipComponent` の背景色を返します。",
                            "```typescript",
                            "@ViewChild('myChip')",
                            "public chip: IgxChipComponent;",
                            "ngAfterViewInit(){",
                            "    let chipColor = this.chip.color;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "displayDensity": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "コンポーネントのテーマを返します。",
                            "デフォルト テーマは `comfortable` です。",
                            "利用可能なオプションは `comfortable`、`cosy`、および `compact` です。",
                            "```typescript",
                            "let componentTheme = this.component.displayDensity;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "shortText": "コンポーネントのテーマを設定します。"
                    }
                    }
                }
            }
        }
}
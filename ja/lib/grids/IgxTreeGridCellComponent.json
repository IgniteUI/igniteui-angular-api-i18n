{
    "IgxTreeGridCellComponent": {
        "properties": {
            "column": {
                "comment": {
                    "shortText": [
                        "Gets the column of the cell.",
                        "```typescript",
                        " let cellColumn = this.cell.column;",
                        "```"
                    ]
                }
            },
            "row": {
                "comment": {
                    "shortText": [
                        "Gets the row of the cell.",
                        "```typescript",
                        "let cellRow = this.cell.row;",
                        "```"
                    ]
                }
            },
            "cellTemplate": {
                "comment": {
                    "shortText": [
                        "Sets/gets the template of the cell.",
                        "```html",
                        "<ng-template #cellTemplate igxCell let-value>",
                        "  <div style=\"font-style: oblique; color:blueviolet; background:red\">",
                        "      <span>{{value}}</span>",
                        "  </div>",
                        "</ng-template>",
                        "```",
                        "```typescript",
                        "@ViewChild('cellTemplate',{read: TemplateRef})",
                        "cellTemplate: TemplateRef<any>;",
                        "```",
                        "```typescript",
                        "this.cell.cellTemplate = this.cellTemplate;",
                        "```",
                        "```typescript",
                        "let template =  this.cell.cellTemplate;",
                        "```"
                    ]
                }
            },
            "value": {
                "comment": {
                    "shortText": [
                        "Sets/gets the cell value.",
                        "```typescript",
                        "this.cell.value = \"Cell Value\";",
                        "```",
                        "```typescript",
                        "let cellValue = this.cell.value;",
                        "```"
                    ]
                }
            },
            "highlightClass": {
                "comment": {
                    "shortText": [
                        "Sets/gets the highlight class of the cell.",
                        "Default value is `\"igx-highlight\"`.",
                        "```typescript",
                        "let highlightClass = this.cell.highlightClass;",
                        "```",
                        "```typescript",
                        "this.cell.highlightClass = 'igx-cell-highlight';",
                        "```"
                    ]
                }
            },
            "activeHighlightClass": {
                "comment": {
                    "shortText": [
                        "Sets/gets the active highlight class class of the cell.",
                        "Default value is `\"igx-highlight__active\"`.",
                        "```typescript",
                        "let activeHighlightClass = this.cell.activeHighlightClass;",
                        "```",
                        "```typescript",
                        "this.cell.activeHighlightClass = 'igx-cell-highlight_active';",
                        "```"
                    ]
                }
            },
            "tabindex": {
                "comment": {
                    "shortText": [
                        "Sets/get the `tabindex` property of the cell.",
                        "Default value is `0`.",
                        "```typescript",
                        "this.cell.tabindex = 1;",
                        "```",
                        "```typescript",
                        "let cellTabIndex = this.cell.tabindex;",
                        "```"
                    ]
                }
            },
            "role": {
                "comment": {
                    "shortText": [
                        "Sets/get the `role` property of the cell.",
                        "Default value is `\"gridcell\"`.",
                        "```typescript",
                        "this.cell.role = 'grid-cell';",
                        "```",
                        "```typescript",
                        "let cellRole = this.cell.role;",
                        "```"
                    ]
                }
            }
        },
        "methods": {
            "isCellSelected": {
                "comment": {
                    "shortText": [
                        "Gets whether the cell is selected.",
                        "```typescript",
                        "let isCellSelected = thid.cell.isCellSelected();",
                        "```"
                    ]
                }
            },
            "update": {
                "comment": {
                    "shortText": [
                        "Sets new value to the cell.",
                        "```typescript",
                        "this.cell.update('New Value');",
                        "```"
                    ]
                }
            },
            "highlightText": {
                "comment": {
                    "shortText": [
                        "If the provided string matches the text in the cell, the text gets highlighted.",
                        "```typescript",
                        "this.cell.highlightText('Cell Value', true);",
                        "```"
                    ]
                }
            },
            "clearHighlight": {
                "comment": {
                    "shortText": [
                        "Clears the highlight of the text in the cell.",
                        "```typescript",
                        "this.cell.clearHighLight();",
                        "```"
                    ]
                }
            }
        },
        "accessors": {
            "formatter": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets the cell formatter.",
                            "```typescript",
                            "let cellForamatter = this.cell.formatter;",
                            "```"
                        ]
                    }
                }
            },
            "context": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets the cell template context object.",
                            "```typescript",
                            " let context = this.cell.context();",
                            "```"
                        ]
                    }
                }
            },
            "template": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets the cell template.",
                            "```typescript",
                            "let template = this.cell.template;",
                            "```"
                        ]
                    }
                }
            },
            "gridID": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets the `id` of the grid in which the cell is stored.",
                            "```typescript",
                            "let gridId = this.cell.gridID;",
                            "```"
                        ]
                    }
                }
            },
            "grid": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets the grid of the cell.",
                            "```typescript",
                            "let grid = this.cell.grid;",
                            "```"
                        ]
                    }
                }
            },
            "rowIndex": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets the `index` of the row where the cell is stored.",
                            "```typescript",
                            "let rowIndex = this.cell.rowIndex;",
                            "```"
                        ]
                    }
                }
            },
            "columnIndex": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets the `index` of the cell column.",
                            "```typescript",
                            "let columnIndex = this.cell.columnIndex;",
                            "```"
                        ]
                    }
                }
            },
            "visibleColumnIndex": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets the visible `index` of the in which the cell is stored.",
                            "```typescript",
                            "let visibleColumnIndex = this.cell.visibleColumnIndex;",
                            "```"
                        ]
                    }
                }
            },
            "unpinnedColumnIndex": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets the `index` of the unpinned column in which the cell is stored.",
                            "```typescript",
                            "let unpinnedColumnIndex = this.cell.ununpinnedColumnIndex;",
                            "```"
                        ]
                    }
                }
            },
            "cellID": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets the ID of the cell.",
                            "```typescript",
                            "let cellID = this.cell.cellID;",
                            "```"
                        ]
                    }
                }
            },
            "nativeElement": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Returns a reference to the nativeElement of the cell.",
                            "```typescript",
                            "let cellNativeElement = this.cell.nativeElement;",
                            "```"
                        ]
                    }
                }
            },
            "inEditMode": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets whether the cell is in edit mode.",
                            "```typescript",
                            "let isCellInEditMode = this.cell.inEditMode;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "shortText": [
                            "Enables/disables the edit mode of the cell",
                            "```typescript",
                            "this.cell.inEditMode = true;",
                            "```"
                        ]
                    }
                }
            },
            "readonly": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets whether the cell is editable.",
                            "```typescript",
                            "let isCellReadonly = this.cell.readonly;",
                            "```"
                        ]
                    }
                }
            },
            "describedby": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Returns a string containing the grid `id` and the column `field` concatenated by \"_\".",
                            "```typescript",
                            "let describedBy = this.cell.describedBy;",
                            "```"
                        ]
                    }
                }
            },
            "styleClasses": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets the style classes of the cell.",
                            "```typescript",
                            "let cellStyleClasses = this.cell.styleClasses.",
                            "```"
                        ]
                    }
                }
            },
            "width": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets the width of the cell.",
                            "```typescript",
                            "let cellWidth = this.cell.width;",
                            "```"
                        ]
                    }
                }
            },
            "isPinned": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets whether the cell is stored in a pinned column.",
                            "```typescript",
                            "let isPinned = this.cell.isPinned;",
                            "```"
                        ]
                    }
                }
            },
            "isLastPinned": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets whether the cell is stored in the last column in the pinned area.",
                            "```typescript",
                            "let isLastPinned = this.cell.isLastPinned;",
                            "```"
                        ]
                    }
                }
            },
            "isLastUnpinned": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets whether the cell is stored in the last column in the unpinned area.",
                            "```typescript",
                            "let isLastUnpinned = this.cell.isLastUnpinned;",
                            "```"
                        ]
                    }
                }
            },
            "selected": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets whether the cell is selected.",
                            "```typescript",
                            "let isSelected = this.cell.selected;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "shortText": [
                            "Selects/deselects the cell.",
                            "```typescript",
                            "this.cell.selected = true.",
                            "```"
                        ]
                    }
                }
            }
        }
    }
}
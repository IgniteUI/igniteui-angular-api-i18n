{
    "IgxTreeGridRow": {
        "properties": {},
        "methods": {
            "pin": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "// pin the selected row from the grid",
                        "this.grid.selectedRows[0].pin();",
                        "```"
                    ],
                    "shortText": [
                        "Pins the specified row.",
                        "This method emits `onRowPinning` event."
                    ]
                }
            },
            "unpin": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "// unpin the selected row from the grid",
                        "this.grid.selectedRows[0].unpin();",
                        "```"
                    ],
                    "shortText": [
                        "Unpins the specified row.",
                        "This method emits `onRowPinning` event."
                    ]
                }
            },
            "update": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "// update the second selected row's value",
                        "let newValue = \"Apple\";",
                        "this.grid.selectedRows[1].update(newValue);",
                        "```"
                    ],
                    "shortText": "Updates the specified row object and the data source record with the passed value."
                }
            },
            "delete": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "// delete the third selected row from the grid",
                        "this.grid.selectedRows[2].delete();",
                        "```"
                    ],
                    "shortText": [
                        "Removes the specified row from the grid's data source.",
                        "This method emits `onRowDeleted` event."
                    ]
                }
            }
        },
        "accessors": {
            "viewIndex": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "Returns the view index calculated per the grid page."
                    }
                }
            },
            "data": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "text": [
                            "```typescript",
                            "let selectedRowData = this.grid.selectedRows[0].data;",
                            "```"
                        ],
                        "shortText": " The data passed to the row component."
                    }
                }
            },
            "children": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "Returns the child rows."
                    }
                }
            },
            "parent": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "Returns the parent row."
                    }
                }
            },
            "hasChildren": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "Returns true if child rows exist. Always return false for IgxGridRow."
                    }
                }
            },
            "treeRow": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "text": [
                            "```typescript",
                            "const rowParent = this.treeGrid.getRowByKey(1).treeRow.parent;",
                            "```"
                        ],
                        "shortText": "The `ITreeGridRecord` with metadata about the row in the context of the tree grid."
                    }
                }
            },
            "pinned": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "text": [
                            "```typescript",
                            "let isPinned = row.pinned;",
                            "```"
                        ],
                        "shortText": "Gets whether the row is pinned."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "text": [
                            "```typescript",
                            "let isPinned = row.pinned;",
                            "```"
                        ],
                        "shortText": [
                            "Sets whether the row is pinned.",
                            "Default value is `false`.",
                            "```typescript",
                            "row.pinned = !row.pinned;",
                            "```"
                        ]
                    }
                }
            },
            "expanded": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "text": [
                            "```typescript",
                            "let esExpanded = row.expanded;",
                            "```"
                        ],
                        "shortText": "Gets whether the row is expanded."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "text": [
                            "```typescript",
                            "row.expanded = true;",
                            "```"
                        ],
                        "shortText": "Expands/collapses the row."
                    }
                }
            },
            "key": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "text": [
                            "```typescript",
                            "let rowKey = row.key;",
                            "```"
                        ],
                        "shortText": [
                            "Gets the row key.",
                            "A row in the grid is identified either by:",
                            "- primaryKey data value,",
                            "- the whole rowData, if the primaryKey is omitted."
                        ]
                    }
                }
            },
            "addRowUI": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "text": [
                            "```typescript",
                            "let isAddRow = row.addRowUI;",
                            "```"
                        ],
                        "shortText": "Gets if this represents add row UI"
                    }
                }
            },
            "inEditMode": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "Returns if the row is currently in edit mode."
                    }
                }
            },
            "selected": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Gets whether the row is selected.",
                            "Default value is `false`.",
                            "```typescript",
                            "row.selected = true;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Sets whether the row is selected.",
                            "Default value is `false`.",
                            "```typescript",
                            "row.selected = !row.selected;",
                            "```"
                        ]
                    }
                }
            },
            "deleted": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "Returns if the row is in delete state."
                    }
                }
            },
            "cells": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "Gets the rendered cells in the row component."
                    }
                }
            }
        }
    }
}
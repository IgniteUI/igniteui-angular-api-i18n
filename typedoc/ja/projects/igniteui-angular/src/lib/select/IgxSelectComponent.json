{
    "IgxSelectComponent": {
        "comment": {
            "blockTags": [],
            "modifierTags": {},
            "summary": [
                {
                    "kind": "text",
                    "text": "**Ignite UI for Angular Select** -\n[Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/select)\n\nThe "
                },
                {
                    "kind": "code",
                    "text": "`igxSelect`"
                },
                {
                    "kind": "text",
                    "text": " provides an input with dropdown list allowing selection of a single item.\n\nExample:\n"
                },
                {
                    "kind": "code",
                    "text": "```html\n<igx-select #select1 [placeholder]=\"'Pick One'\">\n  <label igxLabel>Select Label</label>\n  <igx-select-item *ngFor=\"let item of items\" [value]=\"item.field\">\n    {{ item.field }}\n  </igx-select-item>\n</igx-select>\n```"
                }
            ]
        },
        "properties": {
            "placeholder": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@Input",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "property that sets input placeholder."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "\n"
                        }
                    ]
                }
            },
            "disabled": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@Input",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "property that disables the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxSelectComponent`"
                                },
                                {
                                    "kind": "text",
                                    "text": "。\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-select [disabled]=\"'true'\"></igx-select>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "\n"
                        }
                    ]
                }
            },
            "overlaySettings": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@Input",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "property that sets custom OverlaySettings "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxSelectComponent`"
                                },
                                {
                                    "kind": "text",
                                    "text": "。\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-select [overlaySettings] = \"customOverlaySettings\"></igx-select>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "\n"
                        }
                    ]
                }
            },
            "opening": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted before the dropdown is opened\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-select opening='handleOpening($event)'></igx-select>\n```"
                        }
                    ]
                }
            },
            "opened": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after the dropdown is opened\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-select (opened)='handleOpened($event)'></igx-select>\n```"
                        }
                    ]
                }
            },
            "closing": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted before the dropdown is closed\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-select (closing)='handleClosing($event)'></igx-select>\n```"
                        }
                    ]
                }
            },
            "closed": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after the dropdown is closed\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-select (closed)='handleClosed($event)'></igx-select>\n```"
                        }
                    ]
                }
            },
            "toggleIconTemplate": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The custom template, if any, that should be used when rendering the select TOGGLE(open/close) button\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// Set in typescript\nconst myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\nmyComponent.select.toggleIconTemplate = myCustomTemplate;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!-- Set in markup -->\n <igx-select #select>\n     ...\n     <ng-template igxSelectToggleIcon let-collapsed>\n         <igx-icon>{{ collapsed ? 'remove_circle' : 'remove_circle_outline'}}</igx-icon>\n     </ng-template>\n </igx-select>\n```"
                        }
                    ]
                }
            },
            "headerTemplate": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The custom template, if any, that should be used when rendering the HEADER for the select items list\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// Set in typescript\nconst myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\nmyComponent.select.headerTemplate = myCustomTemplate;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!-- Set in markup -->\n <igx-select #select>\n     ...\n     <ng-template igxSelectHeader>\n         <div class=\"select__header\">\n             This is a custom header\n         </div>\n     </ng-template>\n </igx-select>\n```"
                        }
                    ]
                }
            },
            "footerTemplate": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The custom template, if any, that should be used when rendering the FOOTER for the select items list\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// Set in typescript\nconst myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\nmyComponent.select.footerTemplate = myCustomTemplate;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!-- Set in markup -->\n <igx-select #select>\n     ...\n     <ng-template igxSelectFooter>\n         <div class=\"select__footer\">\n             This is a custom footer\n         </div>\n     </ng-template>\n </igx-select>\n```"
                        }
                    ]
                }
            },
            "labelledBy": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@Input",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "property that set aria-labelledby attribute\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-drop-down [labelledby]=\"labelId\"></igx-drop-down>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "\n"
                        }
                    ]
                }
            },
            "selectionChanging": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when item selection is changing, before the selection completes\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-drop-down (selectionChanging)='handleSelection()'></igx-drop-down>\n```"
                        }
                    ]
                }
            }
        },
        "methods": {
            "open": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Opens the select\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.select.open();\n```"
                        }
                    ]
                }
            },
            "close": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Closes the dropdown\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.dropdown.close();\n```"
                        }
                    ]
                }
            },
            "toggle": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Toggles the dropdown\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.dropdown.toggle();\n```"
                        }
                    ]
                }
            },
            "setSelectedItem": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Select an item by index"
                        }
                    ]
                }
            },
            "navigateItem": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Navigates to the item on the specified index\nIf the data in the drop-down is virtualized, pass the index of the item in the virtualized data."
                        }
                    ]
                }
            },
            "onItemActionKey": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Keydown Handler"
                        }
                    ]
                }
            },
            "clearSelection": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Clears the selection of the dropdown\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.dropdown.clearSelection();\n```"
                        }
                    ]
                }
            }
        },
        "accessors": {
            "value": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@Input",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "property that gets/sets the component value.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```typescript\n// get\nlet selectValue = this.select.value;\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```typescript\n// set\nthis.select.value = 'London';\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-select [value]=\"value\"></igx-select>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "\n"
                            }
                        ]
                    }
                }
            },
            "type": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@Input",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "property that sets how the select will be styled.\nThe allowed values are "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`line`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "、"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`box`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " and "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`border`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ". The input-group default is "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`line`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "。\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-select [type]=\"'box'\"></igx-select>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "\n"
                            }
                        ]
                    }
                }
            },
            "listId": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Id of the internal listbox of the drop down"
                            }
                        ]
                    }
                }
            },
            "collapsed": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets if the dropdown is collapsed\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nlet isCollapsed = this.dropdown.collapsed;\n```"
                            }
                        ]
                    }
                }
            },
            "items": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Get all non-header items\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nlet myDropDownItems = this.dropdown.items;\n```"
                            }
                        ]
                    }
                }
            },
            "headers": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Get all header items\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nlet myDropDownHeaderItems = this.dropdown.headers;\n```"
                            }
                        ]
                    }
                }
            },
            "element": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Get dropdown html element\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nlet myDropDownElement = this.dropdown.element;\n```"
                            }
                        ]
                    }
                }
            },
            "displayDensity": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "コンポーネントのテーマを返します。\nデフォルト テーマは "
                            },
                            {
                                "kind": "code",
                                "text": "`comfortable`"
                            },
                            {
                                "kind": "text",
                                "text": "。\n利用可能なオプションは "
                            },
                            {
                                "kind": "code",
                                "text": "`comfortable`"
                            },
                            {
                                "kind": "text",
                                "text": "、"
                            },
                            {
                                "kind": "code",
                                "text": "`cosy`"
                            },
                            {
                                "kind": "text",
                                "text": "、"
                            },
                            {
                                "kind": "code",
                                "text": "`compact` です"
                            },
                            {
                                "kind": "text",
                                "text": "。\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nlet componentTheme = this.component.displayDensity;\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "コンポーネントのテーマを設定します。"
                            }
                        ]
                    }
                }
            }
        }
    }
}
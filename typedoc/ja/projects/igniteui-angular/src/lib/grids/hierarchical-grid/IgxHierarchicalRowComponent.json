{
    "IgxHierarchicalRowComponent": {
        "properties": {
            "index": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "// 2 番目に選択された項目のインデックスを取得します。",
                        "let selectedRowIndex = this.grid.selectedRows[1].index;",
                        "```"
                    ],
                    "shortText": "行のインデックス。"
                }
            },
            "disabled": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "この特定の行が編集および行選択の機能を無効にしたかどうかを設定します。",
                        "デフォルト値は `false` です。",
                        "```typescript",
                        "this.grid.selectedRows[0].pinned = true;",
                        "```"
                    ]
                }
            }
        },
        "methods": {
            "toggle": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "階層行を切り替えます。",
                        "```typescript",
                        "this.grid1.rowList.first.toggle()",
                        "```"
                    ]
                }
            },
            "update": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "// 2 番目に選択された行の値を更新します。",
                        "let newValue = \"Apple\";",
                        "this.grid.selectedRows[1].update(newValue);",
                        "```"
                    ],
                    "shortText": "指定した行オブジェクトおよびデータ ソース レコードを渡された値で更新します。"
                }
            },
            "delete": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "// グリッドで 3 番目に選択された行を削除します。",
                        "this.grid.selectedRows[2].delete();",
                        "```"
                    ],
                    "shortText": [
                        "グリッドのデータソースから指定した行を削除します。",
                        "このメソッドは `rowDeleted` イベントを発生します。"
                    ]
                }
            },
            "pin": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "// グリッドから選択した行をピン固定します。",
                        "this.grid.selectedRows[0].pin();",
                        "```"
                    ],
                    "shortText": [
                        "指定された行をピン固定します。",
                        "このメソッドは `rowPinning`\\`rowPinned` イベントを発生します。"
                    ]
                }
            },
            "unpin": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "// グリッドから選択した行をピン固定解除します。",
                        "this.grid.selectedRows[0].unpin();",
                        "```"
                    ],
                    "shortText": [
                        "指定された行のピン固定を解除します。",
                        "このメソッドは `rowPinning`\\`rowPinned` イベントを発生します。"
                    ]
                }
            },
            "beginAddRow": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "const row = this.grid1.getRowByIndex(1);",
                                    "row.beginAddRow();",
                                    "```"
                                ],
                                "tagName": "例:"
                            }
                        }
                    },
                    "shortText": "特定の行の行追加 UI を生成します。"
                }
            }
        },
        "accessors": {
            "expanded": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "行が展開されるかどうかを返します。",
                            "```typescript",
                            "const RowExpanded = this.grid1.rowList.first.expanded;",
                            "```"
                        ]
                    }
                }
            },
            "data": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "text": [
                            "```typescript",
                            "// 1 番目に選択された行のデータを取得します。",
                            "let selectedRowData = this.grid.selectedRows[0].data;",
                            "```"
                        ],
                        "shortText": " 行コンポーネントに渡されるデータ。"
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "text": [
                            "```typescript",
                            "// 1 番目に選択された行のデータを取得します。",
                            "let selectedRowData = this.grid.selectedRows[0].data;",
                            "```"
                        ],
                        "shortText": " 行コンポーネントに渡されるデータ。"
                    }
                }
            },
            "pinned": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "行がピン固定されるかどうかを取得します。",
                            "```typescript",
                            "let isPinned = row.pinned;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "行がピン固定されるかどうかを設定します。",
                            "デフォルト値は `false` です。",
                            "```typescript",
                            "this.grid.selectedRows[0].pinned = true;",
                            "```"
                        ]
                    }
                }
            },
            "cells": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "text": [
                            "```typescript",
                            "// 3 番目に選択された行のセルを取得します。",
                            "let selectedRowCells = this.grid.selectedRows[2].cells;",
                            "```"
                        ],
                        "shortText": "行コンポーネントで描画されるセルを取得します。"
                    }
                }
            },
            "key": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "text": [
                            "```typescript",
                            "let rowID = this.grid.selectedRows[2].key;",
                            "```"
                        ],
                        "shortText": [
                            "行の ID を取得します。",
                            "グリッドの行は、次のいずれかの方法で識別されます::",
                            "- primaryKey の値,",
                            "- primaryKey が省略された場合、data 全体。"
                        ]
                    }
                }
            },
            "nativeElement": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "text": [
                            "```typescript",
                            "// 選択された 2 番目の nativeElement を取得します。",
                            "let selectedRowNativeElement = this.grid.selectedRows[1].nativeElement;",
                            "```"
                        ],
                        "shortText": "行を表すネイティブ DOM 要素。特定の環境で null 値か可能です。"
                    }
                }
            }
        }
    }
}
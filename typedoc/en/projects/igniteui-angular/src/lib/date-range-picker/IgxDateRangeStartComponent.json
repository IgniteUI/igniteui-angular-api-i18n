{
    "IgxDateRangeStartComponent": {
        "comment": {
            "blockTags": [
                {
                    "tag": "@igxModule",
                    "content": [
                        {
                            "kind": "text",
                            "text": "IgxDateRangePickerModule"
                        }
                    ]
                },
                {
                    "tag": "@igxTheme",
                    "content": [
                        {
                            "kind": "text",
                            "text": "igx-input-group-theme, igx-calendar-theme, igx-date-range-picker-theme"
                        }
                    ]
                },
                {
                    "tag": "@igxKeywords",
                    "content": [
                        {
                            "kind": "text",
                            "text": "date, range, date range, date picker"
                        }
                    ]
                },
                {
                    "tag": "@igxGroup",
                    "content": [
                        {
                            "kind": "text",
                            "text": "scheduling"
                        }
                    ]
                },
                {
                    "tag": "@remarks",
                    "content": [
                        {
                            "kind": "text",
                            "text": "When templating, start input has to be templated separately"
                        }
                    ]
                },
                {
                    "tag": "@example",
                    "content": [
                        {
                            "kind": "code",
                            "text": "```html\n<igx-date-range-picker mode=\"dropdown\">\n     <igx-date-range-start>\n         <input igxInput igxDateTimeEditor type=\"text\">\n     </igx-date-range-start>\n     ...\n</igx-date-range-picker>\n```"
                        }
                    ]
                }
            ],
            "modifierTags": {},
            "summary": [
                {
                    "kind": "text",
                    "text": "Defines the start input for a date range picker"
                }
            ]
        },
        "properties": {
            "defaultClass": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Property that enables/disables the auto-generated class of the "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxInputGroupComponent`"
                        },
                        {
                            "kind": "text",
                            "text": ".\nBy default applied the class is applied.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n @ViewChild(\"MyInputGroup\")\n public inputGroup: IgxInputGroupComponent;\n ngAfterViewInit(){\n this.inputGroup.defaultClass = false;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n}"
                        }
                    ]
                }
            },
            "suppressInputAutofocus": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Automatic focus causes software keyboard to show on mobile devices."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-input-group [suppressInputAutofocus]=\"true\"></igx-input-group>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Prevents automatically focusing the input when clicking on other elements in the input group (e.g. prefix or suffix)."
                        }
                    ]
                }
            }
        },
        "methods": {
            "getComponentSizeStyles": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Sets the "
                        },
                        {
                            "kind": "code",
                            "text": "`--component-size`"
                        },
                        {
                            "kind": "text",
                            "text": " CSS variable based on the value of Display Density"
                        }
                    ]
                }
            }
        },
        "accessors": {
            "resourceStrings": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the resource strings."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the resource strings.\nBy default it uses EN resources."
                            }
                        ]
                    }
                }
            },
            "type": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the type of the "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxInputGroupComponent`"
                            },
                            {
                                "kind": "text",
                                "text": ". How the input is styled.\nThe default is "
                            },
                            {
                                "kind": "code",
                                "text": "`line`"
                            },
                            {
                                "kind": "text",
                                "text": ".\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"MyInputGroup\")\npublic inputGroup: IgxInputGroupComponent;\nngAfterViewInit(){\n   let inputType = this.inputGroup.type;\n}\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@Input",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "property that sets how the input will be styled.\nAllowed values of type IgxInputGroupType.\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-input-group [type]=\"'search'\">\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "An"
                            }
                        ]
                    }
                }
            },
            "theme": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the theme of the input.\nThe returned value is of type IgxInputGroupType.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"MyInputGroup\")\npublic inputGroup: IgxInputGroupComponent;\nngAfterViewInit() {\n let inputTheme = this.inputGroup.theme;\n}"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the theme of the input.\nAllowed values of type IgxInputGroupTheme.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"MyInputGroup\")\npublic inputGroup: IgxInputGroupComponent;\nngAfterViewInit() {\n let inputTheme = 'fluent';\n}"
                            }
                        ]
                    }
                }
            },
            "hasHints": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns whether the "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxInputGroupComponent`"
                            },
                            {
                                "kind": "text",
                                "text": " has hints.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"MyInputGroup\")\npublic inputGroup: IgxInputGroupComponent;\nngAfterViewInit(){\n   let inputHints = this.inputGroup.hasHints;\n}\n```"
                            }
                        ]
                    }
                }
            },
            "hasBorder": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns whether the "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxInputGroupComponent`"
                            },
                            {
                                "kind": "text",
                                "text": " has border.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"MyInputGroup\")\npublic inputGroup: IgxInputGroupComponent;\nngAfterViewInit(){\n   let inputBorder = this.inputGroup.hasBorder;\n}\n```"
                            }
                        ]
                    }
                }
            },
            "isTypeLine": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns whether the "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxInputGroupComponent`"
                            },
                            {
                                "kind": "text",
                                "text": " type is line.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"MyInputGroup1\")\npublic inputGroup: IgxInputGroupComponent;\nngAfterViewInit(){\n   let isTypeLine = this.inputGroup.isTypeLine;\n}\n```"
                            }
                        ]
                    }
                }
            },
            "isTypeBox": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns whether the "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxInputGroupComponent`"
                            },
                            {
                                "kind": "text",
                                "text": " type is box.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"MyInputGroup1\")\npublic inputGroup: IgxInputGroupComponent;\nngAfterViewInit(){\n   let isTypeBox = this.inputGroup.isTypeBox;\n}\n```"
                            }
                        ]
                    }
                }
            },
            "isTypeBorder": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns whether the "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxInputGroupComponent`"
                            },
                            {
                                "kind": "text",
                                "text": " type is border.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"MyInputGroup1\")\npublic inputGroup: IgxInputGroupComponent;\nngAfterViewInit(){\n   let isTypeBorder = this.inputGroup.isTypeBorder;\n}\n```"
                            }
                        ]
                    }
                }
            },
            "isTypeFluent": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns true if the "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxInputGroupComponent`"
                            },
                            {
                                "kind": "text",
                                "text": " theme is Fluent.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"MyInputGroup1\")\npublic inputGroup: IgxInputGroupComponent;\nngAfterViewInit(){\n   let isTypeFluent = this.inputGroup.isTypeFluent;\n}\n```"
                            }
                        ]
                    }
                }
            },
            "isTypeBootstrap": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns true if the "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxInputGroupComponent`"
                            },
                            {
                                "kind": "text",
                                "text": " theme is Bootstrap.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"MyInputGroup1\")\npublic inputGroup: IgxInputGroupComponent;\nngAfterViewInit(){\n   let isTypeBootstrap = this.inputGroup.isTypeBootstrap;\n}\n```"
                            }
                        ]
                    }
                }
            },
            "isTypeIndigo": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns true if the "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxInputGroupComponent`"
                            },
                            {
                                "kind": "text",
                                "text": " theme is Indigo.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"MyInputGroup1\")\npublic inputGroup: IgxInputGroupComponent;\nngAfterViewInit(){\n   let isTypeIndigo = this.inputGroup.isTypeIndigo;\n}\n```"
                            }
                        ]
                    }
                }
            },
            "isTypeSearch": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns whether the "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxInputGroupComponent`"
                            },
                            {
                                "kind": "text",
                                "text": " type is search.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"MyInputGroup1\")\npublic inputGroup: IgxInputGroupComponent;\nngAfterViewInit(){\n   let isTypeSearch = this.inputGroup.isTypeSearch;\n}\n```"
                            }
                        ]
                    }
                }
            },
            "displayDensity": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@deprecated",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "since version 16.1.x.\nPlease use the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`--ig-size`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " CSS custom property."
                                    }
                                ]
                            },
                            {
                                "tag": "@see",
                                "content": [
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@link",
                                        "text": "[Update Guide](https://www.infragistics.com/products/ignite-ui-angular/angular/components/general/update-guide#from-160x-to-161x)"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nReturns the theme of the component.\nThe default theme is "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`comfortable`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\nAvailable options are "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`comfortable`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`cosy`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`compact`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nlet componentTheme = this.component.displayDensity;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": []
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the theme of the component."
                            }
                        ]
                    }
                }
            }
        }
    }
}
{
    "IgxColumnGroupComponent": {
        "properties": {
            "searchable": {
                "comment": {
                    "shortText": [
                        "列グループが検索可能 (`searchable`) かどうかを取得または設定します。",
                        "デフォルト値は `true` です。",
                        "```typescript",
                        "let isSearchable =  this.columnGroup.searchable;",
                        "```",
                        "```html",
                        " <igx-column-group [searchable] = \"false\"></igx-column-group>",
                        "```"
                    ]
                }
            },
            "field": {
                "comment": {
                    "shortText": [
                        "`field` 値を取得または設定します。",
                        "```typescript",
                        "let columnField = this.column.field;",
                        "```",
                        "```html",
                        "<igx-column [field] = \"'ID'\"></igx-column>",
                        "```"
                    ]
                }
            },
            "header": {
                "comment": {
                    "shortText": [
                        "`header` 値を取得または設定します。",
                        "```typescript",
                        "let columnHeader = this.column.header;",
                        "```",
                        "```html",
                        "<igx-column [header] = \"'ID'\"></igx-column>",
                        "```"
                    ]
                }
            },
            "sortable": {
                "comment": {
                    "shortText": [
                        "列が並べ替え可能かどうかを取得または設定します。",
                        "デフォルトは `false` です。",
                        "```typescript",
                        "let isSortable = this.column.sortable;",
                        "```",
                        "```html",
                        "<igx-column [sortable] = \"true\"></igx-column>",
                        "```"
                    ]
                }
            },
            "groupable": {
                "comment": {
                    "shortText": [
                        "列がグループ化可能かどうかを取得または設定します。",
                        "デフォルトは `false` です。",
                        "```typescript",
                        "let isGroupable = this.column.groupable;",
                        "```",
                        "```html",
                        "<igx-column [groupable] = \"true\"></igx-column>",
                        "```"
                    ]
                }
            },
            "editable": {
                "comment": {
                    "shortText": [
                        "列が編集可能かどうかを取得または設定します。",
                        "デフォルトは `false` です。",
                        "```typescript",
                        "let isEditable = this.column.editable;",
                        "```",
                        "```html",
                        "<igx-column [editable] = \"true\"></igx-column>",
                        "```"
                    ]
                }
            },
            "filterable": {
                "comment": {
                    "shortText": [
                        "列がフィルター可能かどうかを取得または設定します。",
                        "デフォルトは `false` です。",
                        "```typescript",
                        "let isFilterable = this.column.filterable;",
                        "```",
                        "```html",
                        "<igx-column [filterable] = \"true\"></igx-column>",
                        "```"
                    ]
                }
            },
            "resizable": {
                "comment": {
                    "shortText": [
                        "列がサイズ変更可能かどうかを取得または設定します。",
                        "デフォルトは `false` です。",
                        "```typescript",
                        "let isResizable = this.column.resizable;",
                        "```",
                        "```html",
                        "<igx-column [resizable] = \"true\"></igx-column>",
                        "```"
                    ]
                }
            },
            "hasSummary": {
                "comment": {
                    "shortText": [
                        "列の集計を有効または無効にします。",
                        "デフォルトは `false` です。",
                        "```typescript",
                        "let hasSummary = this.column.hasSummary;",
                        "```",
                        "```html",
                        "<igx-column [hasSummary] = \"true\"></igx-column>",
                        "```"
                    ]
                }
            },
            "movable": {
                "comment": {
                    "shortText": [
                        "列が移動可能かどうかを取得または設定します。",
                        "デフォルトは `false` です。",
                        "```typescript",
                        "let isMovable = this.column.movable;",
                        "```",
                        "```html",
                        "<igx-column [movable] = \"true\"></igx-column>",
                        "```"
                    ]
                }
            },
            "maxWidth": {
                "comment": {
                    "shortText": [
                        "列の最大の `width` を取得または設定します。",
                        "```typescript",
                        "let columnMaxWidth = this.column.width;",
                        "```",
                        "```html",
                        "<igx-column [maxWidth] = \"'75%'\"></igx-column>",
                        "```"
                    ]
                }
            },
            "minWidth": {
                "comment": {
                    "shortText": [
                        "列の最小の `width` を取得または設定します。",
                        "Default value is `88`;",
                        "```typescript",
                        "let columnMinWidth = this.column.minWidth;",
                        "```",
                        "```html",
                        "<igx-column [minWidth] = \"'15%'\"></igx-column>",
                        "```"
                    ]
                }
            },
            "headerClasses": {
                "comment": {
                    "shortText": [
                        "列ヘッダーのクラス セレクターを取得または設定します。",
                        "```typescript",
                        "let columnHeaderClass = this.column.headerClasses;",
                        "```",
                        "```html",
                        "<igx-column [headerClasses] = \"'column-header'\"></igx-column>",
                        "```"
                    ]
                }
            },
            "cellClasses": {
                "comment": {
                    "shortText": [
                        "列セルの条件付きクラス セレクターを設定します。",
                        "キーと値のペアを含むオブジェクト リテラルを受け取ります。キーは CSS クラスの名前です。値はブール値を返すコールバック関数またはブール値です。例:",
                        "```typescript",
                        "callback = (rowData, columnKey) => { return rowData[columnKey] > 6; }",
                        "cellClasses = { 'className' : this.callback };",
                        "```",
                        "```html",
                        "<igx-column [cellClasses] = \"cellClasses\"></igx-column>",
                        "<igx-column [cellClasses] = \"{'class1' : true }\"></igx-column>",
                        "```"
                    ]
                }
            },
            "formatter": {
                "comment": {
                    "shortText": [
                        "列のフォーマッタを取得または設定します。",
                        "```typescript",
                        "let columnFormatter = this.column.formatter;",
                        "```",
                        "```typescript",
                        "this.column.formatter = (val: Date) => {",
                        "return new Intl.DateTimeFormat(\"en-US\").format(val);",
                        "```"
                    ]
                }
            },
            "filteringIgnoreCase": {
                "comment": {
                    "shortText": [
                        "列フィルタリングが大文字と小文字を区別するかどうかを取得または設定します。",
                        "デフォルト値は `true` です。",
                        "```typescript",
                        "let filteringIgnoreCase = this.column.filteringIgnoreCase;",
                        "```",
                        "```html",
                        "<igx-column [filteringIgnoreCase] = \"false\"></igx-column>",
                        "```"
                    ]
                }
            },
            "sortingIgnoreCase": {
                "comment": {
                    "shortText": [
                        "列並べ替えが大文字と小文字を区別するかどうかを取得または設定します。",
                        "デフォルト値は `true` です。",
                        "```typescript",
                        "let sortingIgnoreCase = this.column.sortingIgnoreCase;",
                        "```",
                        "```html",
                        "<igx-column [sortingIgnoreCase] = \"false\"></igx-column>",
                        "```"
                    ]
                }
            },
            "dataType": {
                "comment": {
                    "shortText": [
                        "列値のデータ タイプを取得または設定します。",
                        "デフォルトは `string` です。",
                        "```typescript",
                        "let columnDataType = this.column.dataType;",
                        "```",
                        "```html",
                        "<igx-column [dataType] = \"'number'\"></igx-column>",
                        "```"
                    ]
                }
            },
            "gridID": {
                "comment": {
                    "shortText": [
                        "`igx-grid` の `id` を取得または設定します。",
                        "```typescript",
                        "let columnGridId = this.column.gridID;",
                        "```",
                        "```typescript",
                        "this.column.gridID = 'grid-1';",
                        "```"
                    ]
                }
            },
            "defaultWidth": {
                "comment": {
                    "shortText": [
                        "非表示"
                    ]
                }
            },
            "widthSetByUser": {
                "comment": {
                    "shortText": [
                        "非表示"
                    ]
                }
            },
            "parent": {
                "comment": {
                    "shortText": [
                        "親列を取得または設定します。",
                        "```typescript",
                        "let parentColumn = this.column.parent;",
                        "```",
                        "```typescript",
                        "this.column.parent = higherLevelColumn;",
                        "```"
                    ]
                }
            }
        },
        "methods": {
            "updateHighlights": {
                "comment": {
                    "shortText": [
                        "列インデックスが変更されたときに強調表示を更新します。",
                        "```typescript",
                        "this.column.updateHighlights(1, 3);",
                        "```"
                    ]
                }
            },
            "pin": {
                "comment": {
                    "shortText": [
                        "ピン固定領域で指定したインデックスに列をピン固定します。指定されない場合、デフォルトのインデックスは `0` です。",
                        "```typescript",
                        "this.column.pin();",
                        "```"
                    ]
                }
            },
            "unpin": {
                "comment": {
                    "shortText": [
                        "列をピン固定解除してピン固定されない領域で指定したインデックスに配置します。指定されない場合、デフォルトのインデックスは `0` です。",
                        "```typescript",
                        "this.column.unpin();",
                        "```"
                    ]
                }
            },
            "autosize": {
                "comment": {
                    "text": [
                        "let column = this.grid.columnList.filter(c => c.field === 'ID')[0];",
                        "column.autosize();",
                        "```"
                    ],
                    "shortText": [
                        "列を現在表示中のセルヘッダーを含むセル値に自動でサイズ変更します。",
                        "```typescript",
                        "@ViewChild('grid') grid: IgxGridComponent;"
                    ]
                }
            }
        },
        "accessors": {
            "summaries": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "列グループの `summaries` を取得します。",
                            "```typescript",
                            "let columnGroupSummaries = this.columnGroup.summaries;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "shortText": [
                            "列グループの `summaries` を設定します。",
                            "```typescript",
                            "this.columnGroup.summaries = IgxNumberSummaryOperand;",
                            "```"
                        ]
                    }
                }
            },
            "filters": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "列グループの `filters` を取得します。",
                            "```typescript",
                            "let columnGroupFilters = this.columnGroup.filters;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "shortText": [
                            "列グループの `filters` を設定します。",
                            "```typescript",
                            "this.columnGroup.filters = IgxStringFilteringOperand;",
                            "```"
                        ]
                    }
                }
            },
            "defaultMinWidth": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "列グループのデフォルト最小の `width` を取得します。",
                            "```typescript",
                            "let defaultMinWidth = this.columnGroup.defaultMinWidth;",
                            "```"
                        ]
                    }
                }
            },
            "cells": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "列グループのセルを取得します。",
                            "```typescript",
                            "let columnCells = this.columnGroup.cells;",
                            "```"
                        ]
                    }
                }
            },
            "hidden": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "列グループが非表示されるかどうかを取得します。",
                            "```typescript",
                            "let isHidden = this.columnGroup.hidden;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "shortText": [
                            "列グループの hidden プロパティを設定します。",
                            "```typescript",
                            "<igx-column [hidden] = \"true\"></igx-column>",
                            "```"
                        ]
                    }
                }
            },
            "allChildren": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "子列のコレクションを返します。",
                            "```typescript",
                            "let columns =  this.columnGroup.allChildren;",
                            "```"
                        ]
                    }
                }
            },
            "columnGroup": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "列が `ColumnGroup` かどうかを示すブール値を返します。",
                            "```typescript",
                            "let isColumnGroup =  this.columnGroup.columnGroup",
                            "```"
                        ]
                    }
                }
            },
            "width": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "列グループの幅を取得します。",
                            "```typescript",
                            "let columnGroupWidth = this.columnGroup.width;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "shortText": [
                            "列グループの幅を取得します。",
                            "```typescript",
                            "let columnGroupWidth = this.columnGroup.width;",
                            "```"
                        ]
                    }
                }
            },
            "disableHiding": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "非表示が無効かどうかを取得します。",
                            "```typescript",
                            "let isHidingDisabled =  this.column.disableHiding;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "shortText": [
                            "列の非表示を有効/無効にします。",
                            "デフォルトは `false` です。",
                            "```typescript",
                            "<igx-column [hidden] = \"true\"></igx-column>",
                            "```"
                        ]
                    }
                }
            },
            "index": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "列インデックスを取得します。",
                            "```typescript",
                            "let columnIndex = this.column.index;",
                            "```"
                        ]
                    }
                }
            },
            "pinned": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "列が `pinned` かどうかを取得します。",
                            "```typescript",
                            "let isPinned = this.column.pinned;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "shortText": [
                            "列がピン固定されるかどうかを設定します。",
                            "デフォルトは `false` です。",
                            "```html",
                            "<igx-column [pinned] = \"true\"></igx-column>",
                            "```"
                        ]
                    }
                }
            },
            "grid": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "`igx-grid` への参照を返します。",
                            "```typescript",
                            "let gridComponent = this.column.grid;",
                            "```"
                        ]
                    }
                }
            },
            "visibleIndex": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "列の表示インデックスを取得します。",
                            "列が表示されない場合、 `-1` が返されます。",
                            "```typescript",
                            "let visibleColumnIndex =  this.column.visibleIndex;",
                            "```"
                        ]
                    }
                }
            },
            "level": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "列グループの列のレベルを返します。",
                            "列に `parent` がない場合、`0` を返します。",
                            "```typescript",
                            "let columnLevel =  this.column.level;",
                            "```"
                        ]
                    }
                }
            },
            "topLevelParent": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "最上位の親列への参照を返します。",
                            "```typescript",
                            "let topLevelParent =  this.column.topLevelParent;",
                            "```"
                        ]
                    }
                }
            },
            "headerCell": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "列のヘッダーへの参照を返します。",
                            "```typescript",
                            "let column = this.grid.columnList.filter(c => c.field === 'ID')[0];",
                            "let headerCell = column.headerCell;",
                            "```"
                        ]
                    }
                }
            }
        },
        "functions": {}
    }
}

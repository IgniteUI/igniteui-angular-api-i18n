{
    "IgxSliderComponent": {
        "comment": {
            "blockTags": [],
            "modifierTags": {},
            "summary": [
                {
                    "kind": "text",
                    "text": "**Ignite UI for Angular Slider** -\n[Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/slider/slider)\n\nThe Ignite UI Slider allows selection in a given range by moving the thumb along the track. The track\ncan be defined as continuous or stepped, and you can choose between single and range slider types.\n\nExample:\n"
                },
                {
                    "kind": "code",
                    "text": "```html\n<igx-slider id=\"slider\"\n           [minValue]=\"0\" [maxValue]=\"100\"\n           [continuous]=true [(ngModel)]=\"volume\">\n</igx-slider>\n```"
                }
            ]
        },
        "properties": {
            "id": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@Input",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "property that sets the value of the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`id`"
                                },
                                {
                                    "kind": "text",
                                    "text": " attribute.\nIf not provided it will be automatically generated.\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-slider [id]=\"'igx-slider-32'\" [(ngModel)]=\"task.percentCompleted\" [step]=\"5\" [lowerBound]=\"20\">\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "An"
                        }
                    ]
                }
            },
            "thumbLabelVisibilityDuration": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@Input",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "property that sets the duration visibility of thumbs labels. The default value is 750 milliseconds.\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-slider #slider [thumbLabelVisibilityDuration]=\"3000\" [(ngModel)]=\"task.percentCompleted\" [step]=\"5\">\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "An"
                        }
                    ]
                }
            },
            "showTicks": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Show/hide slider ticks\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-slier [showTicks]=\"true\" [primaryTicks]=\"5\"></igx-slier>\n```"
                        }
                    ]
                }
            },
            "primaryTickLabels": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "show/hide primary tick labels\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-slider [primaryTicks]=\"5\" [primaryTickLabels]=\"false\"></igx-slider>\n```"
                        }
                    ]
                }
            },
            "secondaryTickLabels": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "show/hide secondary tick labels\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-slider [secondaryTicks]=\"5\" [secondaryTickLabels]=\"false\"></igx-slider>\n```"
                        }
                    ]
                }
            },
            "ticksOrientation": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Changes ticks orientation:\nbottom - The default orienation, below the slider track.\ntop - Above the slider track\nmirror - combines top and bottom orientation.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-slider [primaryTicks]=\"5\" [ticksOrientation]=\"ticksOrientation\"></igx-slider>\n```"
                        }
                    ]
                }
            },
            "tickLabelsOrientation": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Changes tick labels rotation:\nhorizontal - The default rotation\ntoptobottom - Rotates tick labels vertically to 90deg\nbottomtotop - Rotate tick labels vertically to -90deg\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-slider [primaryTicks]=\"5\" [secondaryTicks]=\"3\" [tickLabelsOrientation]=\"tickLabelsOrientaiton\"></igx-slider>\n```"
                        }
                    ]
                }
            },
            "valueChange": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "This event is emitted every time the value is changed.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\npublic change(event){\n   alert(\"The value has been changed!\");\n}\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-slider (valueChange)=\"change($event)\" #slider [(ngModel)]=\"task.percentCompleted\" [step]=\"5\">\n```"
                        }
                    ]
                }
            },
            "lowerValueChange": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "This event is emitted every time the lower value of a range slider is changed.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\npublic change(value){\n   alert(`The lower value has been changed to ${value}`);\n}\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-slider [(lowerValue)]=\"model.lowervalue\" (lowerValueChange)=\"change($event)\" [step]=\"5\">\n```"
                        }
                    ]
                }
            },
            "upperValueChange": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "This event is emitted every time the upper value of a range slider is changed.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\npublic change(value){\n   alert(`The upper value has been changed to ${value}`);\n}\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-slider [(upperValue)]=\"model.uppervalue\" (upperValueChange)=\"change($event)\" [step]=\"5\">\n```"
                        }
                    ]
                }
            },
            "dragFinished": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "This event is emitted at the end of every slide interaction.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\npublic change(event){\n   alert(\"The value has been changed!\");\n}\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-slider (dragFinished)=\"change($event)\" #slider [(ngModel)]=\"task.percentCompleted\" [step]=\"5\">\n```"
                        }
                    ]
                }
            }
        },
        "methods": {},
        "accessors": {
            "type": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@Input",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "property that gets the type of the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`IgxSliderComponent`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\nThe slider can be IgxSliderType.SLIDER(default) or IgxSliderType.RANGE.\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```typescript\n@ViewChild(\"slider2\")\npublic slider: IgxSliderComponent;\nngAfterViewInit(){\n    let type = this.slider.type;\n}"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "An"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@Input",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "property that sets the type of the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`IgxSliderComponent`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\nThe slider can be IgxSliderType.SLIDER(default) or IgxSliderType.RANGE.\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nsliderType: IgxSliderType = IgxSliderType.RANGE;\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-slider #slider2 [type]=\"sliderType\" [(ngModel)]=\"rangeValue\" [minValue]=\"0\" [maxValue]=\"100\">\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "An"
                            }
                        ]
                    }
                }
            },
            "labels": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Enables "
                            },
                            {
                                "kind": "code",
                                "text": "`labelView`"
                            },
                            {
                                "kind": "text",
                                "text": ", by accepting a collection of primitive values with more than one element.\nEach element will be equally spread over the slider and it will serve as a thumb label.\nOnce the property is set, it will precendence over "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "maxValue"
                            },
                            {
                                "kind": "text",
                                "text": ", "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "minValue"
                            },
                            {
                                "kind": "text",
                                "text": ", "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "step"
                            },
                            {
                                "kind": "text",
                                "text": ".\nThis means that the manipulation for those properties won't be allowed."
                            }
                        ]
                    }
                }
            },
            "context": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the template context corresponding\nto "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "IgxThumbFromTemplateDirective"
                            },
                            {
                                "kind": "text",
                                "text": " and "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "IgxThumbToTemplateDirective"
                            },
                            {
                                "kind": "text",
                                "text": " templates.\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nreturn {\n $implicit // returns the value of the label,\n labels // returns the labels collection the user has passed.\n}\n```"
                            }
                        ]
                    }
                }
            },
            "step": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the incremental/decremental dragging step of the "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "IgxSliderComponent"
                            },
                            {
                                "kind": "text",
                                "text": ".\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"slider2\")\npublic slider: IgxSliderComponent;\nngAfterViewInit(){\n    let step = this.slider.step;\n}\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@Input",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "property that sets the incremental/decremental step of the value when dragging the thumb.\nThe default step is 1, and step should not be less or equal than 0.\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-slider #slider [(ngModel)]=\"task.percentCompleted\" [step]=\"5\">\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "An"
                            }
                        ]
                    }
                }
            },
            "disabled": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns if the "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "IgxSliderComponent"
                            },
                            {
                                "kind": "text",
                                "text": " is disabled.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"slider2\")\npublic slider: IgxSliderComponent;\nngAfterViewInit(){\n    let isDisabled = this.slider.disabled;\n}\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@Input",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "property that disables or enables UI interaction.\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-slider #slider [disabled]=\"'true'\" [(ngModel)]=\"task.percentCompleted\" [step]=\"5\" [lowerBound]=\"20\">\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "An"
                            }
                        ]
                    }
                }
            },
            "continuous": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns if the "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "IgxSliderComponent"
                            },
                            {
                                "kind": "text",
                                "text": " is set as continuous.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"slider2\")\npublic slider: IgxSliderComponent;\nngAfterViewInit(){\n    let continuous = this.slider.continuous;\n}\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@Input",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "property that marks the "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@link",
                                        "text": "IgxSliderComponent"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " as continuous.\nBy default is considered that the "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@link",
                                        "text": "IgxSliderComponent"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is discrete.\nDiscrete "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@link",
                                        "text": "IgxSliderComponent"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " slider has step indicators over the track and visible thumb labels during interaction.\nContinuous "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@link",
                                        "text": "IgxSliderComponent"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " does not have ticks and does not show bubble labels for values.\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-slider #slider [continuous]=\"'true'\" [(ngModel)]=\"task.percentCompleted\" [step]=\"5\" [lowerBound]=\"20\">\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "An"
                            }
                        ]
                    }
                }
            },
            "minValue": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the minimal displayed track value of the "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxSliderComponent`"
                            },
                            {
                                "kind": "text",
                                "text": ".\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n @ViewChild(\"slider2\")\npublic slider: IgxSliderComponent;\nngAfterViewInit(){\n    let sliderMin = this.slider.minValue;\n}\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the minimal displayed track value for the "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxSliderComponent`"
                            },
                            {
                                "kind": "text",
                                "text": ".\nThe default minimal value is 0.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<igx-slider [type]=\"sliderType\" [minValue]=\"56\" [maxValue]=\"100\">\n```"
                            }
                        ]
                    }
                }
            },
            "maxValue": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the maximum displayed track value for the "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "IgxSliderComponent"
                            },
                            {
                                "kind": "text",
                                "text": ".\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"slider\")\npublic slider: IgxSliderComponent;\nngAfterViewInit(){\n    let sliderMax = this.slider.maxValue;\n}\n ```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the maximal displayed track value for the "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxSliderComponent`"
                            },
                            {
                                "kind": "text",
                                "text": ".\nThe default maximum value is 100.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<igx-slider [type]=\"sliderType\" [minValue]=\"56\" [maxValue]=\"256\">\n```"
                            }
                        ]
                    }
                }
            },
            "lowerBound": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the lower boundary of settable values of the "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxSliderComponent`"
                            },
                            {
                                "kind": "text",
                                "text": ".\nIf not set, will return "
                            },
                            {
                                "kind": "code",
                                "text": "`minValue`"
                            },
                            {
                                "kind": "text",
                                "text": ".\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"slider\")\npublic slider: IgxSliderComponent;\nngAfterViewInit(){\n    let sliderLowBound = this.slider.lowerBound;\n}\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the lower boundary of settable values of the "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxSliderComponent`"
                            },
                            {
                                "kind": "text",
                                "text": ".\nIf not set is the same as min value.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<igx-slider [step]=\"5\" [lowerBound]=\"20\">\n```"
                            }
                        ]
                    }
                }
            },
            "upperBound": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the upper boundary of settable values of the "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxSliderComponent`"
                            },
                            {
                                "kind": "text",
                                "text": ".\nIf not set, will return "
                            },
                            {
                                "kind": "code",
                                "text": "`maxValue`"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"slider\")\npublic slider: IgxSliderComponent;\nngAfterViewInit(){\n   let sliderUpBound = this.slider.upperBound;\n}\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the upper boundary of the "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxSliderComponent`"
                            },
                            {
                                "kind": "text",
                                "text": ".\nIf not set is the same as max value.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<igx-slider [step]=\"5\" [upperBound]=\"20\">\n```"
                            }
                        ]
                    }
                }
            },
            "value": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the slider value. If the slider is of type "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "IgxSliderType.SLIDER"
                            },
                            {
                                "kind": "text",
                                "text": " the returned value is number.\nIf the slider type is "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "IgxSliderType.RANGE"
                            },
                            {
                                "kind": "text",
                                "text": ".\nThe returned value represents an object of "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "lowerValue"
                            },
                            {
                                "kind": "text",
                                "text": " and "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "upperValue"
                            },
                            {
                                "kind": "text",
                                "text": ".\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"slider2\")\npublic slider: IgxSliderComponent;\npublic sliderValue(event){\n    let sliderVal = this.slider.value;\n}\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the slider value.\nIf the slider is of type "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "IgxSliderType.SLIDER"
                            },
                            {
                                "kind": "text",
                                "text": ".\nThe argument is number. By default the "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "value"
                            },
                            {
                                "kind": "text",
                                "text": " gets the "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "lowerBound"
                            },
                            {
                                "kind": "text",
                                "text": ".\nIf the slider type is "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "IgxSliderType.RANGE"
                            },
                            {
                                "kind": "text",
                                "text": " the argument\nrepresents an object of "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "lowerValue"
                            },
                            {
                                "kind": "text",
                                "text": " and "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "upperValue"
                            },
                            {
                                "kind": "text",
                                "text": " properties.\nBy default the object is associated with the "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "lowerBound"
                            },
                            {
                                "kind": "text",
                                "text": " and "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "upperBound"
                            },
                            {
                                "kind": "text",
                                "text": " property values.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nrangeValue = {\n  lower: 30,\n  upper: 60\n};\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<igx-slider [type]=\"sliderType\" [(ngModel)]=\"rangeValue\" [minValue]=\"56\" [maxValue]=\"256\">\n```"
                            }
                        ]
                    }
                }
            },
            "primaryTicks": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the number of the presented primary ticks.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nconst primaryTicks = this.slider.primaryTicks;\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the number of primary ticks. If "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "@labels"
                            },
                            {
                                "kind": "text",
                                "text": " is enabled, this property won't function.\nInsted enable ticks by "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "showTicks"
                            },
                            {
                                "kind": "text",
                                "text": " property.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nthis.slider.primaryTicks = 5;\n```"
                            }
                        ]
                    }
                }
            },
            "secondaryTicks": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the number of the presented secondary ticks.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nconst secondaryTicks = this.slider.secondaryTicks;\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the number of secondary ticks. The property functions even when "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "labels"
                            },
                            {
                                "kind": "text",
                                "text": " is enabled,\nbut all secondary ticks won't present any tick labels.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nthis.slider.secondaryTicks = 5;\n```"
                            }
                        ]
                    }
                }
            },
            "isRange": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns whether the "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxSliderComponent`"
                            },
                            {
                                "kind": "text",
                                "text": " type is RANGE.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n @ViewChild(\"slider\")\npublic slider: IgxSliderComponent;\nngAfterViewInit(){\n    let sliderRange = this.slider.isRange;\n}\n```"
                            }
                        ]
                    }
                }
            },
            "lowerValue": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the lower value of a RANGE "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxSliderComponent`"
                            },
                            {
                                "kind": "text",
                                "text": ".\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"slider\")\npublic slider: IgxSliderComponent;\npublic lowValue(event){\n   let sliderLowValue = this.slider.lowerValue;\n}\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the lower value of a RANGE "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxSliderComponent`"
                            },
                            {
                                "kind": "text",
                                "text": ".\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"slider\")\npublic slider: IgxSliderComponent;\npublic lowValue(event){\n   this.slider.lowerValue = value;\n}\n```"
                            }
                        ]
                    }
                }
            },
            "upperValue": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the upper value of a RANGE "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxSliderComponent`"
                            },
                            {
                                "kind": "text",
                                "text": ".\nReturns "
                            },
                            {
                                "kind": "code",
                                "text": "`value`"
                            },
                            {
                                "kind": "text",
                                "text": " of a SLIDER "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxSliderComponent`"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n @ViewChild(\"slider2\")\npublic slider: IgxSliderComponent;\npublic upperValue(event){\n    let upperValue = this.slider.upperValue;\n}\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the upper value of a RANGE "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxSliderComponent`"
                            },
                            {
                                "kind": "text",
                                "text": ".\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n @ViewChild(\"slider2\")\npublic slider: IgxSliderComponent;\npublic upperValue(event){\n    this.slider.upperValue = value;\n}\n```"
                            }
                        ]
                    }
                }
            },
            "lowerLabel": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the value corresponding the lower label.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"slider\")\npublic slider: IgxSliderComponent;\nlet label = this.slider.lowerLabel;\n```"
                            }
                        ]
                    }
                }
            },
            "upperLabel": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the value corresponding the upper label.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"slider\")\npublic slider: IgxSliderComponent;\nlet label = this.slider.upperLabel;\n```"
                            }
                        ]
                    }
                }
            },
            "labelsViewEnabled": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns if label view is enabled.\nIf the "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "labels"
                            },
                            {
                                "kind": "text",
                                "text": " is set, the view is automatically activated.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"slider\")\npublic slider: IgxSliderComponent;\nlet labelView = this.slider.labelsViewEnabled;\n```"
                            }
                        ]
                    }
                }
            }
        }
    }
}
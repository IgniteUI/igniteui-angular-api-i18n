{
    "em": {
        "description": [
            "<p>ピクセルを相対値 (em) に変換します。</p>",
            ""
        ],
        "parameters": {
            "pixels": {
                "description": [
                    "<p>変換するピクセル値。</p>",
                    ""
                ]
            },
            "context": {
                "description": [
                    "<p>対して変換するベース コンテキスト。</p>",
                    ""
                ]
            }
        },
        "returns": {
            "description": [
                "<p>em に変換されたピクセル値を返します。</p>",
                ""
            ]
        },
        "example": [
            {
                "code": [
                    ".my-component {",
                    "  margin: em(10px) em(5px);",
                    "}"
                ]
            }
        ]
    },
    "rem": {
        "description": [
            "<p>ピクセルをルート相対値 (rem) に変換します。</p>",
            ""
        ],
        "parameters": {
            "pixels": {
                "description": [
                    "<p>変換するピクセル値。</p>",
                    ""
                ]
            },
            "context": {
                "description": [
                    "<p>対して変換するベース コンテキスト。</p>",
                    ""
                ]
            }
        },
        "returns": {
            "description": [
                "<p>rem に変換されたピクセル値を返します。</p>",
                ""
            ]
        },
        "example": [
            {
                "code": [
                    ".my-component {",
                    "  margin: rem(10px) rem(5px);",
                    "}"
                ]
            }
        ]
    },
    "px": {
        "description": [
            "<p>相対値 (em/rem) をピクセルに変換します。</p>",
            ""
        ],
        "parameters": {
            "num": {
                "description": [
                    "<p>変換される相対値。</p>",
                    ""
                ]
            },
            "context": {
                "description": [
                    "<p>対して変換するベース コンテキスト。</p>",
                    ""
                ]
            }
        },
        "returns": {
            "description": [
                "<p>ピクセルに変換された相対値を返します。</p>",
                ""
            ]
        },
        "example": [
            {
                "code": [
                    ".my-component {",
                    "  margin: px(3.23rem);",
                    "}"
                ]
            }
        ]
    },
    "type-style": {
        "description": [
            "<p>インターフェイスのような タイプ スタイルのマップ。</p>",
            ""
        ],
        "parameters": {
            "font-family": {
                "description": [
                    "<p>タイプ スタイルのフォント ファミリ。</p>",
                    ""
                ]
            },
            "font-size": {
                "description": [
                    "<p>タイプ スタイルのフォントのサイズ。</p>",
                    ""
                ]
            },
            "font-weight": {
                "description": [
                    "<p>タイプ スタイルのフォントのウェイト。</p>",
                    ""
                ]
            },
            "font-style": {
                "description": [
                    "<p>タイプ スケールのフォント スタイル。</p>",
                    ""
                ]
            },
            "line-height": {
                "description": [
                    "<p>タイプ スタイルの線の高さ。</p>",
                    ""
                ]
            },
            "letter-spacing": {
                "description": [
                    "<p>タイプ スタイルの文字の間隔。</p>",
                    ""
                ]
            },
            "text-transform": {
                "description": [
                    "<p>タイプ スタイルの text-transform プロパティ。</p>",
                    ""
                ]
            },
            "margin-top": {
                "description": [
                    "<p>タイプ スタイルの margin-top プロパティ。</p>",
                    ""
                ]
            },
            "margin-bottom": {
                "description": [
                    "<p>タイプ スタイルの margin-bottom プロパティ。</p>",
                    ""
                ]
            }
        },
        "returns": {
            "description": [
                "<p>タイプ スタイルのすべての定義済みのプロパティのマップ。</p>",
                ""
            ]
        },
        "example": [
            {
                "code": [
                    "$main_navigation: type-style(",
                    "   $font-size: rem(14px),",
                    "   $font-weight: 600,",
                    "   $letter-spacing: rem(.1px),",
                    "   $line-height: rem(14px),",
                    "   $text-transform: none,",
                    ");",
                    "",
                    "// type-style() mixin を使用して、type-style() 関数から生成された新しいタイプ スタイルを使用します。",
                    ".main-nav {",
                    "  @include type-style($main_navigation);",
                    "}"
                ]
            }
        ]
    },
    "type-scale": {
        "description": [
            "<p>ITypeScale リストに準拠するタイプ スタイルを含むタイプ スケール マップを作成します。</p>",
            ""
        ],
        "parameters": {
            "h1": {
                "description": [
                    "<p>type-style 関数に生成されたタイプ スタイル プロパティを含むマップ。</p>",
                    ""
                ]
            },
            "h2": {
                "description": [
                    "<p>type-style 関数に生成されたタイプ スタイル プロパティを含むマップ。</p>",
                    ""
                ]
            },
            "h3": {
                "description": [
                    "<p>type-style 関数に生成されたタイプ スタイル プロパティを含むマップ。</p>",
                    ""
                ]
            },
            "h4": {
                "description": [
                    "<p>type-style 関数に生成されたタイプ スタイル プロパティを含むマップ。</p>",
                    ""
                ]
            },
            "h5": {
                "description": [
                    "<p>type-style 関数に生成されたタイプ スタイル プロパティを含むマップ。</p>",
                    ""
                ]
            },
            "h6": {
                "description": [
                    "<p>type-style 関数に生成されたタイプ スタイル プロパティを含むマップ。</p>",
                    ""
                ]
            },
            "subtitle-1": {
                "description": [
                    "<p>type-style 関数に生成されたタイプ スタイル プロパティを含むマップ。</p>",
                    ""
                ]
            },
            "subtitle-2": {
                "description": [
                    "<p>type-style 関数に生成されたタイプ スタイル プロパティを含むマップ。</p>",
                    ""
                ]
            },
            "body-1": {
                "description": [
                    "<p>type-style 関数に生成されたタイプ スタイル プロパティを含むマップ。</p>",
                    ""
                ]
            },
            "body-2": {
                "description": [
                    "<p>type-style 関数に生成されたタイプ スタイル プロパティを含むマップ。</p>",
                    ""
                ]
            },
            "button": {
                "description": [
                    "<p>type-style 関数に生成されたタイプ スタイル プロパティを含むマップ。</p>",
                    ""
                ]
            },
            "caption": {
                "description": [
                    "<p>type-style 関数に生成されたタイプ スタイル プロパティを含むマップ。</p>",
                    ""
                ]
            },
            "overline": {
                "description": [
                    "<p>type-style 関数に生成されたタイプ スタイル プロパティを含むマップ。</p>",
                    ""
                ]
            },
            "_theme": {
                "description": [
                    "<p>このタイプ スケールに関連するテーマ。内部使用のみ。</p>",
                    ""
                ]
            }
        },
        "returns": {
            "description": [
                "<p>すべての定義済み タイプ スケールのマップ。</p>",
                ""
            ]
        },
        "example": [
            {
                "code": [
                    "// 最初に使用するタイプ スタイルを定義します",
                    "$my-body-1: type-style(",
                    "   $font-size: rem(14px),",
                    ");",
                    "",
                    "// タイプ スタイル マップを使用して、既存のマップの 1 つをオーバーライドします。",
                    "$type-scale: type-scale(",
                    "  ...",
                    "  $body-1: $my-body-1,",
                    "  ...",
                    ");"
                ]
            }
        ]
    },
    "type-scale-category": {
        "description": [
            "<p>タイプ スケール カテゴリ config を取得します。</p>",
            ""
        ],
        "parameters": {
            "scale": {
                "description": [
                    "<p>type-scale が生成されるようにタイプ スケールのマップ参照。</p>",
                    ""
                ]
            },
            "category": {
                "description": [
                    "<p>設定する必要のあるスケール カテゴリ。&#39;h1&#39;; など。</p>",
                    ""
                ]
            }
        },
        "returns": {
            "description": [
                "<p>タイプ スケールでの選択されたカテゴリの config マップ。</p>",
                ""
            ]
        },
        "example": [
            {
                "description": [
                    "<p><code>h1</code> scale のための scale カテゴリ config の型を取得します。</p>",
                    ""
                ],
                "code": [
                    "$h1-type-scale: type-scale-category($type-scale, 'h1');"
                ]
            }
        ]
    }
}
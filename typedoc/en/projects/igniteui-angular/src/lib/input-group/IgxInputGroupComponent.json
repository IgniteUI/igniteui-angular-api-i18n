{
    "IgxInputGroupComponent": {
        "properties": {
            "defaultClass": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Property that enables/disables the auto-generated class of the `IgxInputGroupComponent`.",
                        "By default applied the class is applied.",
                        "```typescript",
                        " @ViewChild(\"MyInputGroup\")",
                        " public inputGroup: IgxInputGroupComponent;",
                        " ngAfterViewInit(){",
                        " this.inputGroup.defaultClass = false;",
                        "```",
                        "}"
                    ]
                }
            },
            "suppressInputAutofocus": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Automatic focus causes software keyboard to show on mobile devices.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-input-group [suppressInputAutofocus]=\"true\"></igx-input-group>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Prevents automatically focusing the input when clicking on other elements in the input group (e.g. prefix or suffix)."
                }
            }
        },
        "methods": {
            "getComponentDensityClass": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Given a style class of a component/element returns the modified version of it based",
                        "on the current display density."
                    ]
                }
            }
        },
        "accessors": {
            "resourceStrings": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "Returns the resource strings."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Sets the resource strings.",
                            "By default it uses EN resources."
                        ]
                    }
                }
            },
            "type": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Returns the type of the `IgxInputGroupComponent`. How the input is styled.",
                            "The default is `line`.",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let inputType = this.inputGroup.type;",
                            "}",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "An @Input property that sets how the input will be styled.",
                            "Allowed values of type IgxInputGroupType.",
                            "```html",
                            "<igx-input-group [type]=\"'search'\">",
                            "```"
                        ]
                    }
                }
            },
            "theme": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Returns the theme of the input.",
                            "The returned value is of type IgxInputGroupType.",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit() {",
                            " let inputTheme = this.inputGroup.theme;",
                            "}"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Sets the theme of the input.",
                            "Allowed values of type IgxInputGroupTheme.",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit() {",
                            " let inputTheme = 'fluent';",
                            "}"
                        ]
                    }
                }
            },
            "hasHints": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Returns whether the `IgxInputGroupComponent` has hints.",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let inputHints = this.inputGroup.hasHints;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "hasBorder": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Returns whether the `IgxInputGroupComponent` has border.",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let inputBorder = this.inputGroup.hasBorder;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "isTypeLine": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Returns whether the `IgxInputGroupComponent` type is line.",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup1\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let isTypeLine = this.inputGroup.isTypeLine;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "isTypeBox": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Returns whether the `IgxInputGroupComponent` type is box.",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup1\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let isTypeBox = this.inputGroup.isTypeBox;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "isTypeBorder": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Returns whether the `IgxInputGroupComponent` type is border.",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup1\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let isTypeBorder = this.inputGroup.isTypeBorder;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "isTypeFluent": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Returns true if the `IgxInputGroupComponent` theme is Fluent.",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup1\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let isTypeFluent = this.inputGroup.isTypeFluent;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "isTypeBootstrap": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Returns true if the `IgxInputGroupComponent` theme is Bootstrap.",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup1\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let isTypeBootstrap = this.inputGroup.isTypeBootstrap;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "isTypeIndigo": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Returns true if the `IgxInputGroupComponent` theme is Indigo.",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup1\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let isTypeIndigo = this.inputGroup.isTypeIndigo;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "isTypeSearch": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Returns whether the `IgxInputGroupComponent` type is search.",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup1\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let isTypeSearch = this.inputGroup.isTypeSearch;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "displayDensity": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Returns the theme of the component.",
                            "The default theme is `comfortable`.",
                            "Available options are `comfortable`, `cosy`, `compact`.",
                            "```typescript",
                            "let componentTheme = this.component.displayDensity;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": "Sets the theme of the component."
                    }
                }
            }
        }
    }
}
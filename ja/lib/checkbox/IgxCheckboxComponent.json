{
    "IgxCheckboxComponent": {
        "comment": {
            "text": [
                "Ignite UI Checkbox は、バイナリの選択を可能にする選択コントロールです。",
                "ネイティブ ブラウザーのチェックボックスと同様に動作します。",
                "",
                "例:",
                "```html",
                "<igx-checkbox checked=\"true\">",
                "  simple checkbox",
                "</igx-checkbox>",
                "```",
                ""
            ],
            "shortText": [
                "**Ignite UI for Angular Checkbox** -",
                "[ヘルプ](https://jp.infragistics.com/products/ignite-ui-angular/angular/components/checkbox.html)"
            ]
        },
        "properties": {
            "nativeCheckbox": {
                "comment": {
                    "shortText": [
                        "ネイティブ チェックボックス要素への参照を返します。",
                        "```typescript",
                        "let checkboxElement =  this.checkbox.checkboxElement;",
                        "```"
                    ]
                }
            },
            "nativeLabel": {
                "comment": {
                    "shortText": [
                        "ネイティブ ラベル要素への参照を返します。",
                        "```typescript",
                        "let labelElement =  this.checkbox.nativeLabel;",
                        "```"
                    ]
                }
            },
            "placeholderLabel": {
                "comment": {
                    "shortText": [
                        "ラベル プレースホルダー要素への参照を返します。",
                        "```typescript",
                        "let labelPlaceholder =  this.checkbox.placeholderLabel;",
                        "```"
                    ]
                }
            },
            "id": {
                "comment": {
                    "shortText": [
                        "チェックボックス コンポーネントの `id` を取得または設定します。",
                        "設定されない場合、最初のチェックボックス コンポーネントの `id` は `\"igx-checkbox-0\"` になります。",
                        "```html",
                        "<igx-checkbox id=\"my-first-checkbox\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let checkboxId =  this.checkbox.id;",
                        "```"
                    ]
                }
            },
            "labelId": {
                "comment": {
                    "shortText": [
                        "`label` 要素の id を取得または設定します。",
                        "設定されない場合、最初のチェックボックス コンポーネントの `label` の id は `\"igx-checkbox-0-label\"` になります。",
                        "```html",
                        "<igx-checkbox labelId = \"Label1\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let labelId =  this.checkbox.labelId;",
                        "```"
                    ]
                }
            },
            "value": {
                "comment": {
                    "shortText": [
                        "`value` 属性を取得または設定します。",
                        "```html",
                        "<igx-checkbox [value] = \"'CheckboxValue'\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let value =  this.checkbox.value;",
                        "```"
                    ]
                }
            },
            "name": {
                "comment": {
                    "shortText": [
                        "`name` 属性を取得または設定します。",
                        "```html",
                        "<igx-checkbox name = \"Checkbox1\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let name =  this.checkbox.name;",
                        "```"
                    ]
                }
            },
            "tabindex": {
                "comment": {
                    "shortText": [
                        "`tabindex` 属性の値を取得または設定します。",
                        "```html",
                        "<igx-checkbox [tabindex] = \"1\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let tabIndex =  this.checkbox.tabindex;",
                        "```"
                    ]
                }
            },
            "labelPosition": {
                "comment": {
                    "shortText": [
                        " Sets/gets the position of the `label`.",
                        " If not set, the `labelPosition` will have value `\"after\"`.",
                        "```html",
                        "<igx-checkbox labelPosition = \"before\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let labelPosition =  this.checkbox.labelPosition;",
                        "```"
                    ]
                }
            },
            "disableRipple": {
                "comment": {
                    "shortText": [
                        "リップル エフェクトを有効または無効にします。",
                        "設定されない場合、`disableRipple` の値は `false` です。",
                        "```html",
                        "<igx-checkbox [disableRipple] = \"true\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let isRippleDisabled = this.checkbox.desableRipple;",
                        "```"
                    ]
                }
            },
            "required": {
                "comment": {
                    "shortText": [
                        "チェックボックスが必須かどうかを取得または設定します。",
                        "設定されない場合、`required` の値は `false` です。",
                        "```html",
                        "<igx-checkbox [required] = \"true\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let isRequired =  this.checkbox.required;",
                        "```"
                    ]
                }
            },
            "ariaLabelledBy": {
                "comment": {
                    "shortText": [
                        "`aria-labelledby` 属性を取得または設定します。",
                        "設定されない場合、`aria-labelledby` は `labelId` 属性の値と等しくなります。",
                        "```html",
                        "<igx-checkbox aria-labelledby = \"Checkbox1\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let ariaLabelledBy =  this.checkbox.ariaLabelledBy;",
                        "```"
                    ]
                }
            },
            "ariaLabel": {
                "comment": {
                    "shortText": [
                        "`aria-label` 属性の値を取得または設定します。",
                        "```html",
                        "<igx-checkbox aria-label = \"Checkbox1\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let ariaLabel = this.checkbox.aruaLabel;",
                        "```"
                    ]
                }
            },
            "change": {
                "comment": {
                    "shortText": [
                        "チェックボックス状態が変更された後に発生するイベント。",
                        "イベント引数として `IgxCheckboxComponent` および `checked` プロパティへの参照を提供します。"
                    ]
                }
            },
            "cssClass": {
                "comment": {
                    "shortText": [
                        "チェックボックス コンポーネントのクラスを返します。",
                        "```typescript",
                        "let class =  this.checkbox.cssClass;",
                        "```"
                    ]
                }
            },
            "focused": {
                "comment": {
                    "shortText": [
                        "チェックボックス コンポーネントがフォーカスされるかどうかを取得または設定します。",
                        "デフォルトは `false` です。",
                        "```typescript",
                        "this.checkbox.focused =  true;",
                        "```",
                        "```typescript",
                        "let isFocused =  this.checkbox.focused;",
                        "```"
                    ]
                }
            },
            "indeterminate": {
                "comment": {
                    "shortText": [
                        "チェックボックスの不確定ビジュアル ステートを取得または設定します。",
                        "Default value is `false`;",
                        "```html",
                        "<igx-checkbox [indeterminate] = \"true\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let isIndeterminate = this.checkbox.indeterminate;",
                        "```"
                    ]
                }
            },
            "checked": {
                "comment": {
                    "shortText": [
                        "チェックボックスがチェックされたかどうかを取得または設定します。",
                        "デフォルトは `false` です。",
                        "```html",
                        "<igx-checkbox [checked] = \"true\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let isChecked =  this.checkbox.checked;",
                        "```"
                    ]
                }
            },
            "disabled": {
                "comment": {
                    "shortText": [
                        "チェックボックスが無効されたかどうかを取得または設定します。",
                        "デフォルトは `false` です。",
                        "```html",
                        "<igx-checkbox [disabled] = \"true\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let isDesabled = this.checkbox.disabled;",
                        "```"
                    ]
                }
            }
        },
        "methods": {
            "toggle": {
                "comment": {
                    "shortText": [
                        "`disabled` が `false` の場合、`checked` 状態を切り替えます。",
                        "```typescript",
                        "this.checkbox.toggle();",
                        "```"
                    ]
                }
            }
        },
        "accessors": {},
        "functions": {}
    }
}

{
    "IgxComboComponent": {
        "comment": {
            "blockTags": [
                {
                    "tag": "@igxModule",
                    "content": [
                        {
                            "kind": "text",
                            "text": "IgxComboModule"
                        }
                    ]
                },
                {
                    "tag": "@igxTheme",
                    "content": [
                        {
                            "kind": "text",
                            "text": "igx-combo-theme"
                        }
                    ]
                },
                {
                    "tag": "@igxKeywords",
                    "content": [
                        {
                            "kind": "text",
                            "text": "combobox, combo selection"
                        }
                    ]
                },
                {
                    "tag": "@igxGroup",
                    "content": [
                        {
                            "kind": "text",
                            "text": "Grids & Lists"
                        }
                    ]
                },
                {
                    "tag": "@remarks",
                    "content": [
                        {
                            "kind": "text",
                            "text": "It provides the ability to filter items as well as perform selection with the provided data.\nAdditionally, it exposes keyboard navigation and custom styling capabilities."
                        }
                    ]
                },
                {
                    "tag": "@example",
                    "content": [
                        {
                            "kind": "code",
                            "text": "```html\n<igx-combo [itemsMaxHeight]=\"250\" [data]=\"locationData\"\n [displayKey]=\"'field'\" [valueKey]=\"'field'\"\n placeholder=\"Location(s)\" searchPlaceholder=\"Search...\">\n</igx-combo>\n```"
                        }
                    ]
                }
            ],
            "modifierTags": {},
            "summary": [
                {
                    "kind": "text",
                    "text": "Represents a drop-down list that provides editable functionalities, allowing users to choose an option from a predefined list."
                }
            ]
        },
        "properties": {
            "autoFocusSearch": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@Input",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "property that controls whether the combo's search box\nshould be focused after the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`opened`"
                                },
                                {
                                    "kind": "text",
                                    "text": " event is called\nWhen "
                                },
                                {
                                    "kind": "code",
                                    "text": "`false`"
                                },
                                {
                                    "kind": "text",
                                    "text": ", the combo's list item container will be focused instead"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "An"
                        }
                    ]
                }
            },
            "searchPlaceholder": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Defines the placeholder value for the combo dropdown search field\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// get\nlet myComboSearchPlaceholder = this.combo.searchPlaceholder;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--set-->\n<igx-combo [searchPlaceholder]='newPlaceHolder'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "selectionChanging": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when item selection is changing, before the selection completes\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-combo (selectionChanging)='handleSelection()'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "showSearchCaseIcon": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Defines whether the caseSensitive icon should be shown in the search input\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// get\nlet myComboShowSearchCaseIcon = this.combo.showSearchCaseIcon;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--set-->\n<igx-combo [showSearchCaseIcon]='true'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "overlaySettings": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Set custom overlay settings that control how the combo's list of items is displayed.\nSet:\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-combo [overlaySettings] = \"customOverlaySettings\"></igx-combo>\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n const customSettings = { positionStrategy: { settings: { target: myTarget } } };\n combo.overlaySettings = customSettings;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\nGet any custom overlay settings used by the combo:\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n const comboOverlaySettings: OverlaySettings = myCombo.overlaySettings;\n```"
                        }
                    ]
                }
            },
            "id": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/gets combo id.\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// get\nlet id = this.combo.id;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--set-->\n<igx-combo [id]='combo1'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "width": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Sets the style width of the element\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// get\nlet myComboWidth = this.combo.width;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--set-->\n<igx-combo [width]='250px'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "allowCustomValues": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Controls whether custom values can be added to the collection\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// get\nlet comboAllowsCustomValues = this.combo.allowCustomValues;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--set-->\n<igx-combo [allowCustomValues]='true'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "itemsWidth": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Configures the drop down list width\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// get\nlet myComboItemsWidth = this.combo.itemsWidth;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--set-->\n<igx-combo [itemsWidth] = '\"180px\"'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "placeholder": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Defines the placeholder value for the combo value field\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// get\nlet myComboPlaceholder = this.combo.placeholder;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--set-->\n<igx-combo [placeholder]='newPlaceHolder'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "valueKey": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Determines which column in the data source is used to determine the value.\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// get\nlet myComboValueKey = this.combo.valueKey;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--set-->\n<igx-combo [valueKey]='myKey'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "ariaLabelledBy": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@Input",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "property that set aria-labelledby attribute\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-combo [ariaLabelledBy]=\"'label1'\">\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "An"
                        }
                    ]
                }
            },
            "disabled": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@Input",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "property that enabled/disables combo. The default is "
                                },
                                {
                                    "kind": "code",
                                    "text": "`false`"
                                },
                                {
                                    "kind": "text",
                                    "text": ".\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-combo [disabled]=\"'true'\">\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "An"
                        }
                    ]
                }
            },
            "opening": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted before the dropdown is opened\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-combo opening='handleOpening($event)'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "opened": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after the dropdown is opened\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-combo (opened)='handleOpened($event)'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "closing": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted before the dropdown is closed\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-combo (closing)='handleClosing($event)'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "closed": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after the dropdown is closed\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-combo (closed)='handleClosed($event)'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "addition": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when an item is being added to the data collection\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-combo (addition)='handleAdditionEvent($event)'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "searchInputUpdate": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when the value of the search input changes (e.g. typing, pasting, clear, etc.)\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-combo (searchInputUpdate)='handleSearchInputEvent($event)'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "dataPreLoad": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when new chunk of data is loaded from the virtualization\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-combo (dataPreLoad)='handleDataPreloadEvent($event)'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "itemTemplate": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The custom template, if any, that should be used when rendering ITEMS in the combo list\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// Set in typescript\nconst myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\nmyComponent.combo.itemTemplate = myCustomTemplate;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!-- Set in markup -->\n <igx-combo #combo>\n     ...\n     <ng-template igxComboItem let-item let-key=\"valueKey\">\n         <div class=\"custom-item\">\n             <div class=\"custom-item__name\">{{ item[key] }}</div>\n             <div class=\"custom-item__cost\">{{ item.cost }}</div>\n         </div>\n     </ng-template>\n </igx-combo>\n```"
                        }
                    ]
                }
            },
            "headerTemplate": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The custom template, if any, that should be used when rendering the HEADER for the combo items list\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// Set in typescript\nconst myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\nmyComponent.combo.headerTemplate = myCustomTemplate;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!-- Set in markup -->\n <igx-combo #combo>\n     ...\n     <ng-template igxComboHeader>\n         <div class=\"combo__header\">\n             This is a custom header\n         </div>\n     </ng-template>\n </igx-combo>\n```"
                        }
                    ]
                }
            },
            "footerTemplate": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The custom template, if any, that should be used when rendering the FOOTER for the combo items list\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// Set in typescript\nconst myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\nmyComponent.combo.footerTemplate = myCustomTemplate;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!-- Set in markup -->\n <igx-combo #combo>\n     ...\n     <ng-template igxComboFooter>\n         <div class=\"combo__footer\">\n             This is a custom footer\n         </div>\n     </ng-template>\n </igx-combo>\n```"
                        }
                    ]
                }
            },
            "headerItemTemplate": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The custom template, if any, that should be used when rendering HEADER ITEMS for groups in the combo list\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// Set in typescript\nconst myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\nmyComponent.combo.headerItemTemplate = myCustomTemplate;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!-- Set in markup -->\n <igx-combo #combo>\n     ...\n     <ng-template igxComboHeaderItem let-item let-key=\"groupKey\">\n         <div class=\"custom-item--group\">Group header for {{ item[key] }}</div>\n     </ng-template>\n </igx-combo>\n```"
                        }
                    ]
                }
            },
            "addItemTemplate": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The custom template, if any, that should be used when rendering the ADD BUTTON in the combo drop down\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// Set in typescript\nconst myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\nmyComponent.combo.addItemTemplate = myCustomTemplate;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!-- Set in markup -->\n <igx-combo #combo>\n     ...\n     <ng-template igxComboAddItem>\n         <button class=\"combo__add-button\">\n             Click to add item\n         </button>\n     </ng-template>\n </igx-combo>\n```"
                        }
                    ]
                }
            },
            "emptyTemplate": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The custom template, if any, that should be used when rendering the ADD BUTTON in the combo drop down\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// Set in typescript\nconst myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\nmyComponent.combo.emptyTemplate = myCustomTemplate;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!-- Set in markup -->\n <igx-combo #combo>\n     ...\n     <ng-template igxComboEmpty>\n         <div class=\"combo--empty\">\n             There are no items to display\n         </div>\n     </ng-template>\n </igx-combo>\n```"
                        }
                    ]
                }
            },
            "toggleIconTemplate": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The custom template, if any, that should be used when rendering the combo TOGGLE(open/close) button\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// Set in typescript\nconst myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\nmyComponent.combo.toggleIconTemplate = myCustomTemplate;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!-- Set in markup -->\n <igx-combo #combo>\n     ...\n     <ng-template igxComboToggleIcon let-collapsed>\n         <igx-icon>{{ collapsed ? 'remove_circle' : 'remove_circle_outline'}}</igx-icon>\n     </ng-template>\n </igx-combo>\n```"
                        }
                    ]
                }
            },
            "clearIconTemplate": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The custom template, if any, that should be used when rendering the combo CLEAR button\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// Set in typescript\nconst myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\nmyComponent.combo.clearIconTemplate = myCustomTemplate;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!-- Set in markup -->\n <igx-combo #combo>\n     ...\n     <ng-template igxComboClearIcon>\n         <igx-icon>clear</igx-icon>\n     </ng-template>\n </igx-combo>\n```"
                        }
                    ]
                }
            }
        },
        "methods": {
            "select": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Select defined items"
                        }
                    ]
                }
            },
            "deselect": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Deselect defined items"
                        }
                    ]
                }
            },
            "selectAllItems": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Select all (filtered) items"
                        }
                    ]
                }
            },
            "deselectAllItems": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Deselect all (filtered) items"
                        }
                    ]
                }
            },
            "setSelectedItem": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Selects/Deselects a single item"
                        }
                    ]
                }
            },
            "__type": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n <igx-comb #combo [data]=\"localData\" [filterFunction]=\"filterFunction\"></igx-combo>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/Sets the custom filtering function of the combo."
                        }
                    ]
                }
            },
            "toggle": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "A method that opens/closes the combo.\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<button (click)=\"combo.toggle()\">Toggle Combo</button>\n<igx-combo #combo></igx-combo>\n```"
                        }
                    ]
                }
            },
            "open": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "A method that opens the combo.\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<button (click)=\"combo.open()\">Open Combo</button>\n<igx-combo #combo></igx-combo>\n```"
                        }
                    ]
                }
            },
            "close": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "A method that closes the combo.\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<button (click)=\"combo.close()\">Close Combo</button>\n<igx-combo #combo></igx-combo>\n```"
                        }
                    ]
                }
            },
            "triggerCheck": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Triggers change detection on the combo view"
                        }
                    ]
                }
            },
            "getComponentSizeStyles": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Sets the "
                        },
                        {
                            "kind": "code",
                            "text": "`--component-size`"
                        },
                        {
                            "kind": "text",
                            "text": " CSS variable based on the value of Display Density"
                        }
                    ]
                }
            }
        },
        "accessors": {
            "filterable": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@deprecated",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "in version 14.0.0. Use the IComboFilteringOptions.filterable\n\nAn"
                                    }
                                ]
                            },
                            {
                                "tag": "@Input",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "property that enabled/disables filtering in the list. The default is "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`true`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-combo [filterable]=\"false\">\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": []
                    }
                }
            },
            "itemsMaxHeight": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Configures the drop down list height\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// get\nlet myComboItemsMaxHeight = this.combo.itemsMaxHeight;\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<!--set-->\n<igx-combo [itemsMaxHeight]='320'></igx-combo>\n```"
                            }
                        ]
                    }
                }
            },
            "itemHeight": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Configures the drop down list item height\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// get\nlet myComboItemHeight = this.combo.itemHeight;\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<!--set-->\n<igx-combo [itemHeight]='32'></igx-combo>\n```"
                            }
                        ]
                    }
                }
            },
            "data": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Combo data source.\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<!--set-->\n<igx-combo [data]='items'></igx-combo>\n```"
                            }
                        ]
                    }
                }
            },
            "displayKey": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Determines which column in the data source is used to determine the display value.\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// get\nlet myComboDisplayKey = this.combo.displayKey;\n\n// set\nthis.combo.displayKey = 'val';\n\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<!--set-->\n<igx-combo [displayKey]='myDisplayKey'></igx-combo>\n```"
                            }
                        ]
                    }
                }
            },
            "groupKey": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "The item property by which items should be grouped inside the items list. Not usable if data is not of type Object[].\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// get\nlet currentGroupKey = this.combo.groupKey;\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "The item property by which items should be grouped inside the items list. Not usable if data is not of type Object[].\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<!--set-->\n<igx-combo [groupKey]='newGroupKey'></igx-combo>\n```"
                            }
                        ]
                    }
                }
            },
            "groupSortingDirection": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@Input",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "property that sets groups sorting order."
                                    }
                                ]
                            },
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-combo [groupSortingDirection]=\"groupSortingDirection\"></igx-combo>\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```typescript\npublic groupSortingDirection = SortingDirection.Asc;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "An"
                            }
                        ]
                    }
                }
            },
            "type": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@Input",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "property that sets how the combo will be styled.\nThe allowed values are "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`line`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`box`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`border`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " and "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`search`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ". The default is "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`box`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-combo [type]=\"'line'\">\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "An"
                            }
                        ]
                    }
                }
            },
            "resourceStrings": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "By default it uses EN resources."
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the resource strings."
                            }
                        ]
                    }
                }
            },
            "valid": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets if control is valid, when used in a form\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// get\nlet valid = this.combo.valid;\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets if control is valid, when used in a form\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// set\nthis.combo.valid = IgxComboState.INVALID;\n```"
                            }
                        ]
                    }
                }
            },
            "value": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "The value of the selected item in the combo\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// get\nlet comboValue = this.combo.value;\n```"
                            }
                        ]
                    }
                }
            },
            "displayValue": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "The text displayed in the combo input\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// get\nlet comboDisplayValue = this.combo.displayValue;\n```"
                            }
                        ]
                    }
                }
            },
            "virtualizationState": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Defines the current state of the virtualized data. It contains "
                            },
                            {
                                "kind": "code",
                                "text": "`startIndex`"
                            },
                            {
                                "kind": "text",
                                "text": " and "
                            },
                            {
                                "kind": "code",
                                "text": "`chunkSize`"
                            },
                            {
                                "kind": "text",
                                "text": "\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// get\nlet state = this.combo.virtualizationState;\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the current state of the virtualized data.\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// set\nthis.combo.virtualizationState(state);\n```"
                            }
                        ]
                    }
                }
            },
            "collapsed": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets drop down state.\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nlet state = this.combo.collapsed;\n```"
                            }
                        ]
                    }
                }
            },
            "totalItemCount": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets total count of the virtual data items, when using remote service.\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// get\nlet count = this.combo.totalItemCount;\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets total count of the virtual data items, when using remote service.\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// set\nthis.combo.totalItemCount(remoteService.count);\n```"
                            }
                        ]
                    }
                }
            },
            "filteringOptions": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Configures the way combo items will be filtered.\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// get\nlet myFilteringOptions = this.combo.filteringOptions;\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<!--set-->\n<igx-combo [filteringOptions]='myFilteringOptions'></igx-combo>\n```"
                            }
                        ]
                    }
                }
            },
            "selection": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@returns",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "Array of selected items\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nlet mySelection = this.combo.selection;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Get current selection state"
                            }
                        ]
                    }
                }
            },
            "displayDensity": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@deprecated",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "since version 16.1.x.\nPlease use the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`--ig-size`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " CSS custom property."
                                    }
                                ]
                            },
                            {
                                "tag": "@see",
                                "content": [
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@link",
                                        "text": "[Update Guide](https://www.infragistics.com/products/ignite-ui-angular/angular/components/general/update-guide#from-160x-to-161x)"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nReturns the theme of the component.\nThe default theme is "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`comfortable`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\nAvailable options are "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`comfortable`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`cosy`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`compact`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nlet componentTheme = this.component.displayDensity;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": []
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the theme of the component."
                            }
                        ]
                    }
                }
            }
        }
    }
}
{
    "IGridToolbarExportEventArgs": {
        "comment": {
            "blockTags": [],
            "modifierTags": {},
            "summary": [
                {
                    "kind": "text",
                    "text": "Represents the arguments for the grid toolbar export event.\nIt provides information about the grid instance, exporter service, export options, \nand allows the event to be canceled."
                }
            ]
        },
        "properties": {
            "grid": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "code",
                            "text": "`grid`"
                        },
                        {
                            "kind": "text",
                            "text": " represents a reference to the instance of the grid te event originated from"
                        }
                    ]
                }
            },
            "exporter": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The "
                        },
                        {
                            "kind": "code",
                            "text": "`exporter`"
                        },
                        {
                            "kind": "text",
                            "text": " is a base service.\nThe type (an abstract class "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxBaseExporter`"
                        },
                        {
                            "kind": "text",
                            "text": ") has it's own properties and methods\nIt is used to define the format and options of the export, the exported element \nand methods for preparing the data from the elements for exporting"
                        }
                    ]
                }
            },
            "options": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Represents the different settings, that can be given to an export\nThe type (an abstract class "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxExporterOptionsBase`"
                        },
                        {
                            "kind": "text",
                            "text": ") has properties for column settings \n(whether they should be ignored) as well as method for generating a file name"
                        }
                    ]
                }
            },
            "cancel": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "code",
                            "text": "`cancel`"
                        },
                        {
                            "kind": "text",
                            "text": " returns whether the event has been interepted and stopped\nIf the value becomes \"true\", it returns/exits from the method, instanciating the interface"
                        }
                    ]
                }
            },
            "owner": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Provides reference to the owner component."
                        }
                    ]
                }
            }
        },
        "methods": {}
    }
}
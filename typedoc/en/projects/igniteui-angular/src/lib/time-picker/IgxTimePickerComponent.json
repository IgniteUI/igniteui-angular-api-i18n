{
    "IgxTimePickerComponent": {
        "properties": {
            "id": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "An @Input property that sets the value of the `id` attribute.",
                        "```html",
                        "<igx-time-picker [id]=\"'igx-time-picker-5'\" [displayFormat]=\"h:mm tt\" ></igx-time-picker>",
                        "```"
                    ]
                }
            },
            "displayFormat": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Uses Angular's `DatePipe`.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-time-picker displayFormat=\"mm:ss\"></igx-time-picker>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "The format used when editable input is not focused. Defaults to the `inputFormat` if not set."
                }
            },
            "inputFormat": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Default is `hh:mm tt`",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-time-picker inputFormat=\"HH:mm\"></igx-time-picker>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "The expected user input format and placeholder."
                }
            },
            "mode": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-time-picker mode=\"dialog\"></igx-time-picker>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Gets/Sets the interaction mode - dialog or drop down."
                }
            },
            "spinLoop": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "An @Input property that determines the spin behavior. By default `spinLoop` is set to true.",
                        "The seconds, minutes and hour spinning will wrap around by default.",
                        "```html",
                        "<igx-time-picker [spinLoop]=\"false\"></igx-time-picker>",
                        "```"
                    ]
                }
            },
            "formatter": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-time-picker [value]=\"date\" [formatter]=\"formatter\"></igx-time-picker>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Gets/Sets a custom formatter function on the selected or passed date."
                }
            },
            "headerOrientation": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "Available in dialog mode only. Default value is `horizontal`.",
                                    "```html",
                                    "<igx-time-picker [headerOrientation]=\"'vertical'\"></igx-time-picker>",
                                    "```"
                                ],
                                "tagName": "remarks"
                            }
                        }
                    },
                    "shortText": "Sets the orientation of the picker's header."
                }
            },
            "selected": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-time-picker (selected)=\"onSelection($event)\"></igx-time-picker>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted after a selection has been done."
                }
            },
            "valueChange": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Used for `two-way` bindings.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-time-picker [(value)]=\"date\"></igx-time-picker>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when the picker's value changes."
                }
            },
            "validationFailed": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-time-picker (validationFailed)=\"onValidationFailed($event)\"></igx-time-picker>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when the user types/spins invalid time in the time-picker editor."
                }
            },
            "placeholder": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-date-picker [placeholder]=\"'Choose your date'\"></igx-date-picker>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Sets the `placeholder` of the picker's input."
                }
            },
            "overlaySettings": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-date-picker [overlaySettings]=\"customOverlaySettings\"></igx-date-picker>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Overlay settings used to display the pop-up element."
                }
            },
            "disabled": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-date-picker [disabled]=\"'true'\"></igx-date-picker>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Enables or disables the picker."
                }
            },
            "locale": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "Uses Angular's `LOCALE_ID` by default. Affects both input mask and display format if those are not set.",
                                    "If a `locale` is set, it must be registered via `registerLocaleData`.",
                                    "Please refer to https://angular.io/guide/i18n#i18n-pipes.",
                                    "If it is not registered, `Intl` will be used for formatting."
                                ],
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-date-picker locale=\"jp\"></igx-date-picker>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Locale settings used for value formatting and calendar or time spinner."
                }
            },
            "outlet": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<div igxOverlayOutlet #outlet=\"overlay-outlet\"></div>",
                                    "<!-- ... -->",
                                    "<igx-date-picker [outlet]=\"outlet\"></igx-date-picker>",
                                    "<!-- ... -->",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "The container used for the pop-up element."
                }
            },
            "tabIndex": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-date-picker [tabIndex]=\"1\"></igx-date-picker>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Gets/Sets the default template editor's tabindex."
                }
            },
            "opening": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-date-picker (opening)=\"handleOpening($event)\"></igx-date-picker>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when the calendar has started opening, cancelable."
                }
            },
            "opened": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-date-picker (opened)=\"handleOpened($event)\"></igx-date-picker>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted after the calendar has opened."
                }
            },
            "closing": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-date-picker (closing)=\"handleClosing($event)\"></igx-date-picker>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when the calendar has started closing, cancelable."
                }
            },
            "closed": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-date-picker (closed)=\"handleClosed($event)\"></igx-date-picker>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted after the calendar has closed."
                }
            }
        },
        "methods": {
            "__type": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-time-picker [value]=\"date\" [formatter]=\"formatter\"></igx-time-picker>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Gets/Sets a custom formatter function on the selected or passed date."
                }
            },
            "open": {
                "comment": {
                    "parameters": {
                        "settings": {
                            "comment": {
                                "text": [
                                    "OverlaySettings - the overlay settings to use for positioning the drop down or dialog container according to",
                                    "```html",
                                    "<igx-time-picker #picker [value]=\"date\"></igx-time-picker>",
                                    "<button (click)=\"picker.open()\">Open Dialog</button>",
                                    "```"
                                ]
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "Opens the picker's dialog UI."
                }
            },
            "close": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Closes the dropdown/dialog.",
                        "```html",
                        "<igx-time-picker #timePicker></igx-time-picker>",
                        "```",
                        "```typescript",
                        "@ViewChild('timePicker', { read: IgxTimePickerComponent }) picker: IgxTimePickerComponent;",
                        "picker.close();",
                        "```"
                    ]
                }
            },
            "clear": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.timePicker.clear();",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Clears the time picker value if it is a `string` or resets the time to `00:00:00` if the value is a Date object."
                }
            },
            "select": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.timePicker.select(date);",
                                    "@param date Date object containing the time to be selected."
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Selects time from the igxTimePicker."
                }
            },
            "increment": {
                "comment": {
                    "parameters": {
                        "datePart": {
                            "comment": {
                                "text": "The optional DatePart to increment. Defaults to Hour."
                            }
                        },
                        "delta": {
                            "comment": {
                                "text": "The optional delta to increment by. Overrides `itemsDelta`."
                            }
                        }
                    },
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.timePicker.increment(DatePart.Hours);",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Increment a specified `DatePart`."
                }
            },
            "decrement": {
                "comment": {
                    "parameters": {
                        "datePart": {
                            "comment": {
                                "text": "The optional DatePart to decrement. Defaults to Hour."
                            }
                        },
                        "delta": {
                            "comment": {
                                "text": "The optional delta to decrement by. Overrides `itemsDelta`."
                            }
                        }
                    },
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.timePicker.decrement(DatePart.Seconds);",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Decrement a specified `DatePart`"
                }
            }
        },
        "accessors": {
            "minValue": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "The minimum value the picker will accept."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "If a `string` value is passed in, it must be in ISO format.",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-time-picker [minValue]=\"18:00:00\"></igx-time-picker>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "The minimum value the picker will accept."
                    }
                }
            },
            "collapsed": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "text": [
                            "```typescript",
                            "let isCollapsed = this.timePicker.collapsed;",
                            "```"
                        ],
                        "shortText": "Gets if the dropdown/dialog is collapsed"
                    }
                }
            },
            "maxValue": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "The maximum value the picker will accept."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "If a `string` value is passed in, it must be in ISO format.",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-time-picker [maxValue]=\"20:30:00\"></igx-time-picker>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "The maximum value the picker will accept."
                    }
                }
            },
            "value": {
                "getter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "The current value is of type `Date`",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const newValue: Date = new Date(2000, 2, 2, 10, 15, 15);",
                                        "this.timePicker.value = newValue;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "The currently selected value / time from the drop-down/dialog"
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "An accessor that allows you to set a time using the `value` input.",
                            "```html",
                            "public date: Date = new Date(Date.now());",
                            " //...",
                            "<igx-time-picker [value]=\"date\" format=\"h:mm tt\"></igx-time-picker>",
                            "```"
                        ]
                    }
                }
            },
            "resourceStrings": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "An accessor that returns the resource strings."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "An accessor that sets the resource strings.",
                            "By default it uses EN resources."
                        ]
                    }
                }
            },
            "okButtonLabel": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "An accessor that returns the label of ok button."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "An @Input property that renders OK button with custom text. By default `okButtonLabel` is set to OK.",
                            "```html",
                            "<igx-time-picker okButtonLabel='SET' [value]=\"date\" format=\"h:mm tt\"></igx-time-picker>",
                            "```"
                        ]
                    }
                }
            },
            "cancelButtonLabel": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "An accessor that returns the label of cancel button."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "An @Input property that renders cancel button with custom text.",
                            "By default `cancelButtonLabel` is set to Cancel.",
                            "```html",
                            "<igx-time-picker cancelButtonLabel='Exit' [value]=\"date\" format=\"h:mm tt\"></igx-time-picker>",
                            "```"
                        ]
                    }
                }
            },
            "itemsDelta": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Delta values used to increment or decrement each editor date part on spin actions and",
                            "to display time portions in the dropdown/dialog.",
                            "By default `itemsDelta` is set to `{hour: 1, minute: 1, second: 1}`",
                            "```html",
                            "<igx-time-picker [itemsDelta]=\"{hour:3, minute:5, second:10}\" id=\"time-picker\"></igx-time-picker>",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Delta values used to increment or decrement each editor date part on spin actions and",
                            "to display time portions in the dropdown/dialog.",
                            "By default `itemsDelta` is set to `{hour: 1, minute: 1, second: 1}`",
                            "```html",
                            "<igx-time-picker [itemsDelta]=\"{hour:3, minute:5, second:10}\" id=\"time-picker\"></igx-time-picker>",
                            "```"
                        ]
                    }
                }
            },
            "type": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "Determines how the picker's input will be styled."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "Default is `box`.",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-date-picker [type]=\"'line'\"></igx-date-picker>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Determines how the picker's input will be styled."
                    }
                }
            },
            "displayDensity": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Returns the theme of the component.",
                            "The default theme is `comfortable`.",
                            "Available options are `comfortable`, `cosy`, `compact`.",
                            "```typescript",
                            "let componentTheme = this.component.displayDensity;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": "Sets the theme of the component."
                    }
                }
            }
        }
    }
}
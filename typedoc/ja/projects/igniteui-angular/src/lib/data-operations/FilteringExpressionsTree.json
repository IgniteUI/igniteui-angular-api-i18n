{
    "FilteringExpressionsTree": {
        "properties": {
            "filteringOperands": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@次のメンバー",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "FilteringExpressionsTree"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Sets/gets the filtering operands.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nconst gridExpressionsTree = new FilteringExpressionsTree(FilteringLogic.And);\nconst expression = [\n{\n  condition: IgxStringFilteringOperand.instance().condition('contains'),\n  fieldName: 'Column Field',\n  searchVal: 'Value',\n  ignoreCase: false\n}];\ngridExpressionsTree.filteringOperands.push(expression);\nthis.grid.filteringExpressionsTree = gridExpressionsTree;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nlet filteringOperands = gridExpressionsTree.filteringOperands;\n```"
                        }
                    ]
                }
            },
            "operator": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@次のメンバー",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "FilteringExpressionsTree"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Sets/gets the operator.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\ngridExpressionsTree.operator = FilteringLogic.And;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nlet operator = gridExpressionsTree.operator;\n```"
                        }
                    ]
                }
            },
            "fieldName": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@次のメンバー",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "FilteringExpressionsTree"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Sets/gets the field name of the column where the filtering expression is placed.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n gridExpressionTree.fieldName = 'Column Field';\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nlet columnField = expressionTree.fieldName;\n```"
                        }
                    ]
                }
            },
            "type": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@次のメンバー",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "FilteringExpressionsTree"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Sets/gets the type of the filtering expressions tree.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n gridExpressionTree.type = FilteringExpressionsTree.Advanced;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nlet type = expressionTree.type;\n```"
                        }
                    ]
                }
            }
        },
        "methods": {
            "empty": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Checks if filtering expressions tree is empty."
                        }
                    ]
                }
            },
            "find": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@次のメンバー",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "FilteringExpressionsTree"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns the filtering expression for a column with the provided fieldName.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nlet filteringExpression = gridExpressionTree.find('Column Field');\n```"
                        }
                    ]
                }
            },
            "findIndex": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@次のメンバー",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "FilteringExpressionsTree"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns the index of the filtering expression for a column with the provided fieldName.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nlet filteringExpressionIndex = gridExpressionTree.findIndex('Column Field');\n```"
                        }
                    ]
                }
            }
        },
        "accessors": {}
    }
}
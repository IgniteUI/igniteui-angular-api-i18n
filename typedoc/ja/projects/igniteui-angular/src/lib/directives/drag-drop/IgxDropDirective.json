{
    "IgxDropDirective": {
        "properties": {
            "data": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxDropDirective",
                                "tagName": "次のメンバー:"
                            }
                        }
                    },
                    "shortText": [
                        "- `igxDrop` ディレクティブ内にデータを保存します。要素で `igxDrop` のインスタンスを作成するときに設定できます。",
                        "```html",
                        "<div [igxDrop]=\"{ source: myElement }\"></div>",
                        "```"
                    ]
                }
            },
            "dropChannel": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxDropDirective",
                                "tagName": "次のメンバー:"
                            }
                        }
                    },
                    "shortText": [
                        "igxDrag と igxDrop をチャネルでリンクする方法を提供する @Input プロパティ。",
                        "単一の値または値の配列を受け入れ、完全に一致することで評価します。",
                        "```html",
                        "<div igxDrag [dragChannel]=\"'odd'\">",
                        "        <span>95</span>",
                        "</div>",
                        "<div igxDrop [dropChannel]=\"['odd', 'irrational']\">",
                        "        <span>Numbers drop area!</span>",
                        "</div>",
                        "```"
                    ]
                }
            },
            "enter": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxDropDirective",
                                "tagName": "次のメンバー:"
                            }
                        }
                    },
                    "shortText": [
                        "ドラッグされた要素が要素の領域に入るときにトリガーされるイベント。",
                        "```html",
                        "<div class=\"cageArea\" igxDrop (enter)=\"dragEnter()\" (igxDragEnter)=\"onDragCageEnter()\" (igxDragLeave)=\"onDragCageLeave()\">",
                        "</div>",
                        "```",
                        "```typescript",
                        "public dragEnter(){",
                        "    alert(\"A draggable element has entered the chip area!\");",
                        "}",
                        "```"
                    ]
                }
            },
            "over": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxDropDirective",
                                "tagName": "次のメンバー:"
                            }
                        }
                    },
                    "shortText": [
                        "ドラッグされた要素が要素の領域に入るときにトリガーされるイベント。",
                        "```html",
                        "<div class=\"cageArea\" igxDrop (enter)=\"dragEnter()\" (igxDragEnter)=\"onDragCageEnter()\" (igxDragLeave)=\"onDragCageLeave()\">",
                        "</div>",
                        "```",
                        "```typescript",
                        "public dragEnter(){",
                        "    alert(\"A draggable element has entered the chip area!\");",
                        "}",
                        "```"
                    ]
                }
            },
            "leave": {
                "comment": {
                    "tags": {
                        "memberof": {
                "comment": {
                    "text": "IgxDropDirective",
                    "tagName": "次のメンバー:"
                }
            }
        },
                    "shortText": [
                        "ドラッグされた要素が要素の領域から出るときにトリガーされるイベント。",
                        "```html",
                        "<div class=\"cageArea\" igxDrop (leave)=\"dragLeave()\" (igxDragEnter)=\"onDragCageEnter()\" (igxDragLeave)=\"onDragCageLeave()\">",
                        "</div>",
                        "```",
                        "```typescript",
                        "public dragLeave(){",
                        "    alert(\"A draggable element has left the chip area!\");",
                        "}",
                        "```"
                    ]
                }
            },
            "dropped": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxDropDirective",
                                "tagName": "次のメンバー:"
                            }
                        }
                    },
                    "shortText": [
                        "ドラッグされた要素が要素の領域にドロップされるときにトリガーされるイベント。",
                        "`igxDrop` にはドロップした要素を子として追加するデフォルト ロジックがあるため、ここでキャンセルできます。",
                        "デフォルト ロジックをキャンセルするには、イベントの `cancel` プロパティを true に設定する必要があります。",
                        "```html",
                        "<div class=\"cageArea\" igxDrop (dropped)=\"dragDrop()\" (igxDragEnter)=\"onDragCageEnter()\" (igxDragLeave)=\"onDragCageLeave()\">",
                        "</div>",
                        "```",
                        "```typescript",
                        "public dragDrop(){",
                        "    alert(\"A draggable element has been dropped in the chip area!\");",
                        "}",
                        "```"
                    ]
                }
            }
        },
        "methods": {},
        "accessors": {
            "dropStrategy": {
                "setter": {
                    "comment": {
                        "tags": {
                            "memberof": {
                                "comment": {
                                    "text": "IgxDropDirective",
                                    "tagName": "次のメンバー:"
                                }
                            }
                        },
                        "text": [
                            "export class App {",
                            "     public myDropStrategy = IgxAppendDropStrategy;",
                            "}",
                            "```"
                        ],
                        "shortText": [
                            "`IgxDrag` 要素が現在のドロップ領域内で解放されたときに実行されるドロップ ストラテジ タイプを指定する @Input プロパティ。以下はサポートされるストラテジです。",
                            " - IgxDefaultDropStrategy - デフォルトの基本ストラテジで、処理を実行しません。",
                            " - IgxAppendDropStrategy - ドロップされた要素を `igxDrop` の直接の子として最後の位置に追加します。",
                            " - IgxPrependDropStrategy - ドロップされた要素を `igxDrop` の直接の子として最初の位置に追加します。",
                            " - IgxInsertDropStrategy - ドロップされた要素が `igxDrop` の子要素の上のリリースされた位置に挿入されます。",
                            " それ以外の場合、`igxDrop` の子の外部でリリースされた場合、ドロップされた要素が追加されます。",
                            "```html",
                            "<div igxDrag>",
                            "     <span>DragMe</span>",
                            "</div>",
                            "<div igxDrop [dropStrategy]=\"myDropStrategy\">",
                            "        <span>Numbers drop area!</span>",
                            "</div>",
                            "```",
                            "```typescript",
                            "import { IgxAppendDropStrategy } from 'igniteui-angular';"
                        ]
                    }
                },
                "getter": {
                    "comment": {
                        "text": [
                            "export class App {",
                            "     public myDropStrategy = IgxAppendDropStrategy;",
                            "}",
                            "```"
                        ],
                        "shortText": [
                            "`IgxDrag` 要素が現在のドロップ領域内で解放されたときに実行されるドロップ ストラテジ タイプを指定する @Input プロパティ。以下はサポートされるストラテジです。",
                            " - IgxDefaultDropStrategy - デフォルトの基本ストラテジで、処理を実行しません。",
                            " - IgxAppendDropStrategy - ドロップされた要素を `igxDrop` の直接の子として最後の位置に追加します。",
                            " - IgxPrependDropStrategy - ドロップされた要素を `igxDrop` の直接の子として最初の位置に追加します。",
                            " - IgxInsertDropStrategy - ドロップされた要素が `igxDrop` の子要素の上のリリースされた位置に挿入されます。",
                            " それ以外の場合、`igxDrop` の子の外部でリリースされた場合、ドロップされた要素が追加されます。",
                            "```html",
                            "<div igxDrag>",
                            "     <span>DragMe</span>",
                            "</div>",
                            "<div igxDrop [dropStrategy]=\"myDropStrategy\">",
                            "        <span>Numbers drop area!</span>",
                            "</div>",
                            "```",
                            "```typescript",
                            "import { IgxAppendDropStrategy } from 'igniteui-angular';"
                        ]
                    }
                }
            }
        }
    }
}
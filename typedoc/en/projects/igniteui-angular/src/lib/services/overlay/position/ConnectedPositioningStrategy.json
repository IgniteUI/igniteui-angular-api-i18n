{
    "ConnectedPositioningStrategy": {
        "comment": {
            "shortText": [
                "Positions the element based on the directions and start point passed in trough PositionSettings.",
                "It is possible to either pass a start point or an HTMLElement as a positioning base."
            ]
        },
        "properties": {
            "settings": {
                "comment": {
                    "shortText": "PositionSettings to use when position the component in the overlay"
                }
            }
        },
        "methods": {
            "position": {
                "comment": {
                    "parameters": {
                        "contentElement": {
                            "comment": {
                                "text": "The HTML element to be positioned"
                            }
                        },
                        "size": {
                            "comment": {
                                "text": "Size of the element"
                            }
                        },
                        "document": {
                            "comment": {
                                "text": "reference to the Document object"
                            }
                        },
                        "initialCall": {
                            "comment": {
                                "text": "should be true if this is the initial call to the method"
                            }
                        },
                        "target": {
                            "comment": {
                                "text": [
                                    "attaching target for the component to show",
                                    "```typescript",
                                    "settings.positionStrategy.position(content, size, document, true);",
                                    "```"
                                ]
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "Position the element based on the PositionStrategy implementing this interface."
                }
            },
            "clone": {
                "comment": {
                    "shortText": [
                        "Clone the strategy instance.",
                        "```typescript",
                        "settings.positionStrategy.clone();",
                        "```"
                    ]
                }
            }
        },
        "accessors": {}
    }
}
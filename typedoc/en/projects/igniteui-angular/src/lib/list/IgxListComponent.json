{
    "IgxListComponent": {
        "comment": {
            "tags": {
                "igxmodule": {
                    "comment": {
                        "text": "IgxListModule",
                        "tagName": "igxmodule"
                    }
                },
                "igxtheme": {
                    "comment": {
                        "text": "igx-list-theme",
                        "tagName": "igxtheme"
                    }
                },
                "igxkeywords": {
                    "comment": {
                        "text": "list, data",
                        "tagName": "igxkeywords"
                    }
                },
                "igxgroup": {
                    "comment": {
                        "text": "Grids & Lists",
                        "tagName": "igxgroup"
                    }
                },
                "remarks": {
                    "comment": {
                        "text": [
                            "The Ignite UI List displays rows of items and supports one or more header items as well as search and filtering",
                            "of list items. Each list item is completely templatable and will support any valid HTML or Angular component."
                        ],
                        "tagName": "remarks"
                    }
                },
                "example": {
                    "comment": {
                        "text": [
                            "```html",
                            "<igx-list>",
                            "  <igx-list-item isHeader=\"true\">Contacts</igx-list-item>",
                            "  <igx-list-item *ngFor=\"let contact of contacts\">",
                            "    <span class=\"name\">{{ contact.name }}</span>",
                            "    <span class=\"phone\">{{ contact.phone }}</span>",
                            "  </igx-list-item>",
                            "</igx-list>",
                            "```"
                        ],
                        "tagName": "example"
                    }
                }
            },
            "shortText": "Displays a collection of data items in a templatable list format"
        },
        "properties": {
            "children": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "let listChildren: QueryList = this.list.children;",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Returns a collection of all items and headers in the list."
                }
            },
            "emptyListTemplate": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "This template is used by IgxList in case there are no list items",
                                    "defined and `isLoading` is set to `false`."
                                ],
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-list>",
                                    "  <ng-template igxEmptyList>",
                                    "    <p class=\"empty\">No contacts! :(</p>",
                                    "  </ng-template>",
                                    "</igx-list>",
                                    "```",
                                    "```typescript",
                                    "let emptyTemplate = this.list.emptyListTemplate;",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Sets/gets the empty list template."
                }
            },
            "dataLoadingTemplate": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "This template is used by IgxList in case there are no list items defined and `isLoading` is set to `true`.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-list>",
                                    "  <ng-template igxDataLoading>",
                                    "    <p>Patience, we are currently loading your data...</p>",
                                    "  </ng-template>",
                                    "</igx-list>",
                                    "```",
                                    "```typescript",
                                    "let loadingTemplate = this.list.dataLoadingTemplate;",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Sets/gets the list loading template."
                }
            },
            "listItemLeftPanningTemplate": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Default value is `null`.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-list [allowLeftPanning]=\"true\">",
                                    "  <ng-template igxListItemLeftPanning>",
                                    "    <igx-icon>delete</igx-icon>Delete",
                                    "  </ng-template>",
                                    "</igx-list>",
                                    "```",
                                    "```typescript",
                                    "let itemLeftPanTmpl = this.list.listItemLeftPanningTemplate;",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Sets/gets the template for left panning a list item."
                }
            },
            "listItemRightPanningTemplate": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Default value is `null`.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-list [allowRightPanning] = \"true\">",
                                    "  <ng-template igxListItemRightPanning>",
                                    "    <igx-icon>call</igx-icon>Dial",
                                    "  </ng-template>",
                                    "</igx-list>",
                                    "```",
                                    "```typescript",
                                    "let itemRightPanTmpl = this.list.listItemRightPanningTemplate;",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Sets/gets the template for right panning a list item."
                }
            },
            "panEndTriggeringThreshold": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "By default this property is set to 0.5 which is 50% of the list item's width.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-list [panEndTriggeringThreshold]=\"0.8\"></igx-list>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Provides a threshold after which the item's panning will be completed automatically."
                }
            },
            "id": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "If not set, the `id` of the first list component will be `\"igx-list-0\"`.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-list id=\"my-first-list\"></igx-list>",
                                    "```",
                                    "```typescript",
                                    "let listId = this.list.id;",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Sets/gets the `id` of the list."
                }
            },
            "allowLeftPanning": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Default value is `false`.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-list [allowLeftPanning]=\"true\"></igx-list>",
                                    "```",
                                    "```typescript",
                                    "let isLeftPanningAllowed = this.list.allowLeftPanning;",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Sets/gets whether the left panning of an item is allowed."
                }
            },
            "allowRightPanning": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Default value is `false`.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-list [allowRightPanning]=\"true\"></igx-list>",
                                    "```",
                                    "```typescript",
                                    "let isRightPanningAllowed = this.list.allowRightPanning;",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Sets/gets whether the right panning of an item is allowed."
                }
            },
            "isLoading": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "Set it to display the dataLoadingTemplate while data is being retrieved.",
                                    "Default value is `false`."
                                ],
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    " <igx-list [isLoading]=\"true\"></igx-list>",
                                    "```",
                                    "```typescript",
                                    "let isLoading = this.list.isLoading;",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Sets/gets whether the list is currently loading data."
                }
            },
            "leftPan": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Provides a reference to an object of type `IListItemPanningEventArgs` as an event argument.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-list [allowLeftPanning]=\"true\" (leftPan)=\"leftPan($event)\"></igx-list>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Event emitted when a left pan gesture is executed on a list item."
                }
            },
            "rightPan": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Provides a reference to an object of type `IListItemPanningEventArgs` as an event argument.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-list [allowRightPanning]=\"true\" (rightPan)=\"rightPan($event)\"></igx-list>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Event emitted when a right pan gesture is executed on a list item."
                }
            },
            "startPan": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Provides a reference to an object of type `IListItemPanningEventArgs` as an event argument.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-list (startPan)=\"startPan($event)\"></igx-list>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Event emitted when a pan gesture is started."
                }
            },
            "endPan": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Provides a reference to an object of type `IListItemPanningEventArgs` as an event argument.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-list (endPan)=\"endPan($event)\"></igx-list>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Event emitted when a pan gesture is completed or canceled."
                }
            },
            "resetPan": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Provides a reference to an object of type `IgxListComponent` as an event argument.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-list (resetPan)=\"resetPan($event)\"></igx-list>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Event emitted when a pan item is returned to its original position."
                }
            },
            "panStateChange": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Provides references to the `IgxListItemComponent` and `IgxListPanState` as event arguments.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-list (panStateChange)=\"panStateChange($event)\"></igx-list>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Event emitted when a pan gesture is executed on a list item."
                }
            },
            "itemClicked": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Provides references to the `IgxListItemComponent` and `Event` as event arguments.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-list (itemClicked)=\"onItemClicked($event)\"></igx-list>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Event emitted when a list item is clicked."
                }
            }
        },
        "methods": {},
        "accessors": {
            "resourceStrings": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "Returns the resource strings."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Sets the resource strings.",
                            "By default it uses EN resources."
                        ]
                    }
                }
            },
            "role": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "let listRole =  this.list.role;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets the `role` attribute value."
                    }
                }
            },
            "isListEmpty": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "let isEmpty =  this.list.isListEmpty;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets a boolean indicating if the list is empty."
                    }
                }
            },
            "items": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "let listItems: IgxListItemComponent[] = this.list.items;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets the list `items` excluding the header ones."
                    }
                }
            },
            "headers": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "let listHeaders: IgxListItemComponent[] =  this.list.headers;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets the header list `items`."
                    }
                }
            },
            "context": {
                "getter": {
                    "comment": {
                        "tags": {
                            "remark": {
                                "comment": {
                                    "text": [
                                        "Gets the `context` object which represents the `template context` binding into the `list container`",
                                        "by providing the `$implicit` declaration which is the `IgxListComponent` itself."
                                    ],
                                    "tagName": "remark"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "let listComponent =  this.list.context;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets the `context` object of the template binding."
                    }
                }
            },
            "template": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "let listTemplate = this.list.template;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets a `TemplateRef` to the currently used template."
                    }
                }
            },
            "displayDensity": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Returns the theme of the component.",
                            "The default theme is `comfortable`.",
                            "Available options are `comfortable`, `cosy`, `compact`.",
                            "```typescript",
                            "let componentTheme = this.component.displayDensity;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": "Sets the theme of the component."
                    }
                }
            }
        }
    }
}
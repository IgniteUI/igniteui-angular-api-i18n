{
    "GroupedRecords": {
        "properties": {
            "length": {
                "comment": {
                    "shortText": "配列の長さを取得または設定します。配列に定義される要素のインデックス + 1 の数値です。"
                }
            }
        },
        "methods": {
            "toString": {
                "comment": {
                    "shortText": "配列の文字列表示を返します。"
                }
            },
            "toLocaleString": {
                "comment": {
                    "shortText": "配列の文字列表示を返します。要素が toLocalString メソッドを使用して文字列に変換されます。"
                }
            },
            "pop": {
                "comment": {
                    "shortText": "最後の要素を配列から削除して要素を返します。"
                }
            },
            "push": {
                "comment": {
                    "parameters": {
                        "items": {
                            "comment": {
                                "text": "New elements of the Array."
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "新しい要素を配列に追加し、配列の新しい長さを返します。"
                }
            },
            "concat": {
                "comment": {
                    "parameters": {
                        "items": {
                            "comment": {
                                "text": "Additional items to add to the end of array1."
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "2 つ以上の配列を結合します。"
                }
            },
            "join": {
                "comment": {
                    "parameters": {
                        "separator": {
                            "comment": {
                                "text": "A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma."
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "指定した文字列によって分割される配列のすべての要素を追加します。"
                }
            },
            "reverse": {
                "comment": {
                    "parameters": {
                        "start": {
                            "comment": {
                                "text": "The beginning of the specified portion of the array."
                            }
                        },
                        "end": {
                            "comment": {
                                "text": "The end of the specified portion of the array."
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "配列の要素を反転します。"
                }
            },
            "shift": {
                "comment": {
                    "shortText": "最初の要素を配列から削除して要素を返します。"
                }
            },
            "slice": {
                "comment": {
                    "shortText": "配列のセクションを返します。"
                }
            },
            "sort": {
                "comment": {
                    "parameters": {
                        "compareFn": {
                            "comment": {
                                "text": "The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order."
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "配列を並べ替えます。"
                }
            },
            "splice": {
                "comment": {
                    "parameters": {
                        "start": {
                            "comment": {
                                "text": "The zero-based location in the array from which to start removing elements."
                            }
                        },
                        "deleteCount": {
                            "comment": {
                                "text": "The number of elements to remove."
                            }
                        },
                        "items": {
                            "comment": {
                                "text": "Elements to insert into the array in place of the deleted elements."
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "要素を配列から削除し、オプションに新しい要素を同じ場所に挿入します。削除した要素を返します。"
                }
            },
            "unshift": {
                "comment": {
                    "parameters": {
                        "items": {
                            "comment": {
                                "text": "Elements to insert at the start of the Array."
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "新しい要素を配列の開始に挿入します。"
                }
            },
            "indexOf": {
                "comment": {
                    "parameters": {
                        "searchElement": {
                            "comment": {
                                "text": "The value to locate in the array."
                            }
                        },
                        "fromIndex": {
                            "comment": {
                                "text": "The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0."
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "配列で値の最初のインスタンス行のインデックスを返します。"
                }
            },
            "lastIndexOf": {
                "comment": {
                    "parameters": {
                        "searchElement": {
                            "comment": {
                                "text": "The value to locate in the array."
                            }
                        },
                        "fromIndex": {
                            "comment": {
                                "text": "The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array."
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "配列で指定した値の最後のインスタンス行のインデックスを返します。"
                }
            },
            "every": {
                "comment": {
                    "parameters": {
                        "callbackfn": {
                            "comment": {
                                "text": "A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array."
                            }
                        },
                        "thisArg": {
                            "comment": {
                                "text": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value."
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "配列のすべてのメンバーが指定したテストをパスするかどうかを決定します。"
                }
            },
            "some": {
                "comment": {
                    "parameters": {
                        "callbackfn": {
                            "comment": {
                                "text": "A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array."
                            }
                        },
                        "thisArg": {
                            "comment": {
                                "text": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value."
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "指定したコールバック関数が配列の任意の要素のために true を返すかどうかを決定します。"
                }
            },
            "forEach": {
                "comment": {
                    "parameters": {
                        "callbackfn": {
                            "comment": {
                                "text": "A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array."
                            }
                        },
                        "thisArg": {
                            "comment": {
                                "text": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value."
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "指定した操作を配列で各要素に実行します。"
                }
            },
            "map": {
                "comment": {
                    "parameters": {
                        "callbackfn": {
                            "comment": {
                                "text": "A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array."
                            }
                        },
                        "thisArg": {
                            "comment": {
                                "text": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value."
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "定義したコールバック関数を配列の各要素に呼び出し、結果を含む配列を返します。"
                }
            },
            "filter": {
                "comment": {
                    "parameters": {
                        "callbackfn": {
                            "comment": {
                                "text": "A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array."
                            }
                        },
                        "thisArg": {
                            "comment": {
                                "text": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value."
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "コールバック関数に指定した条件に合う配列の要素を返します。"
                }
            },
            "reduce": {
                "comment": {
                    "parameters": {
                        "callbackfn": {
                            "comment": {
                                "text": "A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array."
                            }
                        },
                        "initialValue": {
                            "comment": {
                                "text": "If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value."
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "指定したコールバック関数を配列のすべての要素に呼び出します。コールバック関数の戻り値は累積された結果で、コールバック関数への次の呼び出しの引数として提供されます。"
                }
            },
            "reduceRight": {
                "comment": {
                    "parameters": {
                        "callbackfn": {
                            "comment": {
                                "text": "A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array."
                            }
                        },
                        "initialValue": {
                            "comment": {
                                "text": "If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value."
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "指定したコールバック関数を降順で配列のすべての要素に呼び出します。コールバック関数の戻り値は累積された結果で、コールバック関数への次の呼び出しの引数として提供されます。"
                }
            },
            "find": {
                "comment": {
                    "parameters": {
                        "predicate": {
                            "comment": {
                                "text": [
                                    "find calls predicate once for each element of the array, in ascending",
                                    "order, until it finds one where predicate returns true. If such an element is found, find",
                                    "immediately returns that element value. Otherwise, find returns undefined."
                                ]
                            }
                        },
                        "thisArg": {
                            "comment": {
                                "text": [
                                    "If provided, it will be used as the this value for each invocation of",
                                    "predicate. If it is not provided, undefined is used instead."
                                ]
                            }
                        }
                    },
                    "tags": {},
                    "shortText": [
                        "配列で最初の述語が true の要素の値を返します。ない場合に undefined を返します。",
                        ""
                    ]
                }
            },
            "findIndex": {
                "comment": {
                    "parameters": {
                        "predicate": {
                            "comment": {
                                "text": [
                                    "find calls predicate once for each element of the array, in ascending",
                                    "order, until it finds one where predicate returns true. If such an element is found,",
                                    "findIndex immediately returns that element index. Otherwise, findIndex returns -1."
                                ]
                            }
                        },
                        "thisArg": {
                            "comment": {
                                "text": [
                                    "If provided, it will be used as the this value for each invocation of",
                                    "predicate. If it is not provided, undefined is used instead."
                                ]
                            }
                        }
                    },
                    "tags": {},
                    "shortText": [
                        "配列で最初の述語が true の要素のインデックスを返します。ない場合に -1 を返します。",
                        ""
                    ]
                }
            },
            "fill": {
                "comment": {
                    "parameters": {
                        "value": {
                            "comment": {
                                "text": "value to fill array section with"
                            }
                        },
                        "start": {
                            "comment": {
                                "text": [
                                    "index to start filling the array at. If start is negative, it is treated as",
                                    "length+start where length is the length of the array."
                                ]
                            }
                        },
                        "end": {
                            "comment": {
                                "text": [
                                    "index to stop filling the array at. If end is negative, it is treated as",
                                    "length+end."
                                ]
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "開始および終了インデックスの間のセクションを値に設定した後に this オブジェクトを返します。"
                }
            },
            "copyWithin": {
                "comment": {
                    "parameters": {
                        "target": {
                            "comment": {
                                "text": [
                                    "If target is negative, it is treated as length+target where length is the",
                                    "length of the array."
                                ]
                            }
                        },
                        "start": {
                            "comment": {
                                "text": [
                                    "If start is negative, it is treated as length+start. If end is negative, it",
                                    "is treated as length+end."
                                ]
                            }
                        },
                        "end": {
                            "comment": {
                                "text": "If not specified, length of the this object is used as its default value."
                            }
                        }
                    },
                    "tags": {},
                    "shortText": [
                        "配列の開始および終了インデックスの間のセクションをコピーして同じ配列のターゲット位置に貼り付けた後に this オブジェクトを返します。",
                        ""
                    ]
                }
            },
            "__@iterator": {
                "comment": {
                    "shortText": "反復子"
                }
            },
            "entries": {
                "comment": {
                    "shortText": "配列の各エントリのためにキーと値ペアの列挙子を返します。"
                }
            },
            "keys": {
                "comment": {
                    "shortText": "配列のキーの列挙子を返します。"
                }
            },
            "values": {
                "comment": {
                    "shortText": "配列の値の列挙子を返します。"
                }
            },
            "__@unscopables": {
                "comment": {
                    "shortText": [
                        "'with' ステートメントで使用されない場合に値が 'true' になるプロパティを持つオブジェクトを返します。"
                    ]
                }
            },
            "includes": {
                "comment": {
                    "parameters": {
                        "searchElement": {
                            "comment": {
                                "text": "The element to search for."
                            }
                        },
                        "fromIndex": {
                            "comment": {
                                "text": "The position in this array at which to begin searching for searchElement."
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "配列が特定の要素を含むかどうかを決定します。true または false を返します。"
                }
            }
        },
        "accessors": {}
    }
}

{
    "IgxInputGroupComponent": {
        "properties": {
            "element": {
                "comment": {
                    "shortText": "An ElementRef property of the `IgxInputGroupComponent`."
                }
            },
            "id": {
                "comment": {
                    "shortText": [
                        "An @Input property that sets the value of `id` attribute. If not provided it will be automatically generated.",
                        "```html",
                        "<igx-input-group [id]=\"'igx-input-group-55'\"></igx-input-group>",
                        "```"
                    ]
                }
            },
            "defaultClass": {
                "comment": {
                    "shortText": [
                        "Property that enables/disables the autogenerated class of the `IgxInputGroupComponent`.",
                        "By default applied the class is applied.",
                        "```typescript",
                        "@ViewChild(\"MyInputGroup\")",
                        "public inputGroup: IgxInputGroupComponent;",
                        "ngAfterViewInit(){",
                        "this.inputGroup.defaultClass = false;",
                        "```",
                        "}"
                    ]
                }
            },
            "disabled": {
                "comment": {
                    "shortText": [
                        "An @Input property that disables the `IgxInputGroupComponent`.",
                        "```html",
                        "<igx-input-group [disabled]=\"'true'\"></igx-input-group>",
                        "```"
                    ]
                }
            }
        },
        "methods": {},
        "accessors": {
            "type": {
                "setter": {
                    "comment": {
                        "shortText": [
                            "An @Input property that sets how the input will be styled.",
                            "The allowed values are `line`, `box`, `border` and `search`. The default is `line`.",
                            "```html",
                            "<igx-input-group [type]=\"'search'\">",
                            "```"
                        ]
                    }
                },
                "getter": {
                    "comment": {
                        "shortText": [
                            "Returns the type of the `IgxInputGroupComponent`. How the input is styled.",
                            "Values are `line` - 0, `box` - 1, `border` - 2  and `search` - 3. The default is `line`.",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let inputType = this.inputGroup.type;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "supressInputAutofocus": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Returns whether the input element of the input group will be automatically focused on click.",
                            "```typescript",
                            "let supressInputAutofocus = this.inputGroup.supressInputAutofocus;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "shortText": [
                            "Sets whether the input element of the input group will be automatically focused on click.",
                            "```html",
                            "<igx-input-group [supressInputAutofocus]=\"true\"></igx-input-group>",
                            "```"
                        ]
                    }
                }
            },
            "hasHints": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Returns whether the `IgxInputGroupComponent` has hints.",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let inputHints = this.inputGroup.hasHints;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "hasBorder": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Returns whether the `IgxInputGroupComponent` has border.",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let inputBroder = this.inputGroup.hasBorder;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "isTypeLine": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Returns whether the `IgxInputGroupComponent` type is line.",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup1\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let isTypeLine = this.inputGroup.isTypeLine;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "isTypeBox": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Returns whether the `IgxInputGroupComponent` type is box.",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup1\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let isTypeBox = this.inputGroup.isTypeBox;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "isTypeBorder": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Returns whether the `IgxInputGroupComponent` type is border.",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup1\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let isTypeBorder = this.inputGroup.isTypeBorder;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "isTypeSearch": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Returns whether the `IgxInputGroupComponent` type is search.",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup1\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let isTypeSearch = this.inputGroup.isTypeSearch;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "displayDensity": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Returns the theme of the component.",
                            "The default theme is `comfortable`.",
                            "Available options are `comfortable`, `cosy`, `compact`.",
                            "```typescript",
                            "let componentTheme = this.component.displayDensity;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "shortText": "Sets the theme of the component."
                    }
                }
            }
        }
    }
}
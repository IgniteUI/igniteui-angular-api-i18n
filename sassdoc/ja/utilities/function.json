{
    "em": {
        "description": [
            "<p>ピクセルを相対値 (em) に変換します。</p>",
            ""
        ],
        "parameters": {
            "pixels": {
                "description": [
                    "<p>変換するピクセル値。</p>",
                    ""
                ]
            },
            "context": {
                "description": [
                    "<p>対して変換するベース コンテキスト。</p>",
                    ""
                ]
            }
        }
    },
    "rem": {
        "description": [
            "<p>ピクセルとルートの相対値 (rem)。</p>",
            ""
        ],
        "parameters": {
            "pixels": {
                "description": [
                    "<p>変換するピクセル値。</p>",
                    ""
                ]
            },
            "context": {
                "description": [
                    "<p>対して変換するベース コンテキスト。</p>",
                    ""
                ]
            }
        }
    },
    "luminance": {
        "description": [
            "<p>指定された色の輝度を計算します。",
            "<a href=\"https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\">https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests</a> を参照してください。</p>",
            ""
        ],
        "parameters": {
            "color": {
                "description": [
                    "<p>輝度が計算するための色。</p>",
                    ""
                ]
            }
        }
    },
    "contrast": {
        "description": [
            "<p>2 つの色の中間の色のコントラストの比率を計算します。",
            "<a href=\"https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\">https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests</a> を参照してください。</p>",
            ""
        ],
        "parameters": {
            "background": {
                "description": [
                    "<p>背景色。</p>",
                    ""
                ]
            },
            "foreground": {
                "description": [
                    "<p>前景色。</p>",
                    ""
                ]
            }
        },
        "returns": {
            "description": [
            "<p>背景色と前景色のコントラストの比率。</p>",
            ""
        ]
    }
    },
    "is-direction": {
        "description": [
            "<p><code>$value</code> は有効な方向であるかをテストします。</p>",
            ""
        ],
        "parameters": {
            "value": {
                "description": [
                    "<p>テストする値。</p>",
                    ""
                ]
            }
        }
    },
    "is-component": {
        "description": [
            "<p>既知のコンポーネント リストにコンポーネントまたはコンポーネントのリストはあるかどうかテストします。</p>",
            ""
        ],
        "parameters": {
            "excludes": {
                "description": [
                    "<p>チェックされるコンポーネント リスト。</p>",
                    ""
                ]
            }
        },
        "returns": {
            "description": [
                "<p>渡された項目のリスト。</p>",
                ""
            ]
        }
    },
    "to-string": {
        "description": [
            "<p>数値を HEX 値文字列に変換します。</p>",
            ""
        ],
        "parameters": {
            "num": {
                "description": [
                    "<p>変換する数字。</p>",
                    ""
                ]
            },
            "radix": {
                "description": [
                    "<p>この変換に使用される base radix。</p>",
                    ""
                ]
            }
        },
        "returns": {
            "description": [
                "<p>結果の文字列。</p>",
                ""
            ]
        }
    },
    "hexrgba": {
        "description": [
            "<p>Rgba 色を 16 進法の色に変換します。</p>",
            ""
        ],
        "parameters": {
            "rgba": {
                "description": [
                    "<p>変換する rgba 色。</p>",
                    ""
                ]
            },
            "background": {
                "description": [
                    "<p>変換する背景色。</p>",
                    ""
                ]
            }
        },
        "returns": {
            "description": [
                "<p>Rgba 値の 16 進法形表現。</p>",
                ""
            ]
        }
    },
    "extend": {
        "description": [
            "<p>Map オブジェクトを他の Map オブジェクトのプロパティで継承します。</p>",
            ""
        ],
        "parameters": {
            "map1": {
                "description": [
                    "<p>継承されるソース マップ。</p>",
                    ""
                ]
            },
            "map2": {
                "description": [
                    "<p>ソース マップを継承するマップ。</p>",
                    ""
                ]
            }
        },
        "returns": {
            "description": [
                "<p>2 番目のマップのプロパティで継承された元のマップを返します。</p>",
                ""
            ]
        }
    },
    "--var": {
        "description": [
            "<p>CSS プロパティ値を返します。テーマ設定によってい css &#39;--var&#39; または文字列の値を返します。</p>",
            ""
        ],
        "parameters": {
            "map": {
                "description": [
                    "<p>値が読み込まれるソース テーマ。</p>",
                    ""
                ]
            },
            "key": {
                "description": [
                    "<p>プロパティの値として割り当てられるテーマ マップからのキー。</p>",
                    ""
                ]
            }
        },
        "returns": {
            "description": [
                "<p>渡されたマップのキー値またはキー名で連結されたキーの名前。</p>",
                ""
            ]
        },
        "example": [
            {
                "description": [
                    "<p>デフォルトのアバター テーマの値に rule-set で color プロパティを割り当てられます。</p>",
                    ""
                ],
                "code": [
                    "%igx-avatar-icon {",
                    "  color: --var($avatar-theme, 'icon-color');",
                    "}",
                    "// legacy-support がオフの場合、次のを生成します。",
                    "// %igx-avatar-icon {",
                    "//   color: var(--igx-avatar-icon-color);",
                    "// }",
                    "// そうでない場合、'$avatar-theme’の 'icon-color’ キーの値を返します。;"
                ]
            }
        ]
    },
    "str-split": {
        "description": [
            "<p>指定されたセパレーターを使用して、文字列をリストに分割します。</p>",
            ""
        ],
        "parameters": {
            "string": {
                "description": [
                    "<p>分割する文字列。</p>",
                    ""
                ]
            },
            "separator": {
                "description": [
                    "<p>分割の文字列セパレーター</p>",
                    ""
                ]
            }
        }
        },
    "resolve-value": {
        "description": [
            "<p>マップのキーは呼び出される関数の名前で、指定したキーの値は呼び出される関数の引数の指定したインストラクション マップの値を返します。",
            "インストラクション マップは左から右へ実行します。",
            "最初のインストラクションの出力は次のインストラクションの入力として渡されます。</p>",
            ""
        ],
        "parameters": {
            "ctx": {
                "description": [
                    "<p>使用されるインストラクション マップ。</p>",
                    ""
                ]
            },
            "extra": {
                "description": [
                    "<p>関数が呼ばれる時に渡される引数。",
                    "<Code>igx-color</code> と <code>igx-contrast-color</code> 関数のみ適用されます。</p>",
                    ""
                ]
            }
        },
        "example": [
            {
                "description": [
                    "<p><Code>igx-color</code> を解決して、80% 透明度を適用します。",
                    ""
                ],
                "code": [
                    "$instructions: (",
                    "  igx-color: ('primary', 500),",
                    "  rgba: .2",
                    ");",
                    "// $some-palette は追加の引数として渡されたパレットです。",
                    "$resolved-color: resolve-value($instructions, $some-palette);"
                ]
            }
        ]
    },
    "random-color": {
        "description": [
            "<p>ランダムの色を返します。</p>",
            ""
        ]
    },    
    "apply-palette": {
        "description": [
            "<p>指定したテーマ スキーマに <code>igx-palette</code> を適用します。</p>",
            ""
        ],
        "parameters": {
            "schema": {
                "description": [
                    "<p>テーマ スキーマ。</p>",
                    ""
                ]
            },
            "palette": {
                "description": [
                    "<p>Igx-palette のマップ。</p>",
                    ""
                ]
            }
        },
        "returns": {
            "description": [
                "<p>解決したパレットの値のマップ。</p>",
                ""
            ]
        },
        "example": [
            {
                "description": [
                    "<p>テーマ スキーマに <code>igx-palette</code> を適用します。</p>",
                    ""
                ],
                "code": [
                    "$custom-palette: igx-palette($primary: red, $secondary: blue);",
                    "$custom-schema: (",
                    "  my-color: (",
                    "     igx-color: ('primary', 800),",
                    "     rgba: .5",
                    "  ),",
                    "  roundness: 5px",
                    ");",
                    "$theme: apply-palette($custom-schema, $custom-palette); // 解決したパレットの値のマップ。"
                ]
            }
        ]
    },
    "is-root": {
        "description": [
            "<p>呼ばれた範囲がドキュメントのルートの場合、 true を返します。</p>",
            ""
        ],
        "example": [
            {
                "description": [
                    "<p>現在の範囲がルートであるかどうかをチェックします。</p>",
                    ""
                ],
                "code": [
                    "@mixin smart-mixin() {",
                    "  $scope: if(is-root(), ':root', '&');",
                    "",
                    "  #{$scope} {",
                    "    /* スタイルのルールをここに入れます。 */",
                    "  }",
                    "}"
                ]
            }
        ]
    },
    "fraction-clamp": {
        "description": [
            "<p>指定した最小値と最大値の間の計算値を返します。</p>",
            ""
        ]
    },
    "round-borders": {
        "description": [
            "<p>値に単位がない場合、0 が最小値で １ が最大値であるリストまたは値を返します。値に単位がある場合は渡された単位の値またはリストを返します。</p>",
            ""
        ]
    },
    "lighten-color": {
        "description": [
            "<p>Sass&#39 の薄いラッパー。Color 型以外の値のパススルーを許可する lighten 関数。</p>",
            ""
        ],
        "parameters": {
            "color": {
                "description": [
                    "<p>明るくされる色。</p>",
                    ""
                ]
            },
            "amount": {
                "description": [
                    "<p>色が明るくされる割合。</p>",
                    ""
                ]
            }
        },
        "returns": {
            "description": [
                "<p>Lighten 関数によって作成される編集される色。",
                "渡された値が color ではない場合、渡された値を返します。</p>",
                ""
            ]
        }
    },
    "darken-color": {
        "description": [
            "<p>Sass&#39 の薄いラッパー。Color 型以外の値のパススルーを許可する darken 関数。</p>",
            ""
        ],
        "parameters": {
            "color": {
                "description": [
                    "<p>明るくされる色。</p>",
                    ""
                ]
            },
            "amount": {
                "description": [
                    "<p>色が明るくされる割合。</p>",
                    ""
                ]
            }
        },
        "returns": {
            "description": [
                "<p>Lighten 関数によって作成される編集される色。",
                "渡された値が color ではない場合、渡された値を返します。</p>",
                ""
            ]
        }
    }
}
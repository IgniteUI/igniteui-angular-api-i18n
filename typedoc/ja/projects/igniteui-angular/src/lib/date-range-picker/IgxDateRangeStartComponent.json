{
    "IgxDateRangeStartComponent": {
        "comment": {
            "tags": {
                "igxmodule": {
                    "comment": {
                        "text": "IgxDateRangePickerModule",
                        "tagName": "igxmodule"
                    }
                },
                "igxtheme": {
                    "comment": {
                        "text": "igx-input-group-theme, igx-calendar-theme, igx-date-range-picker-theme",
                        "tagName": "igxtheme"
                    }
                },
                "igxkeywords": {
                    "comment": {
                        "text": "date, range, date range, date picker",
                        "tagName": "igxkeywords"
                    }
                },
                "igxgroup": {
                    "comment": {
                        "text": "scheduling",
                        "tagName": "igxgroup"
                    }
                },
                "remarks": {
                    "comment": {
                        "text": "テンプレート化する場合、start 入力は個別にテンプレート化する必要があります。",
                        "tagName": "備考:"
                    }
                },
                "example": {
                    "comment": {
                        "tags": {},
                        "text": [
                            "```html",
                            "<igx-date-range-picker mode=\"dropdown\">",
                            "     <igx-date-range-start>",
                            "         <input igxInput igxDateTimeEditor type=\"text\">",
                            "     </igx-date-range-start>",
                            "     ...",
                            "</igx-date-range-picker>",
                            "```"
                        ],
                        "tagName": "例:"
                    }
                }
            },
            "shortText": "Date range picker の start 入力を定義します。"
        },
        "properties": {
            "defaultClass": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "`IgxInputGroupComponent` の自動生成されたクラスを有効/無効にするプロパティ。",
                        "デフォルトでクラスが適用されます。",
                        "```typescript",
                        " @ViewChild(\"MyInputGroup\")",
                        " public inputGroup: IgxInputGroupComponent;",
                        " ngAfterViewInit(){",
                        " this.inputGroup.defaultClass = false;",
                        "```",
                        "}"
                    ]
                }
            },
            "suppressInputAutofocus": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "自動フォーカスにより、ソフトウェア キーボードがモバイル デバイスに表示されます。",
                                "tagName": "備考:"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-input-group [suppressInputAutofocus]=\"true\"></igx-input-group>",
                                    "```"
                                ],
                                "tagName": "例:"
                            }
                        }
                    },
                    "shortText": "入力グループ内の他の要素 (Prefix または Suffix など) をクリックすると、入力に自動的にフォーカスすることを防止します。"
                }
            }
        },
        "methods": {},
        "accessors": {
            "resourceStrings": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "Returns the resource strings."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Sets the resource strings.",
                            "By default it uses EN resources."
                        ]
                    }
                }
            },
            "type": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "`IgxInputGroupComponent` のタイプを返します。入力のスタイル設定方法。",
                            "デフォルトは `line` です。",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let inputType = this.inputGroup.type;",
                            "}",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "An @Input property that sets how the input will be styled.",
                            "Allowed values of type IgxInputGroupType.",
                            "```html",
                            "<igx-input-group [type]=\"'search'\">",
                            "```"
                        ]
                    }
                }
            },
            "theme": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Returns the theme of the input.",
                            "The returned value is of type IgxInputGroupType.",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit() {",
                            " let inputTheme = this.inputGroup.theme;",
                            "}"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Sets the theme of the input.",
                            "Allowed values of type IgxInputGroupTheme.",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit() {",
                            " let inputTheme = 'fluent';",
                            "}"
                        ]
                    }
                }
            },
            "hasHints": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "`IgxInputGroupComponent` にヒントがあるかどうかを返します。",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let inputHints = this.inputGroup.hasHints;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "hasBorder": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "`IgxInputGroupComponent` に境界線があるかどうかを返します。",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let inputBorder = this.inputGroup.hasBorder;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "isTypeLine": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "`IgxInputGroupComponent` の type が line かどうかを返します。",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup1\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let isTypeLine = this.inputGroup.isTypeLine;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "isTypeBox": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "`IgxInputGroupComponent` の type が box かどうかを返します。",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup1\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let isTypeBox = this.inputGroup.isTypeBox;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "isTypeBorder": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "`IgxInputGroupComponent` の type が border かどうかを返します。",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup1\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let isTypeBorder = this.inputGroup.isTypeBorder;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "isTypeFluent": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "`IgxInputGroupComponent` のテーマが Fluent の場合、true を返します。",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup1\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let isTypeFluent = this.inputGroup.isTypeFluent;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "isTypeBootstrap": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "`IgxInputGroupComponent` のテーマが Bootstrap の場合、true を返します。",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup1\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let isTypeBootstrap = this.inputGroup.isTypeBootstrap;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "isTypeIndigo": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "`IgxInputGroupComponent` のテーマが Indigo の場合、true を返します。",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup1\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let isTypeIndigo = this.inputGroup.isTypeIndigo;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "isTypeSearch": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "`IgxInputGroupComponent` の type が search かどうかを返します。",
                            "```typescript",
                            "@ViewChild(\"MyInputGroup1\")",
                            "public inputGroup: IgxInputGroupComponent;",
                            "ngAfterViewInit(){",
                            "   let isTypeSearch = this.inputGroup.isTypeSearch;",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "displayDensity": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "コンポーネントのテーマを返します。",
                            "デフォルト テーマは `comfortable` です。",
                            "利用可能なオプションは  `comfortable`、`cosy`、および `compact` です。",
                            "```typescript",
                            "let componentTheme = this.component.displayDensity;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": "コンポーネントのテーマを設定します。"
                    }
                }
            }
        }
    }
}
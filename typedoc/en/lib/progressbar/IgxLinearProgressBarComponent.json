{
    "IgxLinearProgressBarComponent": {
        "properties": {
            "striped": {
                "comment": {
                    "shortText": [
                        "Set `IgxLinearProgressBarComponent` to have striped style. By default it is set to false.",
                        "```html",
                        "<igx-linear-bar [striped]=\"true\" [max]=\"200\" [value]=\"50\"></igx-linear-bar>",
                        "```"
                    ]
                }
            },
            "indeterminate": {
                "comment": {
                    "shortText": [
                        "Set `IgxLinearProgressBarComponent` to have indeterminate. By default it is set to false.",
                        "```html",
                        "<igx-linear-bar [indeterminate]=\"true\"></igx-linear-bar>",
                        "```"
                    ]
                }
            },
            "role": {
                "comment": {
                    "shortText": [
                        "An @Input property that sets the value of the `role` attribute. If not provided it will be automatically set to `progressbar`.",
                        "```html",
                        "<igx-linear-bar role=\"progressbar\"></igx-linear-bar>",
                        "```"
                    ]
                }
            },
            "id": {
                "comment": {
                    "shortText": [
                        "An @Input property that sets the value of `id` attribute. If not provided it will be automatically generated.",
                        "```html",
                        "<igx-linear-bar [id]=\"'igx-linear-bar-55'\" [striped]=\"true\" [max]=\"200\" [value]=\"50\"></igx-linear-bar>",
                        "```"
                    ]
                }
            },
            "textAlign": {
                "comment": {
                    "shortText": [
                        "Set the position that defines where the text is aligned.",
                        "Possible options - `IgxTextAlign.START` (default), `IgxTextAlign.CENTER`, `IgxTextAlign.END`.",
                        "```typescript",
                        "public positionCenter: IgxTextAlign;",
                        "public ngOnInit() {",
                        "   this.positionCenter = IgxTextAlign.CENTER;",
                        "}",
                        "//...",
                        "```",
                        "```html",
                        "<igx-linear-bar type=\"warning\" [text]=\"'Custom text'\" [textAlign]=\"positionCenter\" [striped]=\"true\"></igx-linear-bar>",
                        "```"
                    ]
                }
            },
            "textVisibility": {
                "comment": {
                    "shortText": [
                        "Set the text to be visible. By default it is set to true.",
                        "```html",
                        "<igx-linear-bar type=\"default\" [textVisibility]=\"false\"></igx-linear-bar>",
                        "```"
                    ]
                }
            },
            "textTop": {
                "comment": {
                    "shortText": [
                        "Set the position that defines if the text should be aligned above the progress line. By default is set to false.",
                        "```html",
                        "<igx-linear-bar type=\"danger\" [textTop]=\"true\"></igx-linear-bar>",
                        "```"
                    ]
                }
            },
            "text": {
                "comment": {
                    "shortText": [
                        "Set a custom text that is displayed according to the defined position.",
                        "```html",
                        "<igx-linear-bar type=\"warning\" [text]=\"'Custom text'\" [textAlign]=\"positionCenter\" [striped]=\"true\"></igx-linear-bar>",
                        "```"
                    ]
                }
            },
            "type": {
                "comment": {
                    "shortText": [
                        "Set type of the `IgxLinearProgressBarComponent`. Possible options - `default`, `success`, `info`, `warning`, and `danger`.",
                        "```html",
                        "<igx-linear-bar [striped]=\"false\" [max]=\"100\" [value]=\"0\" type=\"danger\"></igx-linear-bar>",
                        "```"
                    ]
                }
            },
            "onProgressChanged": {
                "comment": {
                    "shortText": [
                        "An event, which is triggered after a progress is changed.",
                        "```typescript",
                        "public progressChange(event) {",
                        "   alert(\"Progress made!\");",
                        "}",
                        "//...",
                        "```",
                        "```html",
                        "<igx-linear-bar (onProgressChanged)=\"progressChange($event)\" type=\"success\">",
                        "```"
                    ]
                }
            }
        },
        "methods": {},
        "accessors": {
            "animate": {
                "setter": {
                    "comment": {
                        "shortText": [
                            "Animation on progress `IgxLinearProgressBarComponent`. By default it is set to true.",
                            "```html",
                            "<igx-linear-bar [animate]=\"false\" [striped]=\"true\" [max]=\"200\" [value]=\"50\"></igx-linear-bar>",
                            "```"
                        ]
                    }
                },
                "getter": {
                    "comment": {
                        "shortText": [
                            "Returns whether the `IgxLinearProgressBarComponent` has animation true/false.",
                            "```typescript",
                            "@ViewChild(\"MyProgressBar\")",
                            "public progressBar: IgxLinearProgressBarComponent;",
                            "public animationStatus(event) {",
                            "   let animationStatus = this.progressBar.animate;",
                            "   alert(animationStatus);",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "max": {
                "setter": {
                    "comment": {
                        "shortText": [
                            "Set maximum value that can be passed. By default it is set to 100.",
                            "```html",
                            "<igx-linear-bar [striped]=\"false\" [max]=\"200\" [value]=\"0\"></igx-linear-bar>",
                            "```"
                        ]
                    }
                },
                "getter": {
                    "comment": {
                        "shortText": [
                            "Returns the the maximum progress value of the `IgxLinearProgressBarComponent`.",
                            "```typescript",
                            "@ViewChild(\"MyProgressBar\")",
                            "public progressBar: IgxLinearProgressBarComponent;",
                            "public maxValue(event) {",
                            "   let max = this.progressBar.max;",
                            "   alert(max);",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "step": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Returns the value which update the progress indicator of the `IgxLinearProgressBarComponent`.",
                            "```typescript",
                            "@ViewChild(\"MyProgressBar\")",
                            "public progressBar: IgxLinearProgressBarComponent;",
                            "public stepValue(event) {",
                            "   let step = this.progressBar.step;",
                            "   alert(step);",
                            "}",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "shortText": [
                            "Sets the value by which progress indicator is updated. By default it is 1% of the maximum value.",
                            "```html",
                            "<igx-linear-bar [striped]=\"false\" [max]=\"200\" [value]=\"0\" [step]=\"1\"></igx-linear-bar>",
                            "```"
                        ]
                    }
                }
            },
            "value": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Returns value that indicates the current `IgxLinearProgressBarComponent` position.",
                            "```typescript",
                            "@ViewChild(\"MyProgressBar\")",
                            "public progressBar: IgxLinearProgressBarComponent;",
                            "public getValue(event) {",
                            "   let value = this.progressBar.value;",
                            "   alert(value);",
                            "}",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "shortText": [
                            "Set value that indicates the current `IgxLinearProgressBarComponent` position.",
                            "```html",
                            "<igx-linear-bar [striped]=\"false\" [max]=\"200\" [value]=\"50\"></igx-linear-bar>",
                            "```"
                        ]
                    }
                }
            },
            "valueInPercent": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Returns the `IgxLinearProgressBarComponent`/`IgxCircularProgressBarComponent` value in percentage.",
                            "```typescript",
                            "@ViewChild(\"MyProgressBar\")",
                            "public progressBar: IgxLinearProgressBarComponent; // IgxCircularProgressBarComponent",
                            "public valuePercent(event){",
                            "   let percentValue = this.progressBar.valueInPercent;",
                            "   alert(percentValue);",
                            "}",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "shortText": [
                            "Sets the `IgxLinearProgressBarComponent`/`IgxCircularProgressBarComponent` value in percentage.",
                            "```typescript",
                            "@ViewChild(\"MyProgressBar\")",
                            "public progressBar: IgxLinearProgressBarComponent; // IgxCircularProgressBarComponent",
                            "   public setValue(event){",
                            "   this.progressBar.valueInPercent = 56;",
                            "}",
                            "//...",
                            "```",
                            "```html",
                            "<button igxButton=\"fab\" igxRipple=\"\" (click)=\"setValue()\">setValue</button>",
                            "```"
                        ]
                    }
                }
            }
        }
    }
}
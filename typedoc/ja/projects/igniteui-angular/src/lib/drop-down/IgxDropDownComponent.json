{
    "IgxDropDownComponent": {
        "comment": {
            "blockTags": [],
            "modifierTags": {},
            "summary": [
                {
                    "kind": "text",
                    "text": "**Ignite UI for Angular DropDown** -\n[Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/drop-down)\n\nThe Ignite UI for Angular Drop Down displays a scrollable list of items which may be visually grouped and\nsupports selection of a single item. Clicking or tapping an item selects it and closes the Drop Down\n\nExample:\n"
                },
                {
                    "kind": "code",
                    "text": "```html\n<igx-drop-down>\n  <igx-drop-down-item *ngFor=\"let item of items\" disabled={{item.disabled}} isHeader={{item.header}}>\n    {{ item.value }}\n  </igx-drop-down-item>\n</igx-drop-down>\n```"
                }
            ]
        },
        "properties": {
            "opening": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted before the dropdown is opened\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-drop-down (opening)='handleOpening($event)'></igx-drop-down>\n```"
                        }
                    ]
                }
            },
            "opened": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after the dropdown is opened\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-drop-down (opened)='handleOpened($event)'></igx-drop-down>\n```"
                        }
                    ]
                }
            },
            "closing": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted before the dropdown is closed\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-drop-down (closing)='handleClosing($event)'></igx-drop-down>\n```"
                        }
                    ]
                }
            },
            "closed": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after the dropdown is closed\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-drop-down (closed)='handleClosed($event)'></igx-drop-down>\n```"
                        }
                    ]
                }
            },
            "allowItemsFocus": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/sets whether items take focus. Disabled by default.\nWhen enabled, drop down items gain tab index and are focused when active -\nthis includes activating the selected item when opening the drop down and moving with keyboard navigation.\n\nNote: Keep that focus shift in mind when using the igxDropDownItemNavigation directive\nand ensure it's placed either on each focusable item or a common ancestor to allow it to handle keyboard events.\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// get\nlet dropDownAllowsItemFocus = this.dropdown.allowItemsFocus;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--set-->\n<igx-drop-down [allowItemsFocus]='true'></igx-drop-down>\n```"
                        }
                    ]
                }
            },
            "labelledBy": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@Input",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "property that set aria-labelledby attribute\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-drop-down [labelledby]=\"labelId\"></igx-drop-down>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "\n"
                        }
                    ]
                }
            },
            "selectionChanging": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when item selection is changing, before the selection completes\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-drop-down (selectionChanging)='handleSelection()'></igx-drop-down>\n```"
                        }
                    ]
                }
            },
            "width": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/Sets the width of the drop down\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// get\nlet myDropDownCurrentWidth = this.dropdown.width;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--set-->\n<igx-drop-down [width]='160px'></igx-drop-down>\n```"
                        }
                    ]
                }
            },
            "height": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/Sets the height of the drop down\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// get\nlet myDropDownCurrentHeight = this.dropdown.height;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--set-->\n<igx-drop-down [height]='400px'></igx-drop-down>\n```"
                        }
                    ]
                }
            },
            "maxHeight": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/Sets the drop down's container max height.\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// get\nlet maxHeight = this.dropdown.maxHeight;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--set-->\n<igx-drop-down [maxHeight]='200px'></igx-drop-down>\n```"
                        }
                    ]
                }
            }
        },
        "methods": {
            "open": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Opens the dropdown\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.dropdown.open();\n```"
                        }
                    ]
                }
            },
            "close": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Closes the dropdown\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.dropdown.close();\n```"
                        }
                    ]
                }
            },
            "toggle": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Toggles the dropdown\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.dropdown.toggle();\n```"
                        }
                    ]
                }
            },
            "setSelectedItem": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Select an item by index"
                        }
                    ]
                }
            },
            "navigateItem": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Navigates to the item on the specified index\nIf the data in the drop-down is virtualized, pass the index of the item in the virtualized data."
                        }
                    ]
                }
            },
            "onItemActionKey": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Keydown Handler"
                        }
                    ]
                }
            },
            "clearSelection": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Clears the selection of the dropdown\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.dropdown.clearSelection();\n```"
                        }
                    ]
                }
            }
        },
        "accessors": {
            "listId": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Id of the internal listbox of the drop down"
                            }
                        ]
                    }
                }
            },
            "selectedItem": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Get currently selected item\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nlet currentItem = this.dropdown.selectedItem;\n```"
                            }
                        ]
                    }
                }
            },
            "collapsed": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets if the dropdown is collapsed\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nlet isCollapsed = this.dropdown.collapsed;\n```"
                            }
                        ]
                    }
                }
            },
            "items": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Get all non-header items\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nlet myDropDownItems = this.dropdown.items;\n```"
                            }
                        ]
                    }
                }
            },
            "headers": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Get all header items\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nlet myDropDownHeaderItems = this.dropdown.headers;\n```"
                            }
                        ]
                    }
                }
            },
            "element": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Get dropdown html element\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nlet myDropDownElement = this.dropdown.element;\n```"
                            }
                        ]
                    }
                }
            },
            "displayDensity": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "コンポーネントのテーマを返します。\nデフォルト テーマは "
                            },
                            {
                                "kind": "code",
                                "text": "`comfortable`"
                            },
                            {
                                "kind": "text",
                                "text": "。\n利用可能なオプションは "
                            },
                            {
                                "kind": "code",
                                "text": "`comfortable`"
                            },
                            {
                                "kind": "text",
                                "text": "、"
                            },
                            {
                                "kind": "code",
                                "text": "`cosy`"
                            },
                            {
                                "kind": "text",
                                "text": "、"
                            },
                            {
                                "kind": "code",
                                "text": "`compact` です"
                            },
                            {
                                "kind": "text",
                                "text": "。\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nlet componentTheme = this.component.displayDensity;\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "コンポーネントのテーマを設定します。"
                            }
                        ]
                    }
                }
            }
        }
    }
}
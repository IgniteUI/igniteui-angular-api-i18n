{
    "IgxToastComponent": {
        "comment": {
            "tags": {},
            "text": [
                "The Ignite UI Toast provides information and warning messages that are non-interactive and cannot",
                "be dismissed by the user. Toasts can be displayed at the bottom, middle, or top of the page.",
                "Example:",
                "```html",
                "<button (click)=\"toast.open()\">Show notification</button>",
                "<igx-toast #toast displayTime=\"1000\">",
                "     Notification displayed",
                "</igx-toast>",
                "```"
            ],
            "shortText": [
                "**Ignite UI for Angular Toast** -",
                "[Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/toast)"
            ]
        },
        "properties": {
            "id": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Sets/gets the `id` of the toast.",
                        "If not set, the `id` will have value `\"igx-toast-0\"`.",
                        "```html",
                        "<igx-toast id = \"my-first-toast\"></igx-toast>",
                        "```",
                        "```typescript",
                        "let toastId = this.toast.id;",
                        "```"
                    ]
                }
            },
            "role": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxToastComponent",
                                "tagName": "memberof"
                            }
                        }
                    },
                    "shortText": [
                        "Sets/gets the `role` attribute.",
                        "If not set, `role` will have value `\"alert\"`.",
                        "```html",
                        "<igx-toast [role] = \"'notify'\"></igx-toast>",
                        "```",
                        "```typescript",
                        "let toastRole = this.toast.role;",
                        "```"
                    ]
                }
            },
            "position": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxToastComponent",
                                "tagName": "memberof"
                            }
                        }
                    },
                    "shortText": [
                        "Sets/gets the position of the toast.",
                        "If not set, the `position` attribute will have value `IgxToastPosition.Bottom`.",
                        "```html",
                        "<igx-toast [position]=\"top\"></igx-toast>",
                        "```",
                        "```typescript",
                        "let toastPosition = this.toast.position;",
                        "```"
                    ]
                }
            },
            "ariaLive": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Sets/gets the `aria-live` attribute.",
                        "If not set, `aria-live` will have value `\"polite\"`."
                    ]
                }
            },
            "autoHide": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Sets/gets whether the element will be hidden after the `displayTime` is over.",
                        "Default value is `true`."
                    ]
                }
            },
            "displayTime": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Sets/gets the duration of time span (in milliseconds) which the element will be visible",
                        "after it is being shown.",
                        "Default value is `4000`."
                    ]
                }
            },
            "outlet": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": " `outlet` is an instance of `IgxOverlayOutletDirective` or an `ElementRef`.",
                                "tagName": "remarks"
                            }
                        }
                    },
                    "shortText": "Gets/Sets the container used for the element."
                }
            },
            "opened": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "onToggleOpened(event) {",
                        "   alert(\"Toggle opened!\");",
                        "}",
                        "```",
                        "```html",
                        "<div",
                        "  igxToggle",
                        "  (onOpened)='onToggleOpened($event)'>",
                        "</div>",
                        "```"
                    ],
                    "shortText": "Emits an event after the toggle container is opened."
                }
            },
            "opening": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "onToggleOpening(event) {",
                        " alert(\"Toggle opening!\");",
                        "}",
                        "```",
                        "```html",
                        "<div",
                        "  igxToggle",
                        "  (onOpening)='onToggleOpening($event)'>",
                        "</div>",
                        "```"
                    ],
                    "shortText": "Emits an event before the toggle container is opened."
                }
            },
            "closed": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "onToggleClosed(event) {",
                        " alert(\"Toggle closed!\");",
                        "}",
                        "```",
                        "```html",
                        "<div",
                        "  igxToggle",
                        "  (onClosed)='onToggleClosed($event)'>",
                        "</div>",
                        "```"
                    ],
                    "shortText": "Emits an event after the toggle container is closed."
                }
            },
            "closing": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "onToggleClosing(event) {",
                        " alert(\"Toggle closing!\");",
                        "}",
                        "```",
                        "```html",
                        "<div",
                        " igxToggle",
                        " (closing)='onToggleClosing($event)'>",
                        "</div>",
                        "```"
                    ],
                    "shortText": "Emits an event before the toggle container is closed."
                }
            },
            "appended": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "onAppended() {",
                        " alert(\"Content appended!\");",
                        "}",
                        "```",
                        "```html",
                        "<div",
                        "  igxToggle",
                        "  (onAppended)='onToggleAppended()'>",
                        "</div>",
                        "```"
                    ],
                    "shortText": "Emits an event after the toggle element is appended to the overlay container."
                }
            }
        },
        "methods": {
            "open": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "this.toast.open();",
                        "```"
                    ],
                    "shortText": [
                        "Shows the toast.",
                        "If `autoHide` is enabled, the toast will hide after `displayTime` is over."
                    ]
                }
            },
            "toggle": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "this.toast.toggle();",
                        "```"
                    ],
                    "shortText": "Opens or closes the toast, depending on its current state."
                }
            },
            "close": {
                "comment": {
                    "tags": {},
                    "shortText": "Hides the element."
                }
            },
            "reposition": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Repositions the toggle.",
                        "```typescript",
                        "this.myToggle.reposition();",
                        "```"
                    ]
                }
            },
            "setOffset": {
                "comment": {
                    "tags": {},
                    "shortText": "Offsets the content along the corresponding axis by the provided amount"
                }
            }
        },
        "accessors": {
            "positionSettings": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Get the position and animation settings used by the toast.",
                            "```typescript",
                            "@ViewChild('toast', { static: true }) public toast: IgxToastComponent;",
                            "let currentPosition: PositionSettings = this.toast.positionSettings",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Set the position and animation settings used by the toast.",
                            "```html",
                            "<igx-toast [positionSettings]=\"newPositionSettings\"></igx-toast>",
                            "```",
                            "```typescript",
                            "import { slideInTop, slideOutBottom } from 'igniteui-angular';",
                            "...",
                            "@ViewChild('toast', { static: true }) public toast: IgxToastComponent;",
                            " public newPositionSettings: PositionSettings = {",
                            "     openAnimation: useAnimation(slideInTop, { params: { duration: '1000ms', fromPosition: 'translateY(100%)'}}),",
                            "     closeAnimation: useAnimation(slideOutBottom, { params: { duration: '1000ms', fromPosition: 'translateY(0)'}}),",
                            "     horizontalDirection: HorizontalAlignment.Left,",
                            "     verticalDirection: VerticalAlignment.Middle,",
                            "     horizontalStartPoint: HorizontalAlignment.Left,",
                            "     verticalStartPoint: VerticalAlignment.Middle",
                            " };",
                            "this.toast.positionSettings = this.newPositionSettings;",
                            "```"
                        ]
                    }
                }
            },
            "element": {
                "getter": {
                    "comment": {
                        "tags": {
                            "memberof": {
                                "comment": {
                                    "text": "IgxToastComponent",
                                    "tagName": "memberof"
                                }
                            }
                        },
                        "shortText": [
                            "Gets the nativeElement of the toast.",
                            "```typescript",
                            "let nativeElement = this.toast.element;",
                            "```"
                        ]
                    }
                }
            },
            "isVisible": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Enables/Disables the visibility of the element.",
                            "If not set, the `isVisible` attribute will have value `false`."
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Enables/Disables the visibility of the element.",
                            "If not set, the `isVisible` attribute will have value `false`."
                        ]
                    }
                }
            },
            "overlayId": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Returns the id of the overlay the content is rendered in.",
                            "```typescript",
                            "this.myToggle.overlayId;",
                            "```"
                        ]
                    }
                }
            }
        }
    }
}
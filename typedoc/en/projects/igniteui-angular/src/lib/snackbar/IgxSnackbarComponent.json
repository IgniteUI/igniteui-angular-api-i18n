{
    "IgxSnackbarComponent": {
        "comment": {
            "tags": {},
            "text": [
                "The Ignite UI Snack Bar provides feedback about an operation with a single-line message, which can",
                "include a link to an action such as Undo.",
                "Example:",
                "```html",
                "<button (click)=\"snackbar.show()\">Send message</button>",
                "<div>",
                "  <igx-snackbar #snackbar message=\"Message sent\">",
                "  </igx-snackbar>",
                "</div>",
                "```"
            ],
            "shortText": [
                "**Ignite UI for Angular Snackbar** -",
                "[Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/snackbar.html)"
            ]
        },
        "properties": {
            "id": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxSnackbarComponent",
                                "tagName": "memberof"
                            }
                        }
                    },
                    "shortText": [
                        "Sets/gets the `id` of the snackbar.",
                        "If not set, the `id` of the first snackbar component  will be `\"igx-snackbar-0\"`;",
                        "```html",
                        "<igx-snackbar id = \"Snackbar1\"></igx-snackbar>",
                        "```",
                        "```typescript",
                        "let snackbarId = this.snackbar.id;",
                        "```"
                    ]
                }
            },
            "ariaLive": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxSnackbarComponent",
                                "tagName": "memberof"
                            }
                        }
                    },
                    "shortText": [
                        "Sets/gets the `aria-live` attr of the snackbar message container.",
                        "If not set, the `aria-live` will be `polite`;",
                        "```html",
                        "<igx-snackbar [ariaLive]=\"'polite'\"></igx-snackbar>",
                        "```",
                        "```typescript",
                        "let snackbarAriaLive = this.snackbar.ariaLive;",
                        "```"
                    ]
                }
            },
            "isVisible": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Enables/Disables the visibility of the snackbar.",
                        "If not set, the `isVisible` attribute will have value `false`.",
                        "```html",
                        "<igx-snackbar [isVisible] = \"true\"></igx-snackbar>",
                        "```",
                        "```typescript",
                        "let isVisible =  this.snackbar.isVisible;",
                        "```"
                    ]
                }
            },
            "autoHide": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Sets/gets if the snackbar will be automatically hidden after the `displayTime` is over.",
                        "Default value is `true`.",
                        "```html",
                        "<igx-snackbar [autoHide] = \"false\"></igx-snackbar>",
                        "```",
                        "```typescript",
                        "let autoHide =  this.snackbar.autoHide;",
                        "```"
                    ]
                }
            },
            "displayTime": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Sets/gets the duration of time(in milliseconds) in which the snackbar will be visible after it is being shown.",
                        "Default value is 4000.",
                        "```html",
                        "<igx-snackbar [displayTime] = \"2000\"></igx-snackbar>",
                        "```",
                        "```typescript",
                        "let displayTime = this.snackbar.displayTime;",
                        "```"
                    ]
                }
            },
            "actionText": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Sets/gets the `actionText` attribute.",
                        "```html",
                        "<igx-snackbar [actionText] = \"'Action Text'\"></igx-snackbar>",
                        "```"
                    ]
                }
            },
            "clicked": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "An event that will be emitted when the action button is clicked.",
                        "Provides reference to the `IgxSnackbarComponent` as an argument.",
                        "```html",
                        "<igx-snackbar (clicked)=\"clickedHandler($event)\"></igx-snackbar>",
                        "```"
                    ]
                }
            },
            "animationStarted": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "An event that will be emitted when the snackbar animation starts.",
                        "Provides reference to the `AnimationEvent` interface as an argument.",
                        "```html",
                        "<igx-snackbar (animationStarted) = \"animationStarted($event)\"></igx-snackbar>",
                        "```"
                    ]
                }
            },
            "animationDone": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "An event that will be emitted when the snackbar animation ends.",
                        "Provides reference to the `AnimationEvent` interface as an argument.",
                        "```html",
                        "<igx-snackbar (animationDone) = \"animationDone($event)\"></igx-snackbar>",
                        "```"
                    ]
                }
            }
        },
        "methods": {
            "open": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Shows the snackbar and hides it after the `displayTime` is over if `autoHide` is set to `true`.",
                        "```typescript",
                        "this.snackbar.open();",
                        "```"
                    ]
                }
            },
            "close": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Hides the snackbar.",
                        "```typescript",
                        "this.snackbar.close();",
                        "```"
                    ]
                }
            }
        },
        "accessors": {
            "message": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Sets/gets the `message` attribute.",
                            "```html",
                            "<igx-snackbar [message] = \"'Snackbar Component'\"></igx-snackbar>",
                            "```",
                            "```typescript",
                            "let message =  this.snackbar.message;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Sets/gets the `message` attribute.",
                            "```html",
                            "<igx-snackbar [message] = \"'Snackbar Component'\"></igx-snackbar>",
                            "```",
                            "```typescript",
                            "let message =  this.snackbar.message;",
                            "```"
                        ]
                    }
                }
            }
        }
    }
}
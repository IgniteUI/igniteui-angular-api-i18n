{
    "TransactionService": {
        "properties": {
            "enabled": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns whether transaction is enabled for this service"
                        }
                    ]
                }
            },
            "cloneStrategy": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/Sets the data clone strategy used to clone data"
                        }
                    ]
                }
            },
            "onStateUpdate": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Event fired when transaction state has changed - add transaction, commit all transactions, undo and redo"
                        }
                    ]
                }
            },
            "canUndo": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "if there are any transactions in the Undo stack"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": []
                }
            },
            "canRedo": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "if there are any transactions in the Redo stack"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": []
                }
            }
        },
        "methods": {
            "add": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Adds provided  transaction with recordRef if any"
                        }
                    ]
                }
            },
            "getTransactionLog": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "All transaction in the service or for the specified record"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns all recorded transactions in chronological order"
                        }
                    ]
                }
            },
            "undo": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Remove the last transaction if any"
                        }
                    ]
                }
            },
            "redo": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Applies the last undone transaction if any"
                        }
                    ]
                }
            },
            "getAggregatedChanges": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Collection of aggregated transactions for each changed record"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns aggregated changes from all transactions"
                        }
                    ]
                }
            },
            "getState": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "State of the record if any"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns the state of the record with provided id"
                        }
                    ]
                }
            },
            "getAggregatedValue": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Value with changes or **null**"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns value of the required id including all uncommitted changes"
                        }
                    ]
                }
            },
            "commit": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Applies all transactions over the provided data"
                        }
                    ]
                }
            },
            "clear": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Clears all transactions"
                        }
                    ]
                }
            },
            "startPending": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Starts pending transactions. All transactions passed after call to startPending\nwill not be added to transaction log"
                        }
                    ]
                }
            },
            "endPending": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Clears all pending transactions and aggregated pending state. If commit is set to true\ncommits pending states as single transaction"
                        }
                    ]
                }
            }
        }
    }
}
{
    "IgxLinearProgressBarComponent": {
        "properties": {
            "striped": {
                "comment": {
                    "shortText": [
                        "`IgxLinearProgressBarComponent` をストライプ スタイルに設定します。デフォルトの設定は false です。",
                        "```html",
                        "<igx-linear-bar [striped]=\"true\" [max]=\"200\" [value]=\"50\"></igx-linear-bar>",
                        "```"
                    ]
                }
            },
            "id": {
                "comment": {
                    "shortText": [
                        "`id` 属性の値を設定する @Input プロパティ。提供されていない場合、自動的に生成されます。",
                        "```html",
                        "<igx-linear-bar [id]=\"'igx-linear-bar-55'\" [striped]=\"true\" [max]=\"200\" [value]=\"50\"></igx-linear-bar>",
                        "```"
                    ]
                }
            },
            "indeterminate": {
                "comment": {
                    "shortText": [
                        "`IgxLinearProgressBarComponent` に indeterminate を設定します。デフォルトの設定は false です。",
                        "```html",
                        "<igx-linear-bar [indeterminate]=\"true\"></igx-linear-bar>",
                        "```"
                    ]
                }
            },
            "role": {
                "comment": {
                    "shortText": [
                        "`role` 属性の値を設定する @Input プロパティ。指定しない場合は、自動的に `progressbar` に設定されます。",
                        "```html",
                        "<igx-linear-bar role=\"progressbar\"></igx-linear-bar>",
                        "```"
                    ]
                }
            },
            "textAlign": {
                "comment": {
                    "shortText": [
                        "テキスト配置を定義する位置を設定します。",
                        "オプションは `IgxTextAlign.START` (デフォルト値)、`IgxTextAlign.CENTER`、および `IgxTextAlign.END` です。",
                        "```typescript",
                        "public positionCenter: IgxTextAlign;",
                        "public ngOnInit() {",
                        "   this.positionCenter = IgxTextAlign.CENTER;",
                        "}",
                        "//...",
                        "```",
                        "```html",
                        "<igx-linear-bar type=\"warning\" [text]=\"'Custom text'\" [textAlign]=\"positionCenter\" [striped]=\"true\"></igx-linear-bar>",
                        "```"
                    ]
                }
            },
            "textVisibility": {
                "comment": {
                    "shortText": [
                        "テキストを表示するかどうかを設定します。デフォルトで true に設定されます。",
                        "```html",
                        "<igx-linear-bar type=\"default\" [textVisibility]=\"false\"></igx-linear-bar>",
                        "```"
                    ]
                }
            },
            "textTop": {
                "comment": {
                    "shortText": [
                        "テキストをイナズマ線の上に配置するかどうかを定義する位置を設定します。デフォルトで false に設定されます。",
                        "```html",
                        "<igx-linear-bar type=\"danger\" [textTop]=\"true\"></igx-linear-bar>",
                        "```"
                    ]
                }
            },
            "text": {
                "comment": {
                    "shortText": [
                        "定義された位置に基づいて表示されるカスタム テキストを設定します。",
                        "```html",
                        "<igx-linear-bar type=\"warning\" [text]=\"'Custom text'\" [textAlign]=\"positionCenter\" [striped]=\"true\"></igx-linear-bar>",
                        "```"
                    ]
                }
            },
            "type": {
                "comment": {
                    "shortText": [
                        "`IgxLinearProgressBarComponent` のタイプを設定します。オプションは `default`、`success`、`info`、`warning`、または `danger` です。",
                        "```html",
                        "<igx-linear-bar [striped]=\"false\" [max]=\"100\" [value]=\"0\" type=\"danger\"></igx-linear-bar>",
                        "```"
                    ]
                }
            },
            "onProgressChanged": {
                "comment": {
                    "shortText": [
                        "進行状況が変更された後にトリガーするイベント。",
                        "```typescript",
                        "public progressChange(event) {",
                        "   alert(\"Progress made!\");",
                        "}",
                        "//...",
                        "```",
                        "```html",
                        "<igx-linear-bar (onProgressChanged)=\"progressChange($event)\" type=\"success\">",
                        "```"
                    ]
                }
            }
        },
        "methods": {},
        "accessors": {
            "animate": {
                "setter": {
                    "comment": {
                        "shortText": [
                            "`IgxLinearProgressBarComponent` に進行状況でアニメーションを再生します。デフォルトで true に設定されます。",
                            "```html",
                            "<igx-linear-bar [animate]=\"false\" [striped]=\"true\" [max]=\"200\" [value]=\"50\"></igx-linear-bar>",
                            "```"
                        ]
                    }
                },
                "getter": {
                    "comment": {
                        "shortText": [
                            "`IgxLinearProgressBarComponent` にアニメーションがあるかどうかを true/false として返します。",
                            "```typescript",
                            "@ViewChild(\"MyProgressBar\")",
                            "public progressBar: IgxLinearProgressBarComponent;",
                            "public animationStatus(event) {",
                            "   let animationStatus = this.progressBar.animate;",
                            "   alert(animationStatus);",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "max": {
                "setter": {
                    "comment": {
                        "shortText": [
                            "渡すことができる最大値を設定します。デフォルトで 100 に設定されます。",
                            "```html",
                            "<igx-linear-bar [striped]=\"false\" [max]=\"200\" [value]=\"0\"></igx-linear-bar>",
                            "```"
                        ]
                    }
                },
                "getter": {
                    "comment": {
                        "shortText": [
                            "`IgxLinearProgressBarComponent` の最大進行状況値を返します。",
                            "```typescript",
                            "@ViewChild(\"MyProgressBar\")",
                            "public progressBar: IgxLinearProgressBarComponent;",
                            "public maxValue(event) {",
                            "   let max = this.progressBar.max;",
                            "   alert(max);",
                            "}",
                            "```"
                        ]
                    }
                }
            },
            "step": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "`IgxLinearProgressBarComponent` の進行状況インジケーターを更新する値を返します。",
                            "```typescript",
                            "@ViewChild(\"MyProgressBar\")",
                            "public progressBar: IgxLinearProgressBarComponent;",
                            "public stepValue(event) {",
                            "   let step = this.progressBar.step;",
                            "   alert(step);",
                            "}",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "shortText": [
                            "進行状況インジケーターの更新量の値を設定します。デフォルト値は最大値の 1% です。",
                            "```html",
                            "<igx-linear-bar [striped]=\"false\" [max]=\"200\" [value]=\"0\" [step]=\"1\"></igx-linear-bar>",
                            "```"
                        ]
                    }
                }
            },
            "value": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "現在の `IgxLinearProgressBarComponent` 位置を示す値を返します。",
                            "```typescript",
                            "@ViewChild(\"MyProgressBar\")",
                            "public progressBar: IgxLinearProgressBarComponent;",
                            "public getValue(event) {",
                            "   let value = this.progressBar.value;",
                            "   alert(value);",
                            "}",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "shortText": [
                            "現在の `IgxLinearProgressBarComponent` 位置を示す値を設定します。",
                            "```html",
                            "<igx-linear-bar [striped]=\"false\" [max]=\"200\" [value]=\"50\"></igx-linear-bar>",
                            "```"
                        ]
                    }
                }
            },
            "valueInPercent": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "`IgxLinearProgressBarComponent`/`IgxCircularProgressBarComponent` 値をパーセンテージで返します。",
                            "```typescript",
                            "@ViewChild(\"MyProgressBar\")",
                            "public progressBar: IgxLinearProgressBarComponent; // IgxCircularProgressBarComponent",
                            "public valuePercent(event){",
                            "   let percentValue = this.progressBar.valueInPercent;",
                            "   alert(percentValue);",
                            "}",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "shortText": [
                            "`IgxLinearProgressBarComponent`/`IgxCircularProgressBarComponent` 値をパーセンテージで設定します。",
                            "```typescript",
                            "@ViewChild(\"MyProgressBar\")",
                            "public progressBar: IgxLinearProgressBarComponent; // IgxCircularProgressBarComponent",
                            "   public setValue(event){",
                            "   this.progressBar.valueInPercent = 56;",
                            "}",
                            "//...",
                            "```",
                            "```html",
                            "<button igxButton=\"fab\" igxRipple=\"\" (click)=\"setValue()\">setValue</button>",
                            "```"
                        ]
                    }
                }
            }
        }
    }
}

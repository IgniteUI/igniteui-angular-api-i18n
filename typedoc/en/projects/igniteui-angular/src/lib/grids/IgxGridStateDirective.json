{
    "IgxGridStateDirective": {
        "properties": {
            "stateParsed": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Event emitted when set state is called with a string.\nReturns the parsed state object so that it can be further modified before applying to the grid.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.state.stateParsed.subscribe(parsedState => parsedState.sorting.forEach(x => x.strategy = NoopSortingStrategy.instance()});\n```"
                        }
                    ]
                }
            }
        },
        "methods": {
            "getState": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the serialized to JSON string IGridState object, or the non-serialized IGridState object.\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid [igxGridState]=\"options\"></igx-grid>\n```"
                                },
                                {
                                    "kind": "text",
                                    "text": "\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```typescript\n@ViewChild(IgxGridStateDirective, { static: true }) public state;\nlet state = this.state.getState(); // returns string\nlet state = this.state(false) // returns `IGridState` object\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets the state of a feature or states of all grid features, unless a certain feature is disabled through the "
                        },
                        {
                            "kind": "code",
                            "text": "`options`"
                        },
                        {
                            "kind": "text",
                            "text": " property."
                        }
                    ]
                }
            },
            "setState": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid [igxGridState]=\"options\"></igx-grid>\n```"
                                },
                                {
                                    "kind": "text",
                                    "text": "\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```typescript\n@ViewChild(IgxGridStateDirective, { static: true }) public state;\nthis.state.setState(gridState);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Restores grid features' state based on the IGridState object passed as an argument."
                        }
                    ]
                }
            }
        },
        "accessors": {
            "options": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "An object with options determining if a certain feature state should be saved.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<igx-grid [igxGridState]=\"options\"></igx-grid>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\npublic options = {selection: false, advancedFiltering: false};\n```"
                            }
                        ]
                    }
                }
            }
        }
    }
}
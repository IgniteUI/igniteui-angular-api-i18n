{
    "HammerGesturesManager": {
        "comment": {
            "shortText": [
                "Touch gestures manager based on Hammer.js",
                "Use with caution, this will track references for single manager per element. Very TBD. Much TODO."
            ]
        },
        "properties": {},
        "methods": {
            "addEventListener": {
                "comment": {
                    "shortText": [
                        "Add listener extended with options for Hammer.js. Will use defaults if none are provided.",
                        "Modeling after other event plugins for easy future modifications."
                    ]
                }
            },
            "addGlobalEventListener": {
                "comment": {
                    "shortText": [
                        "Add listener extended with options for Hammer.js. Will use defaults if none are provided.",
                        "Modeling after other event plugins for easy future modifications."
                    ]
                }
            },
            "getGlobalEventTarget": {
                "comment": {
                    "shortText": [
                        "Exposes [Dom]Adapter.getGlobalEventTarget to get global event targets.",
                        "Supported: window, document, body. Defaults to document for invalid args."
                    ]
                }
            },
            "setManagerOption": {
                "comment": {
                    "shortText": "Set HammerManager options."
                }
            },
            "addManagerForElement": {
                "comment": {
                    "shortText": "Add an element and manager map to the internal collection."
                }
            },
            "getManagerForElement": {
                "comment": {
                    "shortText": "Get HammerManager for the element or null"
                }
            },
            "removeManagerForElement": {
                "comment": {
                    "shortText": "Destroys the HammerManager for the element, removing event listeners in the process."
                }
            },
            "destroy": {
                "comment": {
                    "shortText": "Destroys all internally tracked HammerManagers, removing event listeners in the process."
                }
            }
        },
        "accessors": {}
    }
}
{
    "IgxSplitterPaneComponent": {
        "comment": {
            "tags": {
                "igxmodule": {
                    "comment": {
                        "text": "IgxSplitterModule",
                        "tagName": "igxmodule"
                    }
                },
                "igxparent": {
                    "comment": {
                        "text": "IgxSplitterComponent",
                        "tagName": "igxparent"
                    }
                },
                "igxkeywords": {
                    "comment": {
                        "text": "pane",
                        "tagName": "igxkeywords"
                    }
                },
                "igxgroup": {
                    "comment": {
                        "text": "presentation",
                        "tagName": "igxgroup"
                    }
                },
                "remarks": {
                    "comment": {
                        "text": " Users can control the resize behavior via the min and max size properties.",
                        "tagName": "remarks"
                    }
                }
            },
            "shortText": "Represents individual resizable/collapsible panes."
        },
        "properties": {
            "minSize": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-splitter>",
                                    " <igx-splitter-pane [minSize]='minSize'>...</igx-splitter-pane>",
                                    "</igx-splitter>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Gets/Sets the minimum allowed size of the current pane."
                }
            },
            "maxSize": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-splitter>",
                                    " <igx-splitter-pane [maxSize]='maxSize'>...</igx-splitter-pane>",
                                    "</igx-splitter>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Gets/Set the maximum allowed size of the current pane."
                }
            },
            "resizable": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-splitter>",
                                    " <igx-splitter-pane [resizable]='false'>...</igx-splitter-pane>",
                                    "</igx-splitter>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        },
                        "remarks": {
                            "comment": {
                                "text": "If pane is not resizable its related splitter bar cannot be dragged.",
                                "tagName": "remarks"
                            }
                        }
                    },
                    "shortText": "Gets/Sets whether pane is resizable."
                }
            },
            "onToggle": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-splitter>",
                                    " <igx-splitter-pane (onToggle)='onPaneToggle($event)'>...</igx-splitter-pane>",
                                    "</igx-splitter>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Event fired when collapsed state of pane is changed."
                }
            },
            "collapsedChange": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-splitter>",
                                    " <igx-splitter-pane (collapsedChange)='paneCollapsedChange($event)'>...</igx-splitter-pane>",
                                    "</igx-splitter>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Event fired when collapsed state of pane is changed."
                }
            }
        },
        "methods": {
            "toggle": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "pane.toggle();",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Toggles the collapsed state of the pane."
                }
            }
        },
        "accessors": {
            "size": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets/Sets the size of the current pane.",
                            " * @example",
                            "```html",
                            "<igx-splitter>",
                            " <igx-splitter-pane [size]='size'>...</igx-splitter-pane>",
                            "</igx-splitter>",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "shortText": [
                            "Gets/Sets the size of the current pane.",
                            " * @example",
                            "```html",
                            "<igx-splitter>",
                            " <igx-splitter-pane [size]='size'>...</igx-splitter-pane>",
                            "</igx-splitter>",
                            "```"
                        ]
                    }
                }
            },
            "collapsed": {
                "setter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const isCollapsed = pane.collapsed;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets whether current pane is collapsed."
                    }
                },
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const isCollapsed = pane.collapsed;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets whether current pane is collapsed."
                    }
                }
            }
        }
    }
}
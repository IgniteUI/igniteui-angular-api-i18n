{
    "IgxHierarchicalGridRow": {
        "properties": {},
        "methods": {
            "pin": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "// グリッドから選択した行をピン固定します。",
                        "this.grid.selectedRows[0].pin();",
                        "```"
                    ],
                    "shortText": [
                        "指定された行をピン固定します。",
                        "このメソッドは `onRowPinning` イベントを発生します。"
                    ]
                }
            },
            "unpin": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "// グリッドから選択した行をピン固定解除します。",
                        "this.grid.selectedRows[0].unpin();",
                        "```"
                    ],
                    "shortText": [
                        "指定された行のピン固定を解除します。",
                        "このメソッドは `onRowPinning` イベントを発生します。"
                    ]
                }
            },
            "update": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "// 2 番目に選択された行の値を更新します。",
                        "let newValue = \"Apple\";",
                        "this.grid.selectedRows[1].update(newValue);",
                        "```"
                    ],
                    "shortText": "指定した行オブジェクトおよびデータ ソース レコードを渡された値で更新します。"
                }
            },
            "delete": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "// グリッドで 3 番目に選択された行を削除します。",
                        "this.grid.selectedRows[2].delete();",
                        "```"
                    ],
                    "shortText": [
                        "グリッドのデータソースから指定した行を削除します。",
                        "このメソッドは `onRowDeleted` イベントを発生します。"
                    ]
                }
            }
        },
        "accessors": {
            "hasChildren": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "行が存在する場合、true を返します。"
                    }
                }
            },
            "viewIndex": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "グリッド ページごとに計算されたビュー インデックスを返します。"
                    }
                }
            },
            "cells": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "行コンポーネントで描画されるセルを取得します。"
                    }
                }
            },
            "key": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "text": [
                            "```typescript",
                            "let rowKey = row.key;",
                            "```"
                        ],
                        "shortText": [
                            "行キーを取得します。",
                            "グリッドの行は、次のいずれかの方法で識別されます:",
                            "- primaryKey の値、",
                            "- primaryKey が省略された場合、rowData 全体。"
                        ]
                    }
                }
            },
            "addRowUI": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "text": [
                            "```typescript",
                            "let isAddRow = row.addRowUI;",
                            "```"
                        ],
                        "shortText": "行追加 UI を表すかどうかを取得します。"
                    }
                }
            },
            "validation": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "検証状態とエラーを取得します (存在する場合)。",
                            "```typescript",
                            "let validation = row.validation;",
                            "let errors = validation.errors;",
                            "```"
                        ]
                    }
                }
            },
            "data": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "text": [
                            "```typescript",
                            "let rowData = row.data;",
                            "```"
                        ],
                        "shortText": "行を生成するデータ レコード。"
                    }
                }
            },
            "inEditMode": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "行が現在編集モードかどうかを返します。"
                    }
                }
            },
            "pinned": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "行がピン固定されるかどうかを取得します。",
                            "デフォルト値は `false` です。",
                            "```typescript",
                            "const isPinned = row.pinned;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "行がピン固定されるかどうかを設定します。",
                            "デフォルト値は `false` です。",
                            "```typescript",
                            "row.pinned = !row.pinned;",
                            "```"
                        ]
                    }
                }
            },
            "expanded": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "text": [
                            "```typescript",
                            "const isExpanded = row.expanded;",
                            "```"
                        ],
                        "shortText": "行の展開/縮小状態を取得します。"
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "text": [
                            "```typescript",
                            "row.expanded = true;",
                            "```"
                        ],
                        "shortText": "行を展開/縮小します。"
                    }
                }
            },
            "selected": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "行が選択されているかどうかを取得します。",
                            "デフォルト値は `false` です。",
                            "```typescript",
                            "row.selected = true;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "行が選択されているかどうかを設定します。",
                            "デフォルト値は `false` です。",
                            "```typescript",
                            "row.selected = !row.selected;",
                            "```"
                        ]
                    }
                }
            },
            "deleted": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "行が削除状態かどうかを返します。"
                    }
                }
            }
        }
    }
}
{
    "IgxTreeGridComponent": {
        "comment": {
            "tags": {},
            "text": [
                "The Ignite UI Tree Grid displays and manipulates hierarchical data with consistent schema formatted as a table and",
                "provides features such as sorting, filtering, editing, column pinning, paging, column moving and hiding.",
                "Example:",
                "```html",
                "<igx-tree-grid [data]=\"employeeData\" primaryKey=\"employeeID\" foreignKey=\"PID\" [autoGenerate]=\"false\">",
                "  <igx-column field=\"first\" header=\"First Name\"></igx-column>",
                "  <igx-column field=\"last\" header=\"Last Name\"></igx-column>",
                "  <igx-column field=\"role\" header=\"Role\"></igx-column>",
                "</igx-tree-grid>",
                "```"
            ],
            "shortText": [
                "**Ignite UI for Angular Tree Grid** -",
                "[Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/grid/grid)"
            ]
        },
        "properties": {
            "childDataKey": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxTreeGridComponent",
                                "tagName": "memberof"
                            }
                        }
                    },
                    "shortText": [
                        "An @Input property that sets the child data key of the `IgxTreeGridComponent`.",
                        "```html",
                        "<igx-tree-grid #grid [data]=\"employeeData\" [childDataKey]=\"'employees'\" [autoGenerate]=\"true\"></igx-tree-grid>",
                        "```"
                    ]
                }
            },
            "foreignKey": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxTreeGridComponent",
                                "tagName": "memberof"
                            }
                        }
                    },
                    "shortText": [
                        "An @Input property that sets the foreign key of the `IgxTreeGridComponent`.",
                        "```html",
                        "<igx-tree-grid #grid [data]=\"employeeData\" [primaryKey]=\"'employeeID'\" [foreignKey]=\"'parentID'\" [autoGenerate]=\"true\">",
                        "</igx-tree-grid>",
                        "```"
                    ]
                }
            },
            "hasChildrenKey": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxTreeGridComponent",
                                "tagName": "memberof"
                            }
                        }
                    },
                    "shortText": [
                        "An @Input property that sets the key indicating whether a row has children.",
                        "This property is only used for load on demand scenarios.",
                        "```html",
                        "<igx-tree-grid #grid [data]=\"employeeData\" [primaryKey]=\"'employeeID'\" [foreignKey]=\"'parentID'\"",
                        "               [loadChildrenOnDemand]=\"loadChildren\"",
                        "               [hasChildrenKey]=\"'hasEmployees'\">",
                        "</igx-tree-grid>",
                        "```"
                    ]
                }
            },
            "cascadeOnDelete": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxTreeGridComponent",
                                "tagName": "memberof"
                            }
                        }
                    },
                    "shortText": [
                        "An @Input property indicating whether child records should be deleted when their parent gets deleted.",
                        "By default it is set to true and deletes all children along with the parent.",
                        "```html",
                        "<igx-tree-grid [data]=\"employeeData\" [primaryKey]=\"'employeeID'\" [foreignKey]=\"'parentID'\" cascadeOnDelete=\"false\">",
                        "</igx-tree-grid>",
                        "```"
                    ]
                }
            },
            "id": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxTreeGridComponent",
                                "tagName": "memberof"
                            }
                        }
                    },
                    "shortText": [
                        "An @Input property that sets the value of the `id` attribute. If not provided it will be automatically generated.",
                        "```html",
                        "<igx-tree-grid [id]=\"'igx-tree-grid-1'\"></igx-tree-grid>",
                        "```"
                    ]
                }
            },
            "rootRecords": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxTreeGridComponent",
                                "tagName": "memberof"
                            }
                        }
                    },
                    "shortText": [
                        "Returns an array of the root level `ITreeGridRecord`s.",
                        "```typescript",
                        "// gets the root record with index=2",
                        "const states = this.grid.rootRecords[2];",
                        "```"
                    ]
                }
            },
            "records": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxTreeGridComponent",
                                "tagName": "memberof"
                            }
                        }
                    },
                    "shortText": [
                        "Returns a map of all `ITreeGridRecord`s.",
                        "```typescript",
                        "// gets the record with primaryKey=2",
                        "const states = this.grid.records.get(2);",
                        "```"
                    ]
                }
            },
            "processedRootRecords": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxTreeGridComponent",
                                "tagName": "memberof"
                            }
                        }
                    },
                    "shortText": [
                        "Returns an array of processed (filtered and sorted) root `ITreeGridRecord`s.",
                        "```typescript",
                        "// gets the processed root record with index=2",
                        "const states = this.grid.processedRootRecords[2];",
                        "```"
                    ]
                }
            },
            "processedRecords": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxTreeGridComponent",
                                "tagName": "memberof"
                            }
                        }
                    },
                    "shortText": [
                        "Returns a map of all processed (filtered and sorted) `ITreeGridRecord`s.",
                        "```typescript",
                        "// gets the processed record with primaryKey=2",
                        "const states = this.grid.processedRecords.get(2);",
                        "```"
                    ]
                }
            },
            "snackbarDisplayTime": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "By default it is 6000ms.",
                                "tagName": "remarks"
                            }
                        }
                    },
                    "shortText": "Gets/Sets the display time for the row adding snackbar notification."
                }
            },
            "autoGenerate": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "The default value is false. When set to true, it will override all columns declared through code or in markup.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid [data]=\"Data\" [autoGenerate]=\"true\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Gets/Sets whether to autogenerate the columns."
                }
            },
            "emptyGridTemplate": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid [id]=\"'igx-grid-1'\" [data]=\"Data\" [emptyGridTemplate]=\"myTemplate\" [autoGenerate]=\"true\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Gets/Sets a custom template when empty."
                }
            },
            "addRowEmptyTemplate": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid [id]=\"'igx-grid-1'\" [data]=\"Data\" [addRowEmptyTemplate]=\"myTemplate\" [autoGenerate]=\"true\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Gets/Sets a custom template for adding row UI when grid is empty."
                }
            },
            "loadingGridTemplate": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid [id]=\"'igx-grid-1'\" [data]=\"Data\" [loadingGridTemplate]=\"myTemplate\" [autoGenerate]=\"true\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Gets/Sets a custom template when loading."
                }
            },
            "clipboardOptions": {
                "comment": {
                    "tags": {},
                    "shortText": "Controls the copy behavior of the grid."
                }
            },
            "enabled": {
                "comment": {
                    "tags": {},
                    "shortText": "Enables/disables the copy behavior"
                }
            },
            "copyHeaders": {
                "comment": {
                    "tags": {},
                    "shortText": "Include the columns headers in the clipboard output."
                }
            },
            "copyFormatters": {
                "comment": {
                    "tags": {},
                    "shortText": "Apply the columns formatters (if any) on the data in the clipboard output."
                }
            },
            "separator": {
                "comment": {
                    "tags": {},
                    "shortText": "The separator used for formatting the copy output. Defaults to `\\t`."
                }
            },
            "filteringExpressionsTreeChange": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Returns the filtering expressions tree of the column for which filtering was performed.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\"",
                                    "             (filteringExpressionsTreeChange)=\"filteringExprTreeChange($event)\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted after filtering is performed."
                }
            },
            "advancedFilteringExpressionsTreeChange": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Returns the advanced filtering expressions tree.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\"",
                                    "          (advancedFilteringExpressionsTreeChange)=\"advancedFilteringExprTreeChange($event)\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted after advanced filtering is performed."
                }
            },
            "gridScroll": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\"",
                                    "             (gridScroll)=\"onScroll($event)\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when grid is scrolled horizontally/vertically."
                }
            },
            "pageChange": {
                "comment": {
                    "tags": {
                        "deprecated": {
                            "comment": {
                                "text": [
                                    "in version 12.1.0. Use the corresponding output exposed by the `igx-paginator` component instead",
                                    "Emitted after the current page is changed."
                                ],
                                "tagName": "deprecated"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid (pageChange)=\"onPageChange($event)\"></igx-grid>",
                                    "```",
                                    "```typescript",
                                    "public onPageChange(page: number) {",
                                    "  this.currentPage = page;",
                                    "}",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    }
                }
            },
            "perPageChange": {
                "comment": {
                    "tags": {
                        "deprecated": {
                            "comment": {
                                "text": [
                                    "in version 12.1.0. Use the corresponding output exposed by the `igx-paginator` component instead",
                                    "Emitted when `perPage` property value of the grid is changed.",
                                    "```html",
                                    "<igx-grid #grid (perPageChange)=\"onPerPageChange($event)\" [autoGenerate]=\"true\"></igx-grid>",
                                    "```",
                                    "```typescript",
                                    "public onPerPageChange(perPage: number) {",
                                    "  this.perPage = perPage;",
                                    "}",
                                    "```"
                                ],
                                "tagName": "deprecated"
                            }
                        }
                    }
                }
            },
            "evenRowCSS": {
                "comment": {
                    "tags": {
                        "deprecated": {
                            "comment": {
                                "text": [
                                    "in version 12.2.0. We suggest using `rowClasses` property instead",
                                    "Gets/Sets the styling classes applied to all even `IgxGridRowComponent`s in the grid."
                                ],
                                "tagName": "deprecated"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid [data]=\"Data\" [evenRowCSS]=\"'igx-grid--my-even-class'\" [autoGenerate]=\"true\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    }
                }
            },
            "oddRowCSS": {
                "comment": {
                    "tags": {
                        "deprecated": {
                            "comment": {
                                "text": [
                                    "in version 12.2.0. We suggest using `rowClasses` property instead",
                                    "Gets/Sets the styling classes applied to all odd `IgxGridRowComponent`s in the grid."
                                ],
                                "tagName": "deprecated"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid [data]=\"Data\" [evenRowCSS]=\"'igx-grid--my-odd-class'\" [autoGenerate]=\"true\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    }
                }
            },
            "rowClasses": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxColumnComponent",
                                "tagName": "memberof"
                            }
                        }
                    },
                    "shortText": [
                        "Sets a conditional class selector to the grid's row element.",
                        "Accepts an object literal, containing key-value pairs,",
                        "where the key is the name of the CSS class and the value is",
                        "either a callback function that returns a boolean, or boolean, like so:",
                        "```typescript",
                        "callback = (row: RowType) => { return row.selected > 6; }",
                        "rowClasses = { 'className' : this.callback };",
                        "```",
                        "```html",
                        "<igx-grid #grid [data]=\"Data\" [rowClasses] = \"rowClasses\" [autoGenerate]=\"true\"></igx-grid>",
                        "```"
                    ]
                }
            },
            "rowStyles": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxColumnComponent",
                                "tagName": "memberof"
                            }
                        }
                    },
                    "shortText": [
                        "Sets conditional style properties on the grid row element.",
                        "It accepts an object literal where the keys are",
                        "the style properties and the value is an expression to be evaluated.",
                        "```typescript",
                        "styles = {",
                        " background: 'yellow',",
                        " color: (row: RowType) => row.selected : 'red': 'white'",
                        "}",
                        "```",
                        "```html",
                        "<igx-grid #grid [data]=\"Data\" [rowStyles]=\"styles\" [autoGenerate]=\"true\"></igx-grid>",
                        "```"
                    ]
                }
            },
            "primaryKey": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid [data]=\"localData\" [showToolbar]=\"true\" [primaryKey]=\"'ProductID'\" [autoGenerate]=\"true\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Gets/Sets the primary key."
                }
            },
            "cellClick": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Returns the `IgxGridCell`.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid (cellClick)=\"cellClick($event)\" [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when a cell is clicked."
                }
            },
            "selected": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": " Returns the `IgxGridCell`.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid (selected)=\"onCellSelect($event)\" [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when a cell is selected."
                }
            },
            "rowSelected": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid (rowSelected)=\"onCellClickChange($event)\" [data]=\"localData\" [autoGenerate]=\"true\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": " Emitted when `IgxGridRowComponent` is selected."
                }
            },
            "columnSelected": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid (columnSelected)=\"columnSelected($event)\" [data]=\"localData\" [autoGenerate]=\"true\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": " Emitted when `IgxColumnComponent` is selected."
                }
            },
            "columnPin": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "The index at which to insert the column may be changed through the `insertAtIndex` property.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "public columnPinning(event) {",
                                    "    if (event.column.field === \"Name\") {",
                                    "      event.insertAtIndex = 0;",
                                    "    }",
                                    "}",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted before `IgxColumnComponent` is pinned."
                }
            },
            "columnPinned": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "The index that the column is inserted at may be changed through the `insertAtIndex` property.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "public columnPinning(event) {",
                                    "    if (event.column.field === \"Name\") {",
                                    "      event.insertAtIndex = 0;",
                                    "    }",
                                    "}",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted after `IgxColumnComponent` is pinned."
                }
            },
            "cellEditEnter": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "This event is cancelable.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid3 (cellEditEnter)=\"editStart($event)\" [data]=\"data\" [primaryKey]=\"'ProductID'\">",
                                    "</igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when cell enters edit mode."
                }
            },
            "cellEditExit": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid3 (cellEditExit)=\"editExit($event)\" [data]=\"data\" [primaryKey]=\"'ProductID'\">",
                                    "</igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when cell exits edit mode."
                }
            },
            "cellEdit": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "Event is fired after editing is completed, when the cell is exiting edit mode.",
                                    "This event is cancelable."
                                ],
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid3 (cellEdit)=\"editDone($event)\" [data]=\"data\" [primaryKey]=\"'ProductID'\">",
                                    "</igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when cell has been edited."
                }
            },
            "cellEditDone": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid3 (cellEditDone)=\"editDone($event)\" [data]=\"data\" [primaryKey]=\"'ProductID'\">",
                                    "</igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted after cell has been edited and editing has been committed."
                }
            },
            "rowEditEnter": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "Emitted when [rowEditable]=\"true\".",
                                    "This event is cancelable."
                                ],
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid3 (rowEditEnter)=\"editStart($event)\" [primaryKey]=\"'ProductID'\" [rowEditable]=\"true\">",
                                    "</igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when a row enters edit mode."
                }
            },
            "rowEdit": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "Emitted when [rowEditable]=\"true\" & `endEdit(true)` is called.",
                                    "Emitted when changing rows during edit mode, selecting an un-editable cell in the edited row,",
                                    "performing paging operation, column resizing, pinning, moving or hitting `Done`",
                                    "button inside of the rowEditingOverlay, or hitting the `Enter` key while editing a cell.",
                                    "This event is cancelable."
                                ],
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid3 (rowEdit)=\"editDone($event)\" [data]=\"data\" [primaryKey]=\"'ProductID'\" [rowEditable]=\"true\">",
                                    "</igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when exiting edit mode for a row."
                }
            },
            "rowEditDone": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "Emitted when [rowEditable]=\"true\" & `endEdit(true)` is called.",
                                    "Emitted when changing rows during edit mode, selecting an un-editable cell in the edited row,",
                                    "performing paging operation, column resizing, pinning, moving or hitting `Done`",
                                    "button inside of the rowEditingOverlay, or hitting the `Enter` key while editing a cell."
                                ],
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid3 (rowEditDone)=\"editDone($event)\" [data]=\"data\" [primaryKey]=\"'ProductID'\" [rowEditable]=\"true\">",
                                    "</igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted after exiting edit mode for a row and editing has been committed."
                }
            },
            "rowEditExit": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "Emits when [rowEditable]=\"true\" & `endEdit(false)` is called.",
                                    "Emitted when changing hitting `Esc` key during cell editing and when click on the `Cancel` button",
                                    "in the row editing overlay."
                                ],
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid3 (rowEditExit)=\"editExit($event)\" [data]=\"data\" [primaryKey]=\"'ProductID'\" [rowEditable]=\"true\">",
                                    "</igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when row editing is canceled."
                }
            },
            "columnInit": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Returns the column object.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid [data]=\"localData\" (columnInit)=\"initColumns($event)\" [autoGenerate]=\"true\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when a column is initialized."
                }
            },
            "sorting": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Returns an `ISortingEventArgs` object. `sortingExpressions` key holds the sorting expressions.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid [data]=\"localData\" [autoGenerate]=\"true\" (sorting)=\"sorting($event)\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted before sorting expressions are applied."
                }
            },
            "sortingDone": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Returns the sorting expression.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid [data]=\"localData\" [autoGenerate]=\"true\" (sortingDone)=\"sortingDone($event)\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted after sorting is completed."
                }
            },
            "filtering": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Returns an `IFilteringEventArgs` object. `filteringExpressions` key holds the filtering expressions for the column.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\" (filtering)=\"filtering($event)\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted before filtering expressions are applied."
                }
            },
            "filteringDone": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Returns the filtering expressions tree of the column for which filtering was performed.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\" (filteringDone)=\"filteringDone($event)\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted after filtering is performed through the UI."
                }
            },
            "pagingDone": {
                "comment": {
                    "tags": {
                        "deprecated": {
                            "comment": {
                                "text": [
                                    "in version 12.1.0. Use the corresponding output exposed by the `igx-paginator` component instead",
                                    "Emitted after paging is performed."
                                ],
                                "tagName": "deprecated"
                            }
                        },
                        "remarks": {
                            "comment": {
                                "text": "Returns an object consisting of the previous and next pages.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\" (pagingDone)=\"pagingDone($event)\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    }
                }
            },
            "rowAdded": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Returns the data for the new `IgxGridRowComponent` object.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid [data]=\"localData\" (rowAdded)=\"rowAdded($event)\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when a row is added."
                }
            },
            "rowDeleted": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Returns an `IRowDataEventArgs` object.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid [data]=\"localData\" (rowDeleted)=\"rowDeleted($event)\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when a row is deleted."
                }
            },
            "rowDelete": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "This event is cancelable.",
                                    "Returns an `IGridEditEventArgs` object."
                                ],
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid [data]=\"localData\" (rowDelete)=\"rowDelete($event)\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emmited when deleting a row."
                }
            },
            "rowAdd": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "This event is cancelable.",
                                    "Returns an `IGridEditEventArgs` object."
                                ],
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid [data]=\"localData\" (rowAdd)=\"rowAdd($event)\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emmited just before the newly added row is commited."
                }
            },
            "columnResized": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Returns the `IgxColumnComponent` object's old and new width.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid [data]=\"localData\" (columnResized)=\"resizing($event)\" [autoGenerate]=\"true\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted after column is resized."
                }
            },
            "contextMenu": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "Returns the `IgxGridCell` object.",
                                    "```html",
                                    "<igx-grid #grid [data]=\"localData\" (contextMenu)=\"contextMenu($event)\" [autoGenerate]=\"true\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "remarks"
                            }
                        }
                    },
                    "shortText": "Emitted when a cell is right clicked."
                }
            },
            "doubleClick": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Returns the `IgxGridCell` object.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid [data]=\"localData\" (doubleClick)=\"dblClick($event)\" [autoGenerate]=\"true\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when a cell is double clicked."
                }
            },
            "columnVisibilityChanging": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Args: { column: any, newValue: boolean }",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid [columnHiding]=\"true\" [showToolbar]=\"true\" (columnVisibilityChanging)=\"visibilityChanging($event)\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted before column visibility is changed."
                }
            },
            "columnVisibilityChanged": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Args: { column: IgxColumnComponent, newValue: boolean }",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid [columnHiding]=\"true\" [showToolbar]=\"true\" (columnVisibilityChanged)=\"visibilityChanged($event)\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted after column visibility is changed."
                }
            },
            "columnMovingStart": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Returns the moved `IgxColumnComponent` object.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid [columnHiding]=\"true\" [showToolbar]=\"true\" (columnMovingStart)=\"movingStart($event)\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when column moving starts."
                }
            },
            "columnMoving": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Returns the source and target `IgxColumnComponent` objects. This event is cancelable.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid [columnHiding]=\"true\" [showToolbar]=\"true\" (columnMoving)=\"moving($event)\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted during the column moving operation."
                }
            },
            "columnMovingEnd": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Returns the source and target `IgxColumnComponent` objects.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid [columnHiding]=\"true\" [showToolbar]=\"true\" (columnMovingEnd)=\"movingEnds($event)\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when column moving ends."
                }
            },
            "gridKeydown": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "This event is fired only if the key combination is supported in the grid.",
                                    "Return the target type, target object and the original event. This event is cancelable."
                                ],
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    " <igx-grid (gridKeydown)=\"customKeydown($event)\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when keydown is triggered over element inside grid's body."
                }
            },
            "rowDragStart": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Return the dragged row.",
                                "tagName": "remarks"
                            }
                        }
                    },
                    "shortText": "Emitted when start dragging a row."
                }
            },
            "rowDragEnd": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Return the dropped row.",
                                "tagName": "remarks"
                            }
                        }
                    },
                    "shortText": "Emitted when dropping a row."
                }
            },
            "gridCopy": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Fired only if copy behavior is enabled through the [`clipboardOptions`]{@link IgxGridBaseDirective#clipboardOptions}.",
                                "tagName": "remarks"
                            }
                        }
                    },
                    "shortText": "Emitted when a copy operation is executed."
                }
            },
            "rowToggle": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid [data]=\"employeeData\" (rowToggle)=\"rowToggle($event)\" [autoGenerate]=\"true\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when the expanded state of a row gets changed."
                }
            },
            "rowPinning": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid [data]=\"employeeData\" (rowPinning)=\"rowPin($event)\" [autoGenerate]=\"true\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when the pinned state of a row is changed."
                }
            },
            "rowPinned": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid [data]=\"employeeData\" (rowPinned)=\"rowPin($event)\" [autoGenerate]=\"true\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when the pinned state of a row is changed."
                }
            },
            "activeNodeChange": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```",
                                    "<igx-grid [data]=\"data\" [autoGenerate]=\"true\" (activeNodeChange)=\"activeNodeChange($event)\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emmited when the active node is changed."
                }
            },
            "sortingExpressionsChange": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Returns the sorting expressions.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid #grid [data]=\"localData\" [autoGenerate]=\"true\" (sortingExpressionsChange)=\"sortingExprChange($event)\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted before sorting is performed."
                }
            },
            "toolbarExporting": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "toolbarExporting(event: IGridToolbarExportEventArgs){",
                                    "    const toolbarExporting = event;",
                                    "}",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when an export process is initiated by the user."
                }
            },
            "rangeSelected": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Range selection can be made either through drag selection or through keyboard selection.",
                                "tagName": "remarks"
                            }
                        }
                    },
                    "shortText": "Emitted when making a range selection."
                }
            },
            "rendered": {
                "comment": {
                    "tags": {},
                    "shortText": "Emitted after the ngAfterViewInit hook. At this point the grid exists in the DOM"
                }
            },
            "dataChanging": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    " <igx-grid #grid [data]=\"localData\" [autoGenerate]=\"true\" (dataChanging)='handleDataChangingEvent()'></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted before the grid's data view is changed because of a data operation, rebinding, etc."
                }
            },
            "dataChanged": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    " <igx-grid #grid [data]=\"localData\" [autoGenerate]=\"true\" (dataChanged)='handleDataChangedEvent()'></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted after the grid's data view is changed because of a data operation, rebinding, etc."
                }
            },
            "emptyFilteredGridTemplate": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```",
                                    "const emptyTempalte = this.grid.emptyGridTemplate;",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "A template reference for the template when the filtered grid is empty."
                }
            },
            "emptyGridDefaultTemplate": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```",
                                    "const emptyTempalte = this.grid.emptyGridTemplate;",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "A template reference for the template when the grid is empty."
                }
            },
            "rowExpandedIndicatorTemplate": {
                "comment": {
                    "tags": {},
                    "shortText": "The custom template, if any, that should be used when rendering a row expand indicator."
                }
            },
            "rowCollapsedIndicatorTemplate": {
                "comment": {
                    "tags": {},
                    "shortText": "The custom template, if any, that should be used when rendering a row collapse indicator."
                }
            },
            "headerExpandIndicatorTemplate": {
                "comment": {
                    "tags": {},
                    "shortText": "The custom template, if any, that should be used when rendering a header expand indicator."
                }
            },
            "headerCollapseIndicatorTemplate": {
                "comment": {
                    "tags": {},
                    "shortText": "The custom template, if any, that should be used when rendering a header collapse indicator."
                }
            },
            "excelStyleHeaderIconTemplate": {
                "comment": {
                    "tags": {},
                    "shortText": "The custom template, if any, that should be used when rendering a row expand indicator."
                }
            },
            "dragRowID": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "The row ID is either the primaryKey value or the data record instance.",
                                "tagName": "remarks"
                            }
                        }
                    },
                    "shortText": "Gets the row ID that is being dragged."
                }
            },
            "shouldGenerate": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "This will allow to bind the grid to remote data and having auto-generated columns at the same time.",
                                    "Note that after generating the columns, this property would be disabled to avoid re-creating",
                                    "columns each time a new data is assigned."
                                ],
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    " this.grid.shouldGenerate = true;",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Gets/Sets whether the columns should be auto-generated once again after the initialization of the grid"
                }
            }
        },
        "methods": {
            "__type": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "Provides a callback for loading unique column values on demand.",
                                    "If this property is provided, the unique values it generates will be used by the Excel Style Filtering."
                                ],
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-grid [data]=\"localData\" [filterMode]=\"'excelStyleFilter'\" [uniqueColumnValuesStrategy]=\"columnValuesStrategy\"></igx-grid>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Gets/Sets a unique values strategy used by the Excel Style Filtering"
                }
            },
            "getCellByColumnVisibleIndex": {
                "comment": {
                    "tags": {
                        "deprecated": {
                            "comment": {
                                "text": [
                                    "in version 12.1.0. Use `getCellByColumn` or `getCellByKey` instead",
                                    "Returns a `CellType` object that matches the conditions."
                                ],
                                "tagName": "deprecated"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "const myCell = this.grid1.getCellByColumnVisibleIndex(2,\"UnitPrice\");",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    }
                }
            },
            "expandAll": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxTreeGridComponent",
                                "tagName": "memberof"
                            }
                        }
                    },
                    "shortText": [
                        "Expands all rows.",
                        "```typescript",
                        "this.grid.expandAll();",
                        "```"
                    ]
                }
            },
            "collapseAll": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxTreeGridComponent",
                                "tagName": "memberof"
                            }
                        }
                    },
                    "text": [
                        "```typescript",
                        "this.grid.collapseAll();",
                        " ```"
                    ],
                    "shortText": "Collapses all rows."
                }
            },
            "addRow": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxTreeGridComponent",
                                "tagName": "memberof"
                            }
                        }
                    },
                    "shortText": [
                        "Creates a new `IgxTreeGridRowComponent` with the given data. If a parentRowID is not specified, the newly created",
                        "row would be added at the root level. Otherwise, it would be added as a child of the row whose primaryKey matches",
                        "the specified parentRowID. If the parentRowID does not exist, an error would be thrown.",
                        "```typescript",
                        "const record = {",
                        "    ID: this.grid.data[this.grid1.data.length - 1].ID + 1,",
                        "    Name: this.newRecord",
                        "};",
                        "this.grid.addRow(record, 1); // Adds a new child row to the row with ID=1.",
                        "```"
                    ]
                }
            },
            "beginAddRowByIndex": {
                "comment": {
                    "parameters": {
                        "index": {
                            "comment": {
                                "shortText": "The index to spawn the UI at. Accepts integers from 0 to this.grid.dataView.length"
                            }
                        },
                        "asChild": {
                            "comment": {
                                "shortText": "Whether the record should be added as a child. Only applicable to igxTreeGrid."
                            }
                        }
                    },
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "To spawn the UI on top, call the function with index = null or a negative number.",
                                    "In this case trying to add this row as a child will result in error."
                                ],
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid.beginAddRowByIndex(10);",
                                    "this.grid.beginAddRowByIndex(10, true);",
                                    "this.grid.beginAddRowByIndex(null);",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Enters add mode by spawning the UI with the context of the specified row by index."
                }
            },
            "getSelectedData": {
                "comment": {
                    "tags": {
                        "inheritdoc": {
                            "comment": {
                                "tagName": "inheritdoc"
                            }
                        }
                    }
                }
            },
            "getRowByIndex": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "const myRow = treeGrid.getRowByIndex(1);",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Returns the `IgxTreeGridRow` by index."
                }
            },
            "getRowByKey": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "const myRow = this.treeGrid.getRowByIndex(1);",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Returns the `RowType` object by the specified primary key."
                }
            },
            "getCellByColumn": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "const myCell = this.grid1.getCellByColumn(2, \"UnitPrice\");",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Returns a `CellType` object that matches the conditions."
                }
            },
            "getCellByKey": {
                "comment": {
                    "parameters": {
                        "rowSelector": {
                            "comment": {
                                "shortText": "match any rowID"
                            }
                        }
                    },
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Requires that the primaryKey property is set.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "grid.getCellByKey(1, 'index');",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Returns a `CellType` object that matches the conditions."
                }
            },
            "isRecordPinnedByIndex": {
                "comment": {
                    "parameters": {
                        "rowIndex": {
                            "comment": {
                                "shortText": "Index of the record in the `filteredSortedData` collection."
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "Returns whether the record is pinned or not."
                }
            },
            "toggleColumnVisibility": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid1.toggleColumnVisibility({",
                                    "      column: this.grid1.columns[0],",
                                    "      newValue: true",
                                    "});",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Toggles the specified column's visibility."
                }
            },
            "expandRow": {
                "comment": {
                    "parameters": {
                        "rowID": {
                            "comment": {
                                "shortText": "The row id - primaryKey value or the data record instance."
                            }
                        }
                    },
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "ID is either the primaryKey value or the data record instance.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid.expandRow(rowID);",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Expands the row by its id."
                }
            },
            "collapseRow": {
                "comment": {
                    "parameters": {
                        "rowID": {
                            "comment": {
                                "shortText": "The row id - primaryKey value or the data record instance."
                            }
                        }
                    },
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "ID is either the primaryKey value or the data record instance.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid.collapseRow(rowID);",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Collapses the row by its id."
                }
            },
            "toggleRow": {
                "comment": {
                    "parameters": {
                        "rowID": {
                            "comment": {
                                "shortText": "The row id - primaryKey value or the data record instance."
                            }
                        }
                    },
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "ID is either the primaryKey value or the data record instance.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid.toggleRow(rowID);",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Toggles the row by its id."
                }
            },
            "getHeaderGroupWidth": {
                "comment": {
                    "tags": {},
                    "shortText": "Gets the `width` to be set on `IgxGridHeaderGroupComponent`."
                }
            },
            "getColumnByName": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "const myCol = this.grid1.getColumnByName(\"ID\");",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Returns the `IgxColumnComponent` by field name."
                }
            },
            "nextPage": {
                "comment": {
                    "tags": {
                        "deprecated": {
                            "comment": {
                                "text": [
                                    "in version 12.1.0. Use the corresponding method exposed by the `igx-paginator`",
                                    "Goes to the next page, if the grid is not already at the last page."
                                ],
                                "tagName": "deprecated"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid1.nextPage();",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    }
                }
            },
            "previousPage": {
                "comment": {
                    "tags": {
                        "deprecated": {
                            "comment": {
                                "text": [
                                    "in version 12.1.0. Use the corresponding method exposed by the `igx-paginator`",
                                    "Goes to the previous page, if the grid is not already at the first page."
                                ],
                                "tagName": "deprecated"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid1.previousPage();",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    }
                }
            },
            "moveColumn": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "grid.moveColumn(column, target);",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Places a column before or after the specified target column."
                }
            },
            "paginate": {
                "comment": {
                    "tags": {
                        "deprecated": {
                            "comment": {
                                "text": [
                                    "in version 12.1.0. Use the corresponding method exposed by the `igx-paginator`",
                                    "Goes to the desired page index."
                                ],
                                "tagName": "deprecated"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid1.paginate(1);",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    }
                }
            },
            "markForCheck": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "grid.markForCheck();",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "text": [
                        "// DOs",
                        "// call markForCheck after updating a nested property",
                        "grid.data.forEach(rec => {",
                        " rec.nestedProp1.nestedProp2 = newValue;",
                        "});",
                        "grid.markForCheck();",
                        "```"
                    ],
                    "shortText": [
                        "Triggers change detection for the `IgxGridComponent`.",
                        "Calling markForCheck also triggers the grid pipes explicitly, resulting in all updates being processed.",
                        "May degrade performance if used when not needed, or if misused:",
                        "```typescript",
                        "// DON'Ts:",
                        "// don't call markForCheck from inside a loop",
                        "// don't call markForCheck when a primitive has changed",
                        "grid.data.forEach(rec => {",
                        " rec = newValue;",
                        " grid.markForCheck();",
                        "});"
                    ]
                }
            },
            "deleteRow": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "Requires that the `primaryKey` property is set.",
                                    "The method accept rowSelector as a parameter, which is the rowID."
                                ],
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid1.deleteRow(0);",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Removes the `IgxGridRowComponent` and the corresponding data record by primary key."
                }
            },
            "updateCell": {
                "comment": {
                    "parameters": {
                        "value": {
                            "comment": {
                                "shortText": "the new value which is to be set."
                            }
                        },
                        "rowSelector": {
                            "comment": {
                                "shortText": "corresponds to rowID."
                            }
                        },
                        "column": {
                            "comment": {
                                "shortText": "corresponds to column field."
                            }
                        }
                    },
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Requires that the `primaryKey` property is set.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.gridWithPK.updateCell('Updated', 1, 'ProductName');",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Updates the `IgxGridRowComponent` and the corresponding data record by primary key."
                }
            },
            "updateRow": {
                "comment": {
                    "parameters": {
                        "rowSelector": {
                            "comment": {
                                "shortText": "correspond to rowID"
                            }
                        }
                    },
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "The row is specified by",
                                    "rowSelector parameter and the data source record with the passed value.",
                                    "This method will apply requested update only if primary key is specified in the grid."
                                ],
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "grid.updateRow({",
                                    "      ProductID: 1, ProductName: 'Spearmint', InStock: true, UnitsInStock: 1, OrderDate: new Date('2005-03-21')",
                                    "  }, 1);",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Updates the `IgxGridRowComponent`"
                }
            },
            "getRowData": {
                "comment": {
                    "parameters": {
                        "rowSelector": {
                            "comment": {
                                "shortText": "correspond to rowID"
                            }
                        }
                    },
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "If the primary key is not specified the row selector match the row data.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "const data = grid.getRowData(94741);",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Returns the data that is contained in the row component."
                }
            },
            "sort": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Sort the `IgxGridComponent`'s `IgxColumnComponent` based on the provided array of sorting expressions.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid.sort({ fieldName: name, dir: SortingDirection.Asc, ignoreCase: false });",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Sort a single `IgxColumnComponent`."
                }
            },
            "filter": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "public filter(term) {",
                                    "     this.grid.filter(\"ProductName\", term, IgxStringFilteringOperand.instance().condition(\"contains\"));",
                                    "}",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Filters a single `IgxColumnComponent`."
                }
            },
            "filterGlobal": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "grid.filterGlobal('some', IgxStringFilteringOperand.instance().condition('contains'));",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Filters all the `IgxColumnComponent` in the `IgxGridComponent` with the same condition."
                }
            },
            "enableSummaries": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "If you do not provide the customSummary, then the default summary for the column data type will be applied.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "grid.enableSummaries('ProductName');",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Enables summaries for the specified column and applies your customSummary."
                }
            },
            "disableSummaries": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "grid.disableSummaries([{ fieldName: 'ProductName' }]);",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        },
                        "remarks": {
                            "comment": {
                                "text": "Disable summaries for the listed columns.",
                                "tagName": "remarks"
                            }
                        }
                    },
                    "shortText": "Disable summaries for the specified column."
                }
            },
            "clearFilter": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Otherwise clears the filtering state of all `IgxColumnComponent`s.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid.clearFilter();",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "If name is provided, clears the filtering state of the corresponding `IgxColumnComponent`."
                }
            },
            "clearSort": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "otherwise clears the sorting state of all `IgxColumnComponent`.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid.clearSort();",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "If name is provided, clears the sorting state of the corresponding `IgxColumnComponent`."
                }
            },
            "pinColumn": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Returns whether the operation is successful.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid.pinColumn(\"ID\");",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Pins a column by field name."
                }
            },
            "unpinColumn": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid.pinColumn(\"ID\");",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Unpins a column by field name. Returns whether the operation is successful."
                }
            },
            "reflow": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Should be run when changing DOM elements dimentions manually that affect the grid's size.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid.reflow();",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Recalculates grid width/height dimensions."
                }
            },
            "findNext": {
                "comment": {
                    "parameters": {
                        "text": {
                            "comment": {
                                "shortText": "the string to search."
                            }
                        },
                        "caseSensitive": {
                            "comment": {
                                "shortText": "optionally, if the search should be case sensitive (defaults to false)."
                            }
                        },
                        "exactMatch": {
                            "comment": {
                                "shortText": "optionally, if the text should match the entire value  (defaults to false)."
                            }
                        }
                    },
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Returns how many times the grid contains the string.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid.findNext(\"financial\");",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Finds the next occurrence of a given string in the grid and scrolls to the cell if it isn't visible."
                }
            },
            "findPrev": {
                "comment": {
                    "parameters": {
                        "text": {
                            "comment": {
                                "shortText": "the string to search."
                            }
                        },
                        "caseSensitive": {
                            "comment": {
                                "shortText": "optionally, if the search should be case sensitive (defaults to false)."
                            }
                        },
                        "exactMatch": {
                            "comment": {
                                "shortText": "optionally, if the text should match the entire value (defaults to false)."
                            }
                        }
                    },
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Returns how many times the grid contains the string.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid.findPrev(\"financial\");",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Finds the previous occurrence of a given string in the grid and scrolls to the cell if it isn't visible."
                }
            },
            "refreshSearch": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Returns how many times the grid contains the last search.",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid.refreshSearch();",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Reapplies the existing search."
                }
            },
            "clearSearch": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid.clearSearch();",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Removes all the highlights in the cell."
                }
            },
            "getPinnedWidth": {
                "comment": {
                    "parameters": {
                        "takeHidden": {
                            "comment": {
                                "shortText": "If we should take into account the hidden columns in the pinned area."
                            }
                        }
                    },
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "const pinnedWidth = this.grid.getPinnedWidth();",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Gets calculated width of the pinned area."
                }
            },
            "selectRows": {
                "comment": {
                    "parameters": {
                        "clearCurrentSelection": {
                            "comment": {
                                "shortText": "if true clears the current selection"
                            }
                        }
                    },
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid.selectRows([1,2,5], true);",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Select specified rows by ID."
                }
            },
            "deselectRows": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid.deselectRows([1,2,5]);",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Deselect specified rows by ID."
                }
            },
            "selectAllRows": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "By default if filtering is in place, selectAllRows() and deselectAllRows() select/deselect all filtered rows.",
                                    "If you set the parameter onlyFilterData to false that will select all rows in the grid exept deleted rows."
                                ],
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid.selectAllRows();",
                                    "this.grid.selectAllRows(false);",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Selects all rows"
                }
            },
            "deselectAllRows": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "By default if filtering is in place, selectAllRows() and deselectAllRows() select/deselect all filtered rows.",
                                    "If you set the parameter onlyFilterData to false that will deselect all rows in the grid exept deleted rows."
                                ],
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid.deselectAllRows();",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Deselects all rows"
                }
            },
            "selectedColumns": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "Returns an array with selected columns",
                                    "```typescript",
                                    "const selectedColumns = this.grid.selectedColumns();",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Get current selected columns."
                }
            },
            "selectColumns": {
                "comment": {
                    "parameters": {
                        "clearCurrentSelection": {
                            "comment": {
                                "shortText": "if true clears the current selection"
                            }
                        }
                    },
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid.selectColumns(['ID','Name'], true);",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Select specified columns."
                }
            },
            "deselectColumns": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid.deselectColumns(['ID','Name']);",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Deselect specified columns by filed."
                }
            },
            "deselectAllColumns": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid.deselectAllColumns();",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Deselects all columns"
                }
            },
            "selectAllColumns": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid.deselectAllColumns();",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Selects all columns"
                }
            },
            "getSelectedColumnsData": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "If `formatters` is enabled, the cell value will be formatted by its respective column formatter (if any).",
                                    "If `headers` is enabled, it will use the column header (if any) instead of the column field."
                                ],
                                "tagName": "remarks"
                            }
                        }
                    },
                    "shortText": "Returns an array of the current columns selection in the form of `[{ column.field: cell.value }, ...]`."
                }
            },
            "navigateTo": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "Also can execute a custom logic over the target element,",
                                    "through a callback function that accepts { targetType: GridKeydownTargetType, target: Object }"
                                ],
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    " this.grid.navigateTo(10, 3, (args) => { args.target.nativeElement.focus(); });",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Navigates to a position in the grid based on provided `rowindex` and `visibleColumnIndex`."
                }
            },
            "getNextCell": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "You can pass callback function as a third parameter of `getPreviousCell` method.",
                                    "The callback function accepts IgxColumnComponent as a param"
                                ],
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    " const nextEditableCellPosition = this.grid.getNextCell(0, 3, (column) => column.editable);",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": [
                        "Returns `ICellPosition` which defines the next cell,",
                        "according to the current position, that match specific criteria."
                    ]
                }
            },
            "getPreviousCell": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "You can pass callback function as a third parameter of `getPreviousCell` method.",
                                    "The callback function accepts IgxColumnComponent as a param"
                                ],
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    " const previousEditableCellPosition = this.grid.getPreviousCell(0, 3, (column) => column.editable);",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": [
                        "Returns `ICellPosition` which defines the previous cell,",
                        "according to the current position, that match specific criteria."
                    ]
                }
            },
            "openAdvancedFilteringDialog": {
                "comment": {
                    "tags": {},
                    "shortText": "Opens the advanced filtering dialog."
                }
            },
            "closeAdvancedFilteringDialog": {
                "comment": {
                    "parameters": {
                        "applyChanges": {
                            "comment": {
                                "shortText": "indicates whether the changes should be applied"
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "Closes the advanced filtering dialog."
                }
            },
            "endEdit": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "If `commit === true`, passes them from the pending state to the data (or transaction service)",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<button igxButton (click)=\"grid.endEdit(true)\">Commit Row</button>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Finishes the row transactions on the current row."
                }
            },
            "beginAddRowById": {
                "comment": {
                    "parameters": {
                        "rowID": {
                            "comment": {
                                "shortText": "The rowID to spawn the add row UI for, or null to spawn it as the first record in the data view"
                            }
                        },
                        "asChild": {
                            "comment": {
                                "shortText": "Whether the record should be added as a child. Only applicable to igxTreeGrid."
                            }
                        }
                    },
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": "Spawning the UI to add a child for a record only works if you provide a rowID",
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "this.grid.beginAddRowById('ALFKI');",
                                    "this.grid.beginAddRowById('ALFKI', true);",
                                    "this.grid.beginAddRowById(null);",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Enters add mode by spawning the UI under the specified row by rowID."
                }
            }
        },
        "accessors": {
            "data": {
                "getter": {
                    "comment": {
                        "tags": {
                            "memberof": {
                                "comment": {
                                    "text": "IgxTreeGridComponent",
                                    "tagName": "memberof"
                                }
                            }
                        },
                        "shortText": [
                            "An @Input property that lets you fill the `IgxTreeGridComponent` with an array of data.",
                            "```html",
                            "<igx-tree-grid [data]=\"Data\" [autoGenerate]=\"true\"></igx-tree-grid>",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "memberof": {
                                "comment": {
                                    "text": "IgxTreeGridComponent",
                                    "tagName": "memberof"
                                }
                            }
                        },
                        "shortText": [
                            "An @Input property that lets you fill the `IgxTreeGridComponent` with an array of data.",
                            "```html",
                            "<igx-tree-grid [data]=\"Data\" [autoGenerate]=\"true\"></igx-tree-grid>",
                            "```"
                        ]
                    }
                }
            },
            "filteredData": {
                "getter": {
                    "comment": {
                        "tags": {
                            "memberof": {
                                "comment": {
                                    "text": "IgxTreeGridComponent",
                                    "tagName": "memberof"
                                }
                            }
                        },
                        "shortText": [
                            "Returns an array of objects containing the filtered data in the `IgxGridComponent`.",
                            "```typescript",
                            "let filteredData = this.grid.filteredData;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "memberof": {
                                "comment": {
                                    "text": "IgxTreeGridComponent",
                                    "tagName": "memberof"
                                }
                            }
                        },
                        "shortText": [
                            "Sets an array of objects containing the filtered data in the `IgxGridComponent`.",
                            "```typescript",
                            "this.grid.filteredData = [{",
                            "      ID: 1,",
                            "      Name: \"A\"",
                            "}];",
                            "```"
                        ]
                    }
                }
            },
            "transactions": {
                "getter": {
                    "comment": {
                        "tags": {
                            "experimental": {
                                "comment": {
                                    "text": "@hidden",
                                    "tagName": "experimental"
                                }
                            }
                        },
                        "shortText": "Get transactions service for the grid."
                    }
                }
            },
            "expansionDepth": {
                "getter": {
                    "comment": {
                        "tags": {
                            "memberof": {
                                "comment": {
                                    "text": "IgxTreeGridComponent",
                                    "tagName": "memberof"
                                }
                            }
                        },
                        "shortText": [
                            "An @Input property that sets the count of levels to be expanded in the `IgxTreeGridComponent`. By default it is",
                            "set to `Infinity` which means all levels would be expanded.",
                            "```html",
                            "<igx-tree-grid #grid [data]=\"employeeData\" [childDataKey]=\"'employees'\" expansionDepth=\"1\" [autoGenerate]=\"true\"></igx-tree-grid>",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "memberof": {
                                "comment": {
                                    "text": "IgxTreeGridComponent",
                                    "tagName": "memberof"
                                }
                            }
                        },
                        "shortText": [
                            "An @Input property that sets the count of levels to be expanded in the `IgxTreeGridComponent`. By default it is",
                            "set to `Infinity` which means all levels would be expanded.",
                            "```html",
                            "<igx-tree-grid #grid [data]=\"employeeData\" [childDataKey]=\"'employees'\" expansionDepth=\"1\" [autoGenerate]=\"true\"></igx-tree-grid>",
                            "```"
                        ]
                    }
                }
            },
            "rowLoadingIndicatorTemplate": {
                "getter": {
                    "comment": {
                        "tags": {
                            "memberof": {
                                "comment": {
                                    "text": "IgxTreeGridComponent",
                                    "tagName": "memberof"
                                }
                            }
                        },
                        "text": [
                            "<igx-tree-grid #grid [data]=\"employeeData\" [primaryKey]=\"'ID'\" [foreignKey]=\"'parentID'\"",
                            "               [loadChildrenOnDemand]=\"loadChildren\"",
                            "               [rowLoadingIndicatorTemplate]=\"rowLoadingTemplate\">",
                            "</igx-tree-grid>",
                            "```"
                        ],
                        "shortText": [
                            "An @Input property that provides a template for the row loading indicator when load on demand is enabled.",
                            "```html",
                            "<ng-template #rowLoadingTemplate>",
                            "    <igx-icon>loop</igx-icon>",
                            "</ng-template>"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "memberof": {
                                "comment": {
                                    "text": "IgxTreeGridComponent",
                                    "tagName": "memberof"
                                }
                            }
                        },
                        "text": [
                            "<igx-tree-grid #grid [data]=\"employeeData\" [primaryKey]=\"'ID'\" [foreignKey]=\"'parentID'\"",
                            "               [loadChildrenOnDemand]=\"loadChildren\"",
                            "               [rowLoadingIndicatorTemplate]=\"rowLoadingTemplate\">",
                            "</igx-tree-grid>",
                            "```"
                        ],
                        "shortText": [
                            "An @Input property that provides a template for the row loading indicator when load on demand is enabled.",
                            "```html",
                            "<ng-template #rowLoadingTemplate>",
                            "    <igx-icon>loop</igx-icon>",
                            "</ng-template>"
                        ]
                    }
                }
            },
            "selectedCells": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const selectedCells = this.grid.selectedCells;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Returns an array of the selected `IgxGridCell`s."
                    }
                }
            },
            "hasGroupableColumns": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const groupableGrid = this.grid.hasGroupableColumns;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Returns if the `IgxTreeGridComponent` has groupable columns."
                    }
                }
            },
            "dataCloneStrategy": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        " <igx-grid #grid [data]=\"localData\" [dataCloneStrategy]=\"customCloneStrategy\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the data clone strategy of the grid when in edit mode."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        " <igx-grid #grid [data]=\"localData\" [dataCloneStrategy]=\"customCloneStrategy\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the data clone strategy of the grid when in edit mode."
                    }
                }
            },
            "resourceStrings": {
                "getter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "By default it uses EN resources.",
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the resource strings."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "By default it uses EN resources.",
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the resource strings."
                    }
                }
            },
            "filteringLogic": {
                "getter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "The default is AND.",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [data]=\"Data\" [autoGenerate]=\"true\" [filteringLogic]=\"filtering\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the filtering logic of the `IgxGridComponent`."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "The default is AND.",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [data]=\"Data\" [autoGenerate]=\"true\" [filteringLogic]=\"filtering\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the filtering logic of the `IgxGridComponent`."
                    }
                }
            },
            "filteringExpressionsTree": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"Data\" [autoGenerate]=\"true\" [(filteringExpressionsTree)]=\"model.filteringExpressions\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            },
                            "remarks": {
                                "comment": {
                                    "text": "Supports two-way binding.",
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the filtering state."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"Data\" [autoGenerate]=\"true\" [(filteringExpressionsTree)]=\"model.filteringExpressions\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            },
                            "remarks": {
                                "comment": {
                                    "text": "Supports two-way binding.",
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the filtering state."
                    }
                }
            },
            "advancedFilteringExpressionsTree": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "let advancedFilteringExpressionsTree = this.grid.advancedFilteringExpressionsTree;",
                                        "this.grid.advancedFilteringExpressionsTree = logic;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the advanced filtering state."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "let advancedFilteringExpressionsTree = this.grid.advancedFilteringExpressionsTree;",
                                        "this.grid.advancedFilteringExpressionsTree = logic;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the advanced filtering state."
                    }
                }
            },
            "locale": {
                "getter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "If not set, returns browser's language.",
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the locale."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "If not set, returns browser's language.",
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the locale."
                    }
                }
            },
            "paging": {
                "getter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 12.1.0. Use the corresponding method exposed by the `igx-paginator`",
                                        "Gets/Sets whether the paging feature is enabled."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "remarks": {
                                "comment": {
                                    "text": "The default state is disabled (false).",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"Data\" [autoGenerate]=\"true\">",
                                        " <igx-paginator></igx-paginator>",
                                        "</igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 12.1.0. Use the corresponding method exposed by the `igx-paginator`",
                                        "Gets/Sets whether the paging feature is enabled."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "remarks": {
                                "comment": {
                                    "text": "The default state is disabled (false).",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"Data\" [autoGenerate]=\"true\">",
                                        " <igx-paginator></igx-paginator>",
                                        "</igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                }
            },
            "page": {
                "getter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 12.1.0. Use `page` property form `paginator` component instead",
                                        "Gets/Sets the current page index."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"Data\" [autoGenerate]=\"true\">",
                                        " <igx-paginator [(page)]=\"model.page\"></igx-paginator>",
                                        "</igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            },
                            "remarks": {
                                "comment": {
                                    "text": "Supports two-way binding.",
                                    "tagName": "remarks"
                                }
                            }
                        }
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 12.1.0. Use `page` property form `paginator` component instead",
                                        "Gets/Sets the current page index."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"Data\" [autoGenerate]=\"true\">",
                                        " <igx-paginator [(page)]=\"model.page\"></igx-paginator>",
                                        "</igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            },
                            "remarks": {
                                "comment": {
                                    "text": "Supports two-way binding.",
                                    "tagName": "remarks"
                                }
                            }
                        }
                    }
                }
            },
            "perPage": {
                "getter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 12.1.0. Use `perPage` property from `paginator` component instead",
                                        "Gets/Sets the number of visible items per page."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "remarks": {
                                "comment": {
                                    "text": "The default is 15.",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"Data\" [autoGenerate]=\"true\">",
                                        " <igx-paginator [(perPage)]=\"model.perPage\"></igx-paginator>",
                                        "</igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 12.1.0. Use `perPage` property from `paginator` component instead",
                                        "Gets/Sets the number of visible items per page."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "remarks": {
                                "comment": {
                                    "text": "The default is 15.",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"Data\" [autoGenerate]=\"true\">",
                                        " <igx-paginator [(perPage)]=\"model.perPage\"></igx-paginator>",
                                        "</igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                }
            },
            "columnHiding": {
                "getter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 10.1.0",
                                        "Gets/Sets whether the column hiding UI is enabled."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "remarks": {
                                "comment": {
                                    "text": "By default it is disabled (false). In order for the UI to work, you need to enable the toolbar as shown in the example below.",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [data]=\"Data\" [autoGenerate]=\"true\" [showToolbar]=\"true\" [columnHiding]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 10.1.0",
                                        "Gets/Sets whether the column hiding UI is enabled."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "remarks": {
                                "comment": {
                                    "text": "By default it is disabled (false). In order for the UI to work, you need to enable the toolbar as shown in the example below.",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [data]=\"Data\" [autoGenerate]=\"true\" [showToolbar]=\"true\" [columnHiding]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                }
            },
            "hideRowSelectors": {
                "getter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": " By default row selectors are shown",
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Gets/Sets if the row selectors are hidden."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": " By default row selectors are shown",
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Gets/Sets if the row selectors are hidden."
                    }
                }
            },
            "rowDraggable": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [rowDraggable]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets whether rows can be moved."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [rowDraggable]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets whether rows can be moved."
                    }
                }
            },
            "rowEditable": {
                "getter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "By default it is set to false.",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [showToolbar]=\"true\" [rowEditable]=\"true\" [primaryKey]=\"'ProductID'\" [columnHiding]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets whether the rows are editable."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "By default it is set to false.",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [showToolbar]=\"true\" [rowEditable]=\"true\" [primaryKey]=\"'ProductID'\" [columnHiding]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets whether the rows are editable."
                    }
                }
            },
            "height": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"Data\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the height."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"Data\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the height."
                    }
                }
            },
            "width": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "let gridWidth = this.grid.width;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the width of the grid."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "let gridWidth = this.grid.width;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the width of the grid."
                    }
                }
            },
            "headerWidth": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "let gridHeaderWidth = this.grid.headerWidth;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets the width of the header."
                    }
                }
            },
            "rowHeight": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"localData\" [showToolbar]=\"true\" [rowHeight]=\"100\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the row height."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"localData\" [showToolbar]=\"true\" [rowHeight]=\"100\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the row height."
                    }
                }
            },
            "columnWidth": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"localData\" [showToolbar]=\"true\" [columnWidth]=\"100\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the default width of the columns."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"localData\" [showToolbar]=\"true\" [columnWidth]=\"100\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the default width of the columns."
                    }
                }
            },
            "emptyGridMessage": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"Data\" [emptyGridMessage]=\"'The grid is empty'\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Get/Sets the message displayed when there are no records."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"Data\" [emptyGridMessage]=\"'The grid is empty'\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Get/Sets the message displayed when there are no records."
                    }
                }
            },
            "isLoading": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"Data\" [isLoading]=\"true\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets whether the grid is going to show a loading indicator."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"Data\" [isLoading]=\"true\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets whether the grid is going to show a loading indicator."
                    }
                }
            },
            "emptyFilteredGridMessage": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"Data\" [emptyGridMessage]=\"'The grid is empty'\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the message displayed when there are no records and the grid is filtered."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"Data\" [emptyGridMessage]=\"'The grid is empty'\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the message displayed when there are no records and the grid is filtered."
                    }
                }
            },
            "columnHidingTitle": {
                "getter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 10.1.0",
                                        "Gets/Sets the title to be displayed in the built-in column hiding UI."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [showToolbar]=\"true\" [columnHiding]=\"true\" columnHidingTitle=\"Column Hiding\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 10.1.0",
                                        "Gets/Sets the title to be displayed in the built-in column hiding UI."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [showToolbar]=\"true\" [columnHiding]=\"true\" columnHidingTitle=\"Column Hiding\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                }
            },
            "pinning": {
                "getter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": [
                                        "Allows to apply pinning the columns to the start or the end.",
                                        "Note that pinning to both sides at a time is not allowed."
                                    ],
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [pinning]=\"pinningConfig\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the initial pinning configuration."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": [
                                        "Allows to apply pinning the columns to the start or the end.",
                                        "Note that pinning to both sides at a time is not allowed."
                                    ],
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [pinning]=\"pinningConfig\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the initial pinning configuration."
                    }
                }
            },
            "columnPinning": {
                "getter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 10.1.0",
                                        "Gets/Sets if the built-in column pinning UI should be shown in the toolbar."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"localData\" [columnPinning]=\"'true\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 10.1.0",
                                        "Gets/Sets if the built-in column pinning UI should be shown in the toolbar."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"localData\" [columnPinning]=\"'true\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                }
            },
            "columnPinningTitle": {
                "getter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 10.1.0",
                                        "Gets/Sets the title to be displayed in the UI of the column pinning."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"localData\" [columnPinning]=\"'true\" [columnPinningTitle]=\"'Column Hiding'\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 10.1.0",
                                        "Gets/Sets the title to be displayed in the UI of the column pinning."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"localData\" [columnPinning]=\"'true\" [columnPinningTitle]=\"'Column Hiding'\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                }
            },
            "allowFiltering": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"localData\" [allowFiltering]=\"true\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets if the filtering is enabled."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"localData\" [allowFiltering]=\"true\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets if the filtering is enabled."
                    }
                }
            },
            "allowAdvancedFiltering": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"localData\" [allowAdvancedFiltering]=\"true\" [showToolbar]=\"true\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets a value indicating whether the advanced filtering is enabled."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"localData\" [allowAdvancedFiltering]=\"true\" [showToolbar]=\"true\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets a value indicating whether the advanced filtering is enabled."
                    }
                }
            },
            "filterMode": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"localData\" [filterMode]=\"'quickFilter'\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            },
                            "remarks": {
                                "comment": {
                                    "text": "By default it's set to FilterMode.quickFilter.",
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the filter mode."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"localData\" [filterMode]=\"'quickFilter'\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            },
                            "remarks": {
                                "comment": {
                                    "text": "By default it's set to FilterMode.quickFilter.",
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the filter mode."
                    }
                }
            },
            "summaryPosition": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"localData\" summaryPosition=\"top\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            },
                            "remarks": {
                                "comment": {
                                    "text": "By default it is bottom.",
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the summary position."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"localData\" summaryPosition=\"top\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            },
                            "remarks": {
                                "comment": {
                                    "text": "By default it is bottom.",
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the summary position."
                    }
                }
            },
            "summaryCalculationMode": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"localData\" summaryCalculationMode=\"rootLevelOnly\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            },
                            "remarks": {
                                "comment": {
                                    "text": "By default it is rootAndChildLevels which means the summaries are calculated for the root level and each child level.",
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the summary calculation mode."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"localData\" summaryCalculationMode=\"rootLevelOnly\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            },
                            "remarks": {
                                "comment": {
                                    "text": "By default it is rootAndChildLevels which means the summaries are calculated for the root level and each child level.",
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the summary calculation mode."
                    }
                }
            },
            "showSummaryOnCollapse": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"localData\" [showSummaryOnCollapse]=\"true\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            },
                            "remarks": {
                                "comment": {
                                    "text": [
                                        "By default showSummaryOnCollapse is set to 'false' which means that the summary row is not visible",
                                        "when the groupBy/parent row is collapsed."
                                    ],
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Controls whether the summary row is visible when groupBy/parent row is collapsed."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"localData\" [showSummaryOnCollapse]=\"true\" [autoGenerate]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            },
                            "remarks": {
                                "comment": {
                                    "text": [
                                        "By default showSummaryOnCollapse is set to 'false' which means that the summary row is not visible",
                                        "when the groupBy/parent row is collapsed."
                                    ],
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Controls whether the summary row is visible when groupBy/parent row is collapsed."
                    }
                }
            },
            "filterStrategy": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        " <igx-grid #grid [data]=\"localData\" [filterStrategy]=\"filterStrategy\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the filtering strategy of the grid."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        " <igx-grid #grid [data]=\"localData\" [filterStrategy]=\"filterStrategy\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the filtering strategy of the grid."
                    }
                }
            },
            "sortStrategy": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        " <igx-grid #grid [data]=\"localData\" [sortStrategy]=\"sortStrategy\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the sorting strategy of the grid."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        " <igx-grid #grid [data]=\"localData\" [sortStrategy]=\"sortStrategy\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the sorting strategy of the grid."
                    }
                }
            },
            "selectedRows": {
                "getter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "Represents the selected rows' IDs (primary key or rowData)",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [data]=\"localData\" primaryKey=\"ID\" rowSelection=\"multiple\" [selectedRows]=\"[0, 1, 2]\"><igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the current selection state."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "Represents the selected rows' IDs (primary key or rowData)",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [data]=\"localData\" primaryKey=\"ID\" rowSelection=\"multiple\" [selectedRows]=\"[0, 1, 2]\"><igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the current selection state."
                    }
                }
            },
            "headerGroupsList": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const headerGroupsList = this.grid.headerGroupsList;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "A list of all `IgxGridHeaderGroupComponent`."
                    }
                }
            },
            "headerCellList": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const headers = this.grid.headerCellList;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "A list of all `IgxGridHeaderComponent`."
                    }
                }
            },
            "filterCellList": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const filterCells = this.grid.filterCellList;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "A list of all `IgxGridFilteringCellComponent`."
                    }
                }
            },
            "rowList": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const rowList = this.grid.rowList;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "A list of `IgxGridRowComponent`."
                    }
                }
            },
            "dataRowList": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const dataList = this.grid.dataRowList;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "A list of currently rendered `IgxGridRowComponent`'s."
                    }
                }
            },
            "dragIndicatorIconTemplate": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "The custom template, if any, that should be used when rendering the row drag indicator icon"
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": "The custom template, if any, that should be used when rendering the row drag indicator icon"
                    }
                }
            },
            "sortingExpressions": {
                "getter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "Supports two-way data binding.",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"Data\" [autoGenerate]=\"true\" [(sortingExpressions)]=\"model.sortingExpressions\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the sorting state."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "Supports two-way data binding.",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"Data\" [autoGenerate]=\"true\" [(sortingExpressions)]=\"model.sortingExpressions\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the sorting state."
                    }
                }
            },
            "hiddenColumnsCount": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const hiddenCol = this.grid.hiddenColumnsCount;",
                                        "``"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets the number of hidden columns."
                    }
                }
            },
            "pinnedColumnsCount": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "Gets the number of pinned columns."
                    }
                }
            },
            "hiddenColumnsText": {
                "getter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 10.1.0",
                                        "Gets/Sets the text to be displayed inside the toggle button."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "remarks": {
                                "comment": {
                                    "text": "Used for the built-in column hiding UI of the`IgxColumnComponent`.",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [columnHiding]=\"true\" [showToolbar]=\"true\" [hiddenColumnsText]=\"'Hidden Columns'\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 10.1.0",
                                        "Gets/Sets the text to be displayed inside the toggle button."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "remarks": {
                                "comment": {
                                    "text": "Used for the built-in column hiding UI of the`IgxColumnComponent`.",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [columnHiding]=\"true\" [showToolbar]=\"true\" [hiddenColumnsText]=\"'Hidden Columns'\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                }
            },
            "pinnedColumnsText": {
                "getter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 10.1.0",
                                        "Gets/Sets the text to be displayed inside the toggle button."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "remarks": {
                                "comment": {
                                    "text": "Used for the built-in column pinning UI of the`IgxColumnComponent`.",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [pinnedColumnsText]=\"'PinnedCols Text\" [data]=\"data\" [width]=\"'100%'\" [height]=\"'500px'\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 10.1.0",
                                        "Gets/Sets the text to be displayed inside the toggle button."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "remarks": {
                                "comment": {
                                    "text": "Used for the built-in column pinning UI of the`IgxColumnComponent`.",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [pinnedColumnsText]=\"'PinnedCols Text\" [data]=\"data\" [width]=\"'100%'\" [height]=\"'500px'\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                }
            },
            "batchEditing": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [batchEditing]=\"true\" [data]=\"someData\">",
                                        "</igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": [
                            "Gets/Sets whether the grid has batch editing enabled.",
                            "When batch editing is enabled, changes are not made directly to the underlying data.",
                            "Instead, they are stored as transactions, which can later be committed w/ the `commit` method."
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [batchEditing]=\"true\" [data]=\"someData\">",
                                        "</igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": [
                            "Gets/Sets whether the grid has batch editing enabled.",
                            "When batch editing is enabled, changes are not made directly to the underlying data.",
                            "Instead, they are stored as transactions, which can later be committed w/ the `commit` method."
                        ]
                    }
                }
            },
            "showToolbar": {
                "getter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 11.0.0",
                                        "Gets/Sets whether the toolbar is shown."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [data]=\"localData\" [showToolbar]=\"true\" [autoGenerate]=\"true\" ></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 11.0.0",
                                        "Gets/Sets whether the toolbar is shown."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [data]=\"localData\" [showToolbar]=\"true\" [autoGenerate]=\"true\" ></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                }
            },
            "toolbarTitle": {
                "getter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 11.0.0",
                                        "Gets/Sets the toolbar's title."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [data]=\"localData\" [showToolbar]=\"true\" [autoGenerate]=\"true\" [toolbarTitle]=\"'My Grid'\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 11.0.0",
                                        "Gets/Sets the toolbar's title."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [data]=\"localData\" [showToolbar]=\"true\" [autoGenerate]=\"true\" [toolbarTitle]=\"'My Grid'\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                }
            },
            "exportExcel": {
                "getter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "`exportExcel` is deprecated",
                                        "Gets/Sets whether exporting to MS Excel is enabled or disabled."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [data]=\"localData\" [showToolbar]=\"true\" [autoGenerate]=\"true\" [exportExcel]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "`exportExcel` is deprecated",
                                        "Gets/Sets whether exporting to MS Excel is enabled or disabled."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [data]=\"localData\" [showToolbar]=\"true\" [autoGenerate]=\"true\" [exportExcel]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                }
            },
            "exportCsv": {
                "getter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "`exportCsv` is deprecated",
                                        "Gets/Sets whether the option for exporting to CSV is enabled or disabled.",
                                        "```html",
                                        "<igx-grid [data]=\"localData\" [showToolbar]=\"true\" [autoGenerate]=\"true\" [exportCsv]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "deprecated"
                                }
                            }
                        }
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "`exportCsv` is deprecated",
                                        "Gets/Sets whether the option for exporting to CSV is enabled or disabled.",
                                        "```html",
                                        "<igx-grid [data]=\"localData\" [showToolbar]=\"true\" [autoGenerate]=\"true\" [exportCsv]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "deprecated"
                                }
                            }
                        }
                    }
                }
            },
            "exportText": {
                "getter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "`exportText` is deprecated",
                                        "Gets/Sets the textual content for the main export button."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [data]=\"localData\" [showToolbar]=\"true\" [exportText]=\"'My Exporter'\" [exportCsv]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "`exportText` is deprecated",
                                        "Gets/Sets the textual content for the main export button."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [data]=\"localData\" [showToolbar]=\"true\" [exportText]=\"'My Exporter'\" [exportCsv]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                }
            },
            "exportExcelText": {
                "getter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "`exportExcelText` is deprecated",
                                        "Gets/Sets the textual content for the MS Excel export button.",
                                        "```html",
                                        "<igx-grid [exportExcelText]=\"'My Excel Exporter\" [showToolbar]=\"true\" [exportText]=\"'My Exporter'\" [exportCsv]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "deprecated"
                                }
                            }
                        }
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "`exportExcelText` is deprecated",
                                        "Gets/Sets the textual content for the MS Excel export button.",
                                        "```html",
                                        "<igx-grid [exportExcelText]=\"'My Excel Exporter\" [showToolbar]=\"true\" [exportText]=\"'My Exporter'\" [exportCsv]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "deprecated"
                                }
                            }
                        }
                    }
                }
            },
            "exportCsvText": {
                "getter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "`exportCsvText` is deprecated",
                                        "Gets/Sets the textual content for the CSV export button."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [exportCsvText]=\"'My Csv Exporter\" [showToolbar]=\"true\" [exportText]=\"'My Exporter'\" [exportExcel]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "`exportCsvText` is deprecated",
                                        "Gets/Sets the textual content for the CSV export button."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid [exportCsvText]=\"'My Csv Exporter\" [showToolbar]=\"true\" [exportText]=\"'My Exporter'\" [exportExcel]=\"true\"></igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                }
            },
            "cellSelection": {
                "getter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "By default the cell selection mode is multiple",
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Gets/Sets cell selection mode."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "By default the cell selection mode is multiple",
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Gets/Sets cell selection mode."
                    }
                }
            },
            "rowSelection": {
                "getter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": [
                                        "By default the row selection mode is 'none'",
                                        "Note that in IgxGrid and IgxHierarchicalGrid 'multipleCascade' behaves like 'multiple'"
                                    ],
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Gets/Sets row selection mode"
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": [
                                        "By default the row selection mode is 'none'",
                                        "Note that in IgxGrid and IgxHierarchicalGrid 'multipleCascade' behaves like 'multiple'"
                                    ],
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Gets/Sets row selection mode"
                    }
                }
            },
            "columnSelection": {
                "getter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "By default the row selection mode is none",
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Gets/Sets column selection mode"
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "By default the row selection mode is none",
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Gets/Sets column selection mode"
                    }
                }
            },
            "filteredSortedData": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const filteredSortedData = this.grid1.filteredSortedData;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Returns an array containing the filtered sorted data."
                    }
                }
            },
            "virtualizationState": {
                "getter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "Includes the start index and how many records are rendered.",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const gridVirtState = this.grid1.virtualizationState;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Returns the state of the grid virtualization."
                    }
                }
            },
            "expansionStates": {
                "getter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": [
                                        "Includes only states that differ from the default one.",
                                        "Supports two-way binding."
                                    ],
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"data\" [(expansionStates)]=\"model.expansionStates\">",
                                        "</igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets a list of key-value pairs [row ID, expansion state]."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": [
                                        "Includes only states that differ from the default one.",
                                        "Supports two-way binding."
                                    ],
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<igx-grid #grid [data]=\"data\" [(expansionStates)]=\"model.expansionStates\">",
                                        "</igx-grid>",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets/Sets a list of key-value pairs [row ID, expansion state]."
                    }
                }
            },
            "nativeElement": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const nativeEl = this.grid.nativeElement.",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets the native element."
                    }
                }
            },
            "outlet": {
                "getter": {
                    "comment": {
                        "tags": {
                            "remark": {
                                "comment": {
                                    "text": "If set, returns the outlet defined outside the grid. Otherwise returns the grid's internal outlet directive.",
                                    "tagName": "remark"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the outlet used to attach the grid's overlays to."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "remark": {
                                "comment": {
                                    "text": "If set, returns the outlet defined outside the grid. Otherwise returns the grid's internal outlet directive.",
                                    "tagName": "remark"
                                }
                            }
                        },
                        "shortText": "Gets/Sets the outlet used to attach the grid's overlays to."
                    }
                }
            },
            "defaultRowHeight": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const rowHeigh = this.grid.defaultRowHeight;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets the default row height."
                    }
                }
            },
            "defaultHeaderGroupMinWidth": {
                "getter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": [
                                        "Used internally for restricting header group component width.",
                                        "The values below depend on the header cell default right/left padding values."
                                    ],
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Returns the `IgxGridHeaderGroupComponent`'s minimum allowed width."
                    }
                }
            },
            "pinnedWidth": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const pinnedWidth = this.grid.getPinnedWidth;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets the current width of the container for the pinned `IgxColumnComponent`s."
                    }
                }
            },
            "unpinnedWidth": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const unpinnedWidth = this.grid.getUnpinnedWidth;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets the current width of the container for the unpinned `IgxColumnComponent`s."
                    }
                }
            },
            "columns": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const colums = this.grid.columnsCollection.",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets an array of `IgxColumnComponent`s."
                    }
                }
            },
            "pinnedColumns": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const pinnedColumns = this.grid.pinnedColumns.",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets an array of the pinned `IgxColumnComponent`s."
                    }
                }
            },
            "pinnedRows": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const pinnedRow = this.grid.pinnedRows;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets an array of the pinned `IgxRowComponent`s."
                    }
                }
            },
            "unpinnedColumns": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const unpinnedColumns = this.grid.unpinnedColumns.",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Gets an array of unpinned `IgxColumnComponent`s."
                    }
                }
            },
            "visibleColumns": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const visibleColumns = this.grid.visibleColumns.",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Returns an array of visible `IgxColumnComponent`s."
                    }
                }
            },
            "totalPages": {
                "getter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 12.1.0. Use the corresponding property exposed by the `igx-paginator`",
                                        "Gets the total number of pages."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const totalPages = this.grid.totalPages;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                }
            },
            "isFirstPage": {
                "getter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 12.1.0. Use the corresponding property exposed by the `igx-paginator`",
                                        "Gets if the current page is the first page."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const firstPage = this.grid.isFirstPage;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                }
            },
            "totalRecords": {
                "getter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "Only functions when paging is enabled.",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const totalRecords = this.grid.totalRecords;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Returns the total number of records."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "Only functions when paging is enabled.",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const totalRecords = this.grid.totalRecords;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Returns the total number of records."
                    }
                }
            },
            "isLastPage": {
                "getter": {
                    "comment": {
                        "tags": {
                            "deprecated": {
                                "comment": {
                                    "text": [
                                        "in version 12.1.0. Use the corresponding property exposed by the `igx-paginator`",
                                        "Returns if the current page is the last page."
                                    ],
                                    "tagName": "deprecated"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const lastPage = this.grid.isLastPage;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        }
                    }
                }
            },
            "totalWidth": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const gridWidth = this.grid.totalWidth;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Returns the total width of the `IgxGridComponent`."
                    }
                }
            },
            "hasSortableColumns": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const sortableGrid = this.grid.hasSortableColumns;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Returns if the `IgxGridComponent` has sortable columns."
                    }
                }
            },
            "hasEditableColumns": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const editableGrid = this.grid.hasEditableColumns;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Returns if the `IgxGridComponent` has editable columns."
                    }
                }
            },
            "hasFilterableColumns": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const filterableGrid = this.grid.hasFilterableColumns;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Returns if the `IgxGridComponent` has filterable columns."
                    }
                }
            },
            "hasSummarizedColumns": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const summarizedGrid = this.grid.hasSummarizedColumns;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Returns if the `IgxGridComponent` has summarized columns."
                    }
                }
            },
            "hasMovableColumns": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const movableGrid = this.grid.hasMovableColumns;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Returns if the `IgxGridComponent` has moveable columns."
                    }
                }
            },
            "hasColumnGroups": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const groupGrid = this.grid.hasColumnGroups;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Returns if the `IgxGridComponent` has column groups."
                    }
                }
            },
            "hasColumnLayouts": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "const layoutGrid = this.grid.hasColumnLayouts;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Returns if the `IgxGridComponent` has column layouts for multi-row layout definition."
                    }
                }
            },
            "pinnedDataView": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "     const pinnedDataView = this.grid.pinnedDataView;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Returns the currently transformed paged/filtered/sorted/grouped pinned row data, displayed in the grid."
                    }
                }
            },
            "unpinnedDataView": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "     const pinnedDataView = this.grid.pinnedDataView;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Returns currently transformed paged/filtered/sorted/grouped unpinned row data, displayed in the grid."
                    }
                }
            },
            "dataView": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "     const dataView = this.grid.dataView;",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Returns the currently transformed paged/filtered/sorted/grouped/pinned/unpinned row data, displayed in the grid."
                    }
                }
            },
            "selectRowOnClick": {
                "getter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "By default it is set to true",
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Gets/Sets whether clicking over a row should select/deselect it"
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "By default it is set to true",
                                    "tagName": "remarks"
                                }
                            }
                        },
                        "shortText": "Gets/Sets whether clicking over a row should select/deselect it"
                    }
                }
            },
            "displayDensity": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Returns the theme of the component.",
                            "The default theme is `comfortable`.",
                            "Available options are `comfortable`, `cosy`, `compact`.",
                            "```typescript",
                            "let componentTheme = this.component.displayDensity;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": "Sets the theme of the component."
                    }
                }
            }
        }
    }
}
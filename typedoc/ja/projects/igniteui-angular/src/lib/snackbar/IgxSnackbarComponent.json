{
    "IgxSnackbarComponent": {
        "comment": {
            "text": [
                "Ignite UI Snack Bar コンポーネントは一行のメッセージで操作のフィードバックを提供します。元に戻すなどの操作へのリンクを追加できます。",
                "例:",
                "```html",
                "<button (click)=\"snackbar.show()\">Send message</button>",
                "<div>",
                "  <igx-snackbar #snackbar message=\"Message sent\">",
                "  </igx-snackbar>",
                "</div>",
                "```"
            ],
            "shortText": [
                "**Ignite UI for Angular Snackbar** -",
                "[ヘルプ](https://jp.infragistics.com/products/ignite-ui-angular/angular/components/snackbar.html)"
            ]
        },
        "properties": {
            "id": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxSnackbarComponent",
                                "tagName": "次のメンバー:"
                            }
                        }
                    },
                    "shortText": [
                        "snackbar の `id` を取得または設定します。",
						"設定しない場合、最初の snackbar コンポーネントの `id` は `\"igx-snackbar-0\"` になります。",
                        "```html",
                        "<igx-snackbar id = \"Snackbar1\"></igx-snackbar>",
                        "```",
                        "```typescript",
                        "let snackbarId = this.snackbar.id;",
                        "```"
                    ]
                }
            },
            "ariaLive": {
                "comment": {
                    "tags": {
                        "memberof": {
                            "comment": {
                                "text": "IgxSnackbarComponent",
                                "tagName": "次のメンバー:"
                            }
                        }
                    },
                    "shortText": [
                        "Snackbar メッセージ コンテナーの `aria-live` 属性を設定または取得します。",
                        "設定しない場合、 `aria-live` は `polite` になります。",
                        "```html",
                        "<igx-snackbar [ariaLive]=\"'polite'\"></igx-snackbar>",
                        "```",
                        "```typescript",
                        "let snackbarAriaLive = this.snackbar.ariaLive;",
                        "```"
                    ]
                }
            },
            "isVisible": {
                "comment": {
                    "shortText": [
                        "snackbar の表示状態を有効または無効にします。",
                        "設定されない場合、`isVisible` 属性の値は `false` です。",
                        "```html",
                        "<igx-snackbar [isVisible] = \"true\"></igx-snackbar>",
                        "```",
                        "```typescript",
                        "let isVisible =  this.snackbar.isVisible;",
                        "```"
                    ]
                }
            },
            "autoHide": {
                "comment": {
                    "shortText": [
                        "snackbar が `displayTime` の終了後に自動的に非表示になるかどうかを取得または設定します。",
                        "デフォルト値は `true` です。",
                        "```html",
                        "<igx-snackbar [autoHide] = \"false\"></igx-snackbar>",
                        "```",
                        "```typescript",
                        "let autoHide =  this.snackbar.autoHide;",
                        "```"
                    ]
                }
            },
            "displayTime": {
                "comment": {
                    "shortText": [
                        "表示された後、snackbar が表示される期間 (ミリ行) を取得または設定します。",
                        "デフォルト値は 4000 です。",
                        "```html",
                        "<igx-snackbar [displayTime] = \"2000\"></igx-snackbar>",
                        "```",
                        "```typescript",
                        "let displayTime = this.snackbar.displayTime;",
                        "```"
                    ]
                }
            },
            "actionText": {
                "comment": {
                    "shortText": [
                        "`actionText` 属性を取得または設定します。",
                        "```html",
                        "<igx-snackbar [actionText] = \"'Action Text'\"></igx-snackbar>",
                        "```"
                    ]
                }
            },
            "clicked": {
                "comment": {
                    "shortText": [
                        "アクション ボタンがクリックされたときに発行されるイベント。",
                        "引数として `IgxSnackbarComponent` への参照を提供します。",
                        "```html",
                        "<igx-snackbar (clicked)=\"clickedHandler($event)\"></igx-snackbar>",
                        "```"
                    ]
                }
            },
            "animationStarted": {
                "comment": {
                    "shortText": [
                        "snackbar のアニメーションが開始するときに発生されるイベント。",
                        "引数として `AnimationEvent` インターフェイスへの参照を提供します。",
                        "```html",
                        "<igx-snackbar (animationStarted) = \"animationStarted($event)\"></igx-snackbar>",
                        "```"
                    ]
                }
            },
            "animationDone": {
                "comment": {
                    "shortText": [
                        "snackbar のアニメーションが完了するときに発生されるイベント。",
                        "引数として `AnimationEvent` インターフェイスへの参照を提供します。",
                        "```html",
                        "<igx-snackbar (animationDone) = \"animationDone($event)\"></igx-snackbar>",
                        "```"
                    ]
                }
            }
        },
        "methods": {
            "show": {
                "comment": {
                    "tags": {
                        "deprecated": {
                            "comment": {
                                "text": [
                                    "`autoHide` が `true` に設定されている場合、`displayTime` が終了した後にスナックバーを表示して非表示にします。",
                                    "```typescript",
                                    "this.snackbar.show();",
                                    "```"
                                ],
                                "tagName": "非推奨"
                            }
                        }
                    }
                }
            },
            "hide": {
                "comment": {
                    "tags": {
                        "deprecated": {
                            "comment": {
                                "text": [
                                    "snackbar を非表示にします。",
                                    "```typescript",
                                    "this.snackbar.hide();",
                                    "```"
                                ],
                                "tagName": "非推奨"
                            }
                        }
                    }
                }
            },
            "open": {
                "comment": {
                    "shortText": [
                        "snackbar を表示し、`autoHide` が `true` に設定される場合に `displayTime` がかかった後に非表示にします。",
                        "```typescript",
                        "this.snackbar.open();",
                        "```"
                    ]
                }
            },
            "close": {
                "comment": {
                    "shortText": [
                        "snackbar を非表示にします。",
                        "```typescript",
                        "this.snackbar.close();",
                        "```"
                    ]
                }
            }
        },
        "accessors": {
            "message": {
                "setter": {
                    "comment": {
                        "shortText": [
                            "`message` 属性を取得または設定します。",
                            "```html",
                            "<igx-snackbar [message] = \"'Snackbar Component'\"></igx-snackbar>",
                            "```",
                            "```typescript",
                            "let message =  this.snackbar.message;",
                            "```"
                        ]
                    }
                },
                "getter": {
                    "comment": {
                        "shortText": [
                            "`message` 属性を取得または設定します。",
                            "```html",
                            "<igx-snackbar [message] = \"'Snackbar Component'\"></igx-snackbar>",
                            "```",
                            "```typescript",
                            "let message =  this.snackbar.message;",
                            "```"
                        ]
                    }
                }
            }
        }
    }
}
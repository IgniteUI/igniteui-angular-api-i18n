{
    "IgxTooltipTargetDirective": {
        "comment": {
            "blockTags": [],
            "modifierTags": {},
            "summary": [
                {
                    "kind": "text",
                    "text": "**Ignite UI for Angular Tooltip Target** -\n[Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/tooltip)\n\nThe Ignite UI for Angular Tooltip Target directive is used to mark an HTML element in the markup as one that has a tooltip.\nThe tooltip target is used in combination with the Ignite UI for Angular Tooltip by assigning the exported tooltip reference to the\ntarget's selector property.\n\nExample:\n"
                },
                {
                    "kind": "code",
                    "text": "```html\n<button type=\"button\" igxButton [igxTooltipTarget]=\"tooltipRef\">Hover me</button>\n<span #tooltipRef=\"tooltip\" igxTooltip>Hello there, I am a tooltip!</span>\n```"
                }
            ]
        },
        "properties": {
            "showDelay": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/sets the amount of milliseconds that should pass before showing the tooltip.\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// get\nlet tooltipShowDelay = this.tooltipTarget.showDelay;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--set-->\n<button type=\"button\" igxButton [igxTooltipTarget]=\"tooltipRef\" [showDelay]=\"1500\">Hover me</button>\n<span #tooltipRef=\"tooltip\" igxTooltip>Hello there, I am a tooltip!</span>\n```"
                        }
                    ]
                }
            },
            "hideDelay": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/sets the amount of milliseconds that should pass before hiding the tooltip.\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// get\nlet tooltipHideDelay = this.tooltipTarget.hideDelay;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--set-->\n<button type=\"button\" igxButton [igxTooltipTarget]=\"tooltipRef\" [hideDelay]=\"1500\">Hover me</button>\n<span #tooltipRef=\"tooltip\" igxTooltip>Hello there, I am a tooltip!</span>\n```"
                        }
                    ]
                }
            },
            "tooltipDisabled": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Specifies if the tooltip should not show when hovering its target with the mouse. (defaults to false)\nWhile setting this property to 'true' will disable the user interactions that shows/hides the tooltip,\nthe developer will still be able to show/hide the tooltip through the API.\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// get\nlet tooltipDisabledValue = this.tooltipTarget.tooltipDisabled;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--set-->\n<button type=\"button\" igxButton [igxTooltipTarget]=\"tooltipRef\" [tooltipDisabled]=\"true\">Hover me</button>\n<span #tooltipRef=\"tooltip\" igxTooltip>Hello there, I am a tooltip!</span>\n```"
                        }
                    ]
                }
            },
            "tooltipShow": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emits an event when the tooltip that is associated with this target starts showing.\nThis event is fired before the start of the countdown to showing the tooltip.\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\ntooltipShowing(args: ITooltipShowEventArgs) {\n   alert(\"Tooltip started showing!\");\n}\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<button type=\"button\" igxButton [igxTooltipTarget]=\"tooltipRef\" (tooltipShow)='tooltipShowing($event)'>Hover me</button>\n<span #tooltipRef=\"tooltip\" igxTooltip>Hello there, I am a tooltip!</span>\n```"
                        }
                    ]
                }
            },
            "tooltipHide": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emits an event when the tooltip that is associated with this target starts hiding.\nThis event is fired before the start of the countdown to hiding the tooltip.\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\ntooltipHiding(args: ITooltipHideEventArgs) {\n   alert(\"Tooltip started hiding!\");\n}\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<button type=\"button\" igxButton [igxTooltipTarget]=\"tooltipRef\" (tooltipHide)='tooltipHiding($event)'>Hover me</button>\n<span #tooltipRef=\"tooltip\" igxTooltip>Hello there, I am a tooltip!</span>\n```"
                        }
                    ]
                }
            },
            "overlaySettings": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Provide settings that control the toggle overlay positioning, interaction and scroll behavior.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nconst settings: OverlaySettings = {\n     closeOnOutsideClick: false,\n     modal: false\n }\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n---\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--set-->\n<div igxToggleAction [overlaySettings]=\"settings\"></div>\n```"
                        }
                    ]
                }
            },
            "outlet": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Determines where the toggle element overlay should be attached.\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--set-->\n<div igxToggleAction [igxToggleOutlet]=\"outlet\"></div>\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\nWhere "
                        },
                        {
                            "kind": "code",
                            "text": "`outlet`"
                        },
                        {
                            "kind": "text",
                            "text": " in an instance of "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxOverlayOutletDirective`"
                        },
                        {
                            "kind": "text",
                            "text": " or an "
                        },
                        {
                            "kind": "code",
                            "text": "`ElementRef`"
                        }
                    ]
                }
            }
        },
        "methods": {
            "showTooltip": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Shows the tooltip by respecting the 'showDelay' property.\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.tooltipTarget.showTooltip();\n```"
                        }
                    ]
                }
            },
            "hideTooltip": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Hides the tooltip by respecting the 'hideDelay' property.\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.tooltipTarget.hideTooltip();\n```"
                        }
                    ]
                }
            }
        },
        "accessors": {
            "nativeElement": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the respective native element of the directive.\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nlet tooltipTargetElement = this.tooltipTarget.nativeElement;\n```"
                            }
                        ]
                    }
                }
            },
            "tooltipHidden": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Indicates if the tooltip that is is associated with this target is currently hidden.\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nlet tooltipHiddenValue = this.tooltipTarget.tooltipHidden;\n```"
                            }
                        ]
                    }
                }
            }
        }
    }
}
{
    "IgxDateTimeEditorDirective": {
        "comment": {
            "tags": {
                "igxmodule": {
                    "comment": {
                        "text": "IgxDateTimeEditorModule",
                        "tagName": "igxmodule"
                    }
                },
                "igxparent": {
                    "comment": {
                        "text": "IgxInputGroup",
                        "tagName": "igxparent"
                    }
                },
                "igxtheme": {
                    "comment": {
                        "text": "igx-input-theme",
                        "tagName": "igxtheme"
                    }
                },
                "igxkeywords": {
                    "comment": {
                        "text": "date, time, editor",
                        "tagName": "igxkeywords"
                    }
                },
                "igxgroup": {
                    "comment": {
                        "text": "Scheduling",
                        "tagName": "igxgroup"
                    }
                },
                "remarks": {
                    "comment": {
                        "text": [
                            "The Ignite UI Date Time Editor Directive makes it easy for developers to manipulate date/time user input.",
                            "It requires input in a specified or default input format which is visible in the input element as a placeholder.",
                            "It allows the input of only date (ex: 'dd/MM/yyyy'), only time (ex:'HH:mm tt') or both at once, if needed.",
                            "Supports display format that may differ from the input format.",
                            "Provides methods to increment and decrement any specific/targeted `DatePart`."
                        ],
                        "tagName": "remarks"
                    }
                },
                "example": {
                    "comment": {
                        "text": [
                            "```html",
                            "<igx-input-group>",
                            "  <input type=\"text\" igxInput [igxDateTimeEditor]=\"'dd/MM/yyyy'\" [displayFormat]=\"'shortDate'\" [(ngModel)]=\"date\"/>",
                            "</igx-input-group>",
                            "```"
                        ],
                        "tagName": "example"
                    }
                }
            },
            "shortText": "Date Time Editor provides a functionality to input, edit and format date and time."
        },
        "properties": {
            "locale": {
                "comment": {
                    "tags": {
                        "remarks": {
                            "comment": {
                                "text": [
                                    "Uses Angular's `LOCALE_ID` by default. Affects both input mask and display format if those are not set.",
                                    "If a `locale` is set, it must be registered via `registerLocaleData`.",
                                    "Please refer to https://angular.io/guide/i18n#i18n-pipes.",
                                    "If it is not registered, `Intl` will be used for formatting."
                                ],
                                "tagName": "remarks"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<input igxDateTimeEditor [locale]=\"'en'\">",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Locale settings used for value formatting."
                }
            },
            "spinLoop": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<input igxDateTimeEditor [spinLoop]=\"false\">",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Specify if the currently spun date segment should loop over."
                }
            },
            "displayFormat": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<input igxDateTimeEditor [displayFormat]=\"'shortDate'\">",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": [
                        "Set both pre-defined format options such as `shortDate` and `longDate`,",
                        "as well as constructed format string using characters supported by `DatePipe`, e.g. `EE/MM/yyyy`."
                    ]
                }
            },
            "spinDelta": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<input igxDateTimeEditor [spinDelta]=\"{date: 5, minute: 30}\">",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": [
                        "Delta values used to increment or decrement each editor date part on spin actions.",
                        "All values default to `1`."
                    ]
                }
            },
            "valueChange": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<input igxDateTimeEditor (valueChange)=\"onValueChanged($event)\"/>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when the editor's value has changed."
                }
            },
            "validationFailed": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<input igxDateTimeEditor [minValue]=\"minDate\" [maxValue]=\"maxDate\" (validationFailed)=\"onValidationFailed($event)\"/>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "Emitted when the editor is not within a specified range or when the editor's value is in an invalid state."
                }
            },
            "promptChar": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Sets the character representing a fillable spot in the input mask.",
                        "Default value is \"'_'\".",
                        "```html",
                        "<input [promptChar] = \"'/'\">",
                        "```"
                    ]
                }
            },
            "includeLiterals": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Specifies if the bound value includes the formatting symbols.",
                        "```html",
                        "<input [includeLiterals] = \"true\">",
                        "```"
                    ]
                }
            },
            "displayValuePipe": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Specifies a pipe to be used on blur.",
                        "```html",
                        "<input [displayValuePipe] = \"displayFormatPipe\">",
                        "```"
                    ]
                }
            },
            "focusedValuePipe": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Specifies a pipe to be used on focus.",
                        "```html",
                        "<input [focusedValuePipe] = \"inputFormatPipe\">",
                        "```"
                    ]
                }
            },
            "onValueChange": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Emits an event each time the value changes.",
                        "Provides `rawValue: string` and `formattedValue: string` as event arguments.",
                        "```html",
                        "<input (onValueChange) = \"onValueChange(rawValue: string, formattedValue: string)\">",
                        "```"
                    ]
                }
            }
        },
        "methods": {
            "clear": {
                "comment": {
                    "tags": {},
                    "shortText": "Clear the input element value."
                }
            },
            "increment": {
                "comment": {
                    "parameters": {
                        "datePart": {
                            "comment": {
                                "text": "The optional DatePart to increment. Defaults to Date or Hours (when Date is absent from the inputFormat - ex:'HH:mm')."
                            }
                        },
                        "delta": {
                            "comment": {
                                "text": "The optional delta to increment by. Overrides `spinDelta`."
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "Increment specified DatePart."
                }
            },
            "decrement": {
                "comment": {
                    "parameters": {
                        "datePart": {
                            "comment": {
                                "text": "The optional DatePart to decrement. Defaults to Date or Hours (when Date is absent from the inputFormat - ex:'HH:mm')."
                            }
                        },
                        "delta": {
                            "comment": {
                                "text": "The optional delta to decrement by. Overrides `spinDelta`."
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "Decrement specified DatePart."
                }
            }
        },
        "accessors": {
            "minValue": {
                "getter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "If a `string` value is passed, it must be in the defined input format.",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<input igxDateTimeEditor [minValue]=\"minDate\">",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Minimum value required for the editor to remain valid."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": "Minimum value required for the editor to remain valid."
                    }
                }
            },
            "maxValue": {
                "getter": {
                    "comment": {
                        "tags": {
                            "remarks": {
                                "comment": {
                                    "text": "If a `string` value is passed in, it must be in the defined input format.",
                                    "tagName": "remarks"
                                }
                            },
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<input igxDateTimeEditor [maxValue]=\"maxDate\">",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Maximum value required for the editor to remain valid."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": "Maximum value required for the editor to remain valid."
                    }
                }
            },
            "inputFormat": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "Expected user input format (and placeholder)."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<input [igxDateTimeEditor]=\"'dd/MM/yyyy'\">",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Expected user input format (and placeholder)."
                    }
                }
            },
            "value": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": "Editor value."
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```html",
                                        "<input igxDateTimeEditor [value]=\"date\">",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "Editor value."
                    }
                }
            },
            "mask": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Sets the input mask.",
                            "```html",
                            "<input [igxMask] = \"'00/00/0000'\">",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Sets the input mask.",
                            "```html",
                            "<input [igxMask] = \"'00/00/0000'\">",
                            "```"
                        ]
                    }
                }
            },
            "placeholder": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Specifies a placeholder.",
                            "```html",
                            "<input placeholder = \"enter text...\">",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Specifies a placeholder.",
                            "```html",
                            "<input placeholder = \"enter text...\">",
                            "```"
                        ]
                    }
                }
            }
        }
    }
}
{
    "bem--selector-to-string": {
        "description": [
            "<p>セレクター値を文字列に変換します。</p>",
            ""
        ],
        "parameters": {
            "s": {
                "description": [
                    "<p>変換されるセレクター。</p>",
                    ""
                ]
            }
        }
    },
    "bem--with-dot": {
        "description": [
            "<p>BEM セレクターに点を前に追加します。</p>",
            ""
        ],
        "parameters": {
            "x": {
                "description": [
                    "<p>点を前に追加するBEM。</p>",
                    ""
                ]
            }
        },
        "example": [
            {
                "description": [
                    "<p>返却</p>",
                    ""
                ],
                "code": [
                    ".#{$x}"
                ]
            }
        ]
    },
    "bem--mod-str": {
        "description": [
            "<p>キー値マップを修飾文字列に変換します。</p>",
            ""
        ],
        "parameters": {
            "m": {
                "description": [
                    "<p>変換される修飾リスト。</p>",
                    ""
                ]
            }
        }
    },
    "bem--elem-str": {
        "description": [
            "<p>分割として使用される要素セパレーター文字列持つ要素セレクター文字列にブロックの名前をプレフィックスします。</p>",
            ""
        ],
        "parameters": {
            "b": {
                "description": [
                    "<p>ブロックの名前。</p>",
                    ""
                ]
            },
            "e": {
                "description": [
                    "<p>要素の名前。</p>",
                    ""
                ]
            }
        },
        "example": [
            {
                "description": [
                    "<p>返却</p>",
                    ""
                ],
                "code": [
                    ".block__element"
                ]
            }
        ]
    },
    "bem--bem-str": {
        "description": [
            "<p>要素セレクターを続く修飾セレクターに貼付されたブロック セレクター文字列を返します。</p>",
            ""
        ],
        "parameters": {
            "block": {
                "description": [
                    "<p>ブロックの名前。</p>",
                    ""
                ]
            },
            "elem": {
                "description": [
                    "<p>サブ要素の名前。</p>",
                    ""
                ]
            },
            "mod": {
                "description": [
                    "<p>修飾の名前。</p>",
                    ""
                ]
            }
        },
        "example": [
            {
                "description": [
                    "<p>返却</p>",
                    ""
                ],
                "code": [
                    ".block--modifier .block__element"
                ]
            }
        ]
    },
    "bem--contains-elem": {
        "description": [
            "<p>要素分割文字列は渡された文字列の一部であるかどうを確認します。</p>",
            ""
        ],
        "parameters": {
            "x": {
                "description": [
                    "<p>確認する文字列。</p>",
                    ""
                ]
            }
        },
        "returns": {
            "description": [
            "<p>文字列の最初の発生または要素分割の名前は渡された文字列の一部ではない場合 null を返します。</p>",
            ""
        ]
    }
    },
    "bem--contains-mod": {
        "description": [
            "<p>修飾分割文字列は渡された文字列の一部であるかどうを確認します。</p>",
            ""
        ],
        "parameters": {
            "x": {
                "description": [
                    "<p>確認する文字列。</p>",
                    ""
                ]
            }
        },
        "returns": {
            "description": [
            "<p>文字列の最初の発生または修飾分割の文字列は渡された文字列の一部ではない場合 null を返します。</p>",
            ""
        ]
    }
    },
    "bem--contains-pseudo": {
        "description": [
            "<p>渡されたセレクター文字列はコロンを含むかどうか確認します。</p>",
            ""
        ],
        "parameters": {
            "x": {
                "description": [
                    "<p>コロンの発生を確認する文字列。</p>",
                    ""
                ]
            }
        },
        "returns": {
            "description": [
            "<p>発生の指数または文字列はコロンを含まない場合 null を返します。</p>",
            ""
        ]
    }
    },
    "bem--extract-block": {
        "description": [
            "<p><code>$x</code> を生成したBEM ブロック名を返します。 前に付いた &quot;.&quot; を含みません。</p>",
            ""
        ],
        "parameters": {
            "x": {
                "description": [
                    "<p>ブロックの名前。</p>",
                    ""
                ]
            }
        }
    },
    "bem--extract-first-selector": {
        "description": [
            "<p>入れ子にされたセレクター文字列の最初のセレクターを返します。</p>",
            ""
        ],
        "parameters": {
            "x": {
                "description": [
                    "<p>検索するセレクター。</p>",
                    ""
                ]
            }
        }
    },
    "bem-selector": {
        "description": [
            "<p>完全 BEM セレクターを生成します。</p>",
            ""
        ],
        "parameters": {
            "block": {
                "description": [
                    "<p>必須。文字列 ブロックの名前。</p>",
                    ""
                ]
            },
            "elem": {
                "description": [
                    "<p>オプション。サブ要素の名前。<Code>$mod</code> はない場合、$block で統合します。 $mod がある場合、<code>$block--$mod</code> の下に入れ子されます。</p>",
                    ""
                ]
            },
            "mod": {
                "description": [
                    "<p>オプション。ブロック修飾。</p>",
                    ""
                ]
            }
        },
        "example": [
            {
                "description": [
                    "<p>ブロックを含みます。</p>",
                    ""
                ],
                "code": [
                    "@include bem-selector(block); // ブロックを出力します。"
                ]
            },
            {
                "description": [
                    "<p>要素とブロックを含みます。</p>",
                    ""
                ],
                "code": [
                    "@include bem-selector(block, $e:elem); // .block__elem を出力します。"
                ]
            },
            {
                "description": [
                    "<p>ブロック、要素と要素修飾を含みます。</p>",
                    ""
                ],
                "code": [
                    "@include bem-selector(block, $e:(elem,emod); // .block__elem-emod を出力します。"
                ]
            },
            {
                "description": [
                    "<p>ブロックとブロック修飾を含みます。</p>",
                    ""
                ],
                "code": [
                    "@include bem-selector(block, $m:mod) // .block--mod を出力します。"
                ]
            },
            {
                "description": [
                    "<p>ブロックと修飾値を含みます。</p>",
                    ""
                ],
                "code": [
                    "@include bem-selector(block, $m:(mod:val)); // .block--mod-val を出力します。"
                ]
            },
            {
                "description": [
                    "<p>ブロック修飾を続くブロック サブ要素を含みます。</p>",
                    ""
                ],
                "code": [
                    "@include bem-selector(block, $m:mod, $e:elem); // .block--mod .block__elem を出力します。"
                ]
            }
        ]
    }
}
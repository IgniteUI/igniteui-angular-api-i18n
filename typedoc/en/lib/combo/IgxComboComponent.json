{
    "IgxComboComponent": {
        "properties": {
            "onSelectionChange": {
                "comment": {
                    "text": [
                        "```html",
                        "<igx-combo (onSelectionChange)='handleSelection()'></igx-combo>",
                        "```"
                    ],
                    "shortText": "Emitted when item selection is changing, before the selection completes"
                }
            },
            "onOpening": {
                "comment": {
                    "text": [
                        "```html",
                        "<igx-combo onOpening='handleOpening($event)'></igx-combo>",
                        "```"
                    ],
                    "shortText": "Emitted before the dropdown is opened"
                }
            },
            "onOpened": {
                "comment": {
                    "text": [
                        "```html",
                        "<igx-combo (onOpened)='handleOpened()'></igx-combo>",
                        "```"
                    ],
                    "shortText": "Emitted after the dropdown is opened"
                }
            },
            "onClosing": {
                "comment": {
                    "text": [
                        "```html",
                        "<igx-combo (onClosing)='handleClosing($event)'></igx-combo>",
                        "```"
                    ],
                    "shortText": "Emitted before the dropdown is closed"
                }
            },
            "onClosed": {
                "comment": {
                    "text": [
                        "```html",
                        "<igx-combo (onClosed)='handleClosed()'></igx-combo>",
                        "```"
                    ],
                    "shortText": "Emitted after the dropdown is closed"
                }
            },
            "onAddition": {
                "comment": {
                    "text": [
                        "```html",
                        "<igx-combo (onAddition)='handleAdditionEvent()'></igx-combo>",
                        "```"
                    ],
                    "shortText": "Emitted when an item is being added to the data collection"
                }
            },
            "onSearchInput": {
                "comment": {
                    "text": [
                        "```html",
                        "<igx-combo (onSearchInput)='handleSearchInputEvent()'></igx-combo>",
                        "```"
                    ],
                    "shortText": "Emitted when the value of the search input changes (e.g. typing, pasting, clear, etc.)"
                }
            },
            "onDataPreLoad": {
                "comment": {
                    "text": [
                        "```html",
                        "<igx-combo (onDataPreLoad)='handleDataPreloadEvent()'></igx-combo>",
                        "```"
                    ],
                    "shortText": "Emitted when new chunk of data is loaded from the virtualization"
                }
            },
            "id": {
                "comment": {
                    "text": [
                        "```typescript",
                        "// get",
                        "let id = this.combo.id;",
                        "```",
                        "```html",
                        "<!--set-->",
                        "<igx-combo [id]='combo1'></igx-combo>",
                        "```"
                    ],
                    "shortText": "Gets/gets combo id."
                }
            },
            "allowCustomValues": {
                "comment": {
                    "text": [
                        "```typescript",
                        "// get",
                        "let comboAllowsCustomValues = this.combo.allowCustomValues;",
                        "```",
                        "```html",
                        "<!--set-->",
                        "<igx-combo [allowCustomValues]='true'></igx-combo>",
                        "```"
                    ],
                    "shortText": "Controls whether custom values can be added to the collection"
                }
            },
            "itemsMaxHeight": {
                "comment": {
                    "text": [
                        "```typescript",
                        "// get",
                        "let myComboItemsMaxHeight = this.combo.itemsMaxHeight;",
                        "```",
                        "```html",
                        "<!--set-->",
                        "<igx-combo [itemsMaxHeight]='320'></igx-combo>",
                        "```"
                    ],
                    "shortText": "Configures the drop down list height"
                }
            },
            "itemsWidth": {
                "comment": {
                    "text": [
                        "```typescript",
                        "// get",
                        "let myComboItemsWidth = this.combo.itemsWidth;",
                        "```",
                        "```html",
                        "<!--set-->",
                        "<igx-combo [itemsWidth] = '\"180px\"'></igx-combo>",
                        "```"
                    ],
                    "shortText": "Configures the drop down list width"
                }
            },
            "itemHeight": {
                "comment": {
                    "text": [
                        "```typescript",
                        "// get",
                        "let myComboItemHeight = this.combo.itemHeight;",
                        "```",
                        "```html",
                        "<!--set-->",
                        "<igx-combo [itemHeight]='32'></igx-combo>",
                        "```"
                    ],
                    "shortText": "Configures the drop down list item height"
                }
            },
            "placeholder": {
                "comment": {
                    "text": [
                        "```typescript",
                        "// get",
                        "let myComboPlaceholder = this.combo.placeholder;",
                        "```",
                        "```html",
                        "<!--set-->",
                        "<igx-combo [placeholder]='newPlaceHolder'></igx-combo>",
                        "```"
                    ],
                    "shortText": "Defines the placeholder value for the combo value field"
                }
            },
            "searchPlaceholder": {
                "comment": {
                    "text": [
                        "```typescript",
                        "// get",
                        "let myComboSearchPlaceholder = this.combo.searchPlaceholder;",
                        "```",
                        "```html",
                        "<!--set-->",
                        "<igx-combo [searchPlaceholder]='newPlaceHolder'></igx-combo>",
                        "```"
                    ],
                    "shortText": "Defines the placeholder value for the combo dropdown search field"
                }
            },
            "filterable": {
                "comment": {
                    "shortText": [
                        "An @Input property that enabled/disables filtering in the list. The default is `true`.",
                        "```html",
                        "<igx-combo [filterable]=\"'false'\">",
                        "```"
                    ]
                }
            },
            "ariaLabelledBy": {
                "comment": {
                    "shortText": [
                        "An @Input property that set aria-labelledby attribute",
                        "```html",
                        "<igx-combo [ariaLabelledBy]=\"'label1'\">",
                        "```"
                    ]
                }
            },
            "disabled": {
                "comment": {
                    "shortText": [
                        "An @Input property that enabled/disables combo. The default is `false`.",
                        "```html",
                        "<igx-combo [disabled]=\"'true'\">",
                        "```"
                    ]
                }
            },
            "type": {
                "comment": {
                    "shortText": [
                        "An @Input property that sets how the combo will be styled.",
                        "The allowed values are `line`, `box`, `border` and `search`. The default is `box`.",
                        "```html",
                        "<igx-combo [type]=\"'line'\">",
                        "```"
                    ]
                }
            }
        },
        "methods": {
            "toggle": {
                "comment": {
                    "text": [
                        "```html",
                        "<button (click)=\"combo.toggle()>Toggle Combo</button>",
                        "<igx-combo #combo></igx-combo>",
                        "```"
                    ],
                    "shortText": "A method that opens/closes the combo."
                }
            },
            "open": {
                "comment": {
                    "text": [
                        "```html",
                        "<button (click)=\"combo.open()>Open Combo</button>",
                        "<igx-combo #combo></igx-combo>",
                        "```"
                    ],
                    "shortText": "A method that opens the combo."
                }
            },
            "close": {
                "comment": {
                    "text": [
                        "```html",
                        "<button (click)=\"combo.close()>Close Combo</button>",
                        "<igx-combo #combo></igx-combo>",
                        "```"
                    ],
                    "shortText": "A method that closes the combo."
                }
            },
            "selectedItems": {
                "comment": {
                    "shortText": "Get current selection state"
                }
            },
            "selectItems": {
                "comment": {
                    "shortText": "Select defined items"
                }
            },
            "deselectItems": {
                "comment": {
                    "shortText": "Deselect defined items"
                }
            },
            "selectAllItems": {
                "comment": {
                    "shortText": "Select all (filtered) items"
                }
            },
            "deselectAllItems": {
                "comment": {
                    "shortText": "Deselect all (filtered) items"
                }
            }
        },
        "accessors": {
            "width": {
                "getter": {
                    "comment": {
                        "text": [
                            "```typescript",
                            "// get",
                            "let myComboWidth = this.combo.width;",
                            "```",
                            "```html",
                            "<!--set-->",
                            "<igx-combo [width]='250px'></igx-combo>",
                            "```"
                        ],
                        "shortText": "Sets the style width of the element"
                    }
                },
                "setter": {
                    "comment": {
                        "text": [
                            "```typescript",
                            "// get",
                            "let myComboWidth = this.combo.width;",
                            "```",
                            "```html",
                            "<!--set-->",
                            "<igx-combo [width]='250px'></igx-combo>",
                            "```"
                        ],
                        "shortText": "Sets the style width of the element"
                    }
                }
            },
            "data": {
                "getter": {
                    "comment": {
                        "text": [
                            "```html",
                            "<!--set-->",
                            "<igx-combo [data]='items'></igx-combo>",
                            "```"
                        ],
                        "shortText": "Combo data source."
                    }
                },
                "setter": {
                    "comment": {
                        "text": [
                            "```html",
                            "<!--set-->",
                            "<igx-combo [data]='items'></igx-combo>",
                            "```"
                        ],
                        "shortText": "Combo data source."
                    }
                }
            },
            "valueKey": {
                "getter": {
                    "comment": {
                        "text": [
                            "```typescript",
                            "// get",
                            "let myComboValueKey = this.combo.valueKey;",
                            "```",
                            "```html",
                            "<!--set-->",
                            "<igx-combo [valueKey]='myKey'></igx-combo>",
                            "```"
                        ],
                        "shortText": "Combo value data source propery."
                    }
                },
                "setter": {
                    "comment": {
                        "text": [
                            "```typescript",
                            "// get",
                            "let myComboValueKey = this.combo.valueKey;",
                            "```",
                            "```html",
                            "<!--set-->",
                            "<igx-combo [valueKey]='myKey'></igx-combo>",
                            "```"
                        ],
                        "shortText": "Combo value data source propery."
                    }
                }
            },
            "displayKey": {
                "setter": {
                    "comment": {
                        "text": [
                            "```typescript",
                            "// get",
                            "let myComboDisplayKey = this.combo.displayKey;",
                            "// set",
                            "this.combo.displayKey = 'val';",
                            "```",
                            "```html",
                            "<!--set-->",
                            "<igx-combo [displayKey]='mydisplayKey'></igx-combo>",
                            "```"
                        ],
                        "shortText": "Combo text data source propery."
                    }
                },
                "getter": {
                    "comment": {
                        "text": [
                            "```typescript",
                            "// get",
                            "let myComboDisplayKey = this.combo.displayKey;",
                            "// set",
                            "this.combo.displayKey = 'val';",
                            "```",
                            "```html",
                            "<!--set-->",
                            "<igx-combo [displayKey]='mydisplayKey'></igx-combo>",
                            "```"
                        ],
                        "shortText": "Combo text data source propery."
                    }
                }
            },
            "groupKey": {
                "setter": {
                    "comment": {
                        "text": [
                            "```html",
                            "<!--set-->",
                            "<igx-combo [groupKey]='newGroupKey'></igx-combo>",
                            "```"
                        ],
                        "shortText": "The item property by which items should be grouped inside the items list. Not usable if data is not of type Object[]."
                    }
                },
                "getter": {
                    "comment": {
                        "text": [
                            "```typescript",
                            "// get",
                            "let currentGroupKey = this.combo.groupKey;",
                            "```"
                        ],
                        "shortText": "The item property by which items should be grouped inside the items list. Not usable if data is not of type Object[]."
                    }
                }
            },
            "virtualizationState": {
                "getter": {
                    "comment": {
                        "text": [
                            "```typescript",
                            "// get",
                            "let state = this.combo.virtualizationState;",
                            "```"
                        ],
                        "shortText": "Defines the current state of the virtualized data. It contains `startIndex` and `chunkSize`"
                    }
                },
                "setter": {
                    "comment": {
                        "text": [
                            "```typescript",
                            "// set",
                            "this.combo.virtualizationState(state);",
                            "```"
                        ],
                        "shortText": "Sets the current state of the virtualized data."
                    }
                }
            },
            "totalItemCount": {
                "getter": {
                    "comment": {
                        "text": [
                            "```typescript",
                            "// get",
                            "let count = this.combo.totalItemCount;",
                            "```"
                        ],
                        "shortText": "Gets total count of the virtual data items, when using remote service."
                    }
                },
                "setter": {
                    "comment": {
                        "text": [
                            "```typescript",
                            "// set",
                            "this.combo.totalItemCount(remoteService.count);",
                            "```"
                        ],
                        "shortText": "Sets total count of the virtual data items, when using remote service."
                    }
                }
            },
            "valid": {
                "getter": {
                    "comment": {
                        "text": [
                            "```typescript",
                            "// get",
                            "let valid = this.combo.valid;",
                            "```"
                        ],
                        "shortText": "Gets if control is valid, when used in a form"
                    }
                },
                "setter": {
                    "comment": {
                        "text": [
                            "```typescript",
                            "// get",
                            "this.combo.valid(IgxComboState.INVALID);",
                            "```"
                        ],
                        "shortText": "Sets valid state of the combo"
                    }
                }
            },
            "value": {
                "getter": {
                    "comment": {
                        "text": [
                            "```typescript",
                            "// get",
                            "let comboValue = this.combo.value;",
                            "```"
                        ],
                        "shortText": "Combo value"
                    }
                },
                "setter": {
                    "comment": {
                        "text": [
                            "```html",
                            "<!--set-->",
                            "<igx-combo [value]='newValue'></igx-combo>",
                            "```"
                        ],
                        "shortText": "Combo value"
                    }
                }
            },
            "collapsed": {
                "getter": {
                    "comment": {
                        "text": [
                            "```typescript",
                            "// get",
                            "let state = this.combo.collapsed;",
                            "```"
                        ],
                        "shortText": "Gets drop down state."
                    }
                }
            }
        }
    }
}
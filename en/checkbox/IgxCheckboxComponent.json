{
    "IgxCheckboxComponent": {
        "comment": {
            "text": [
                "The Ignite UI Checkbox is a selection control that allows users to make a binary choice. It behaves similarly",
                "to the native browser checkbox.",
                "",
                "Example:",
                "```html",
                "<igx-checkbox checked=\"true\">",
                "  simple checkbox",
                "</igx-checkbox>",
                "```",
                ""
            ],
            "shortText": [
                "**Ignite UI for Angular Checkbox** -",
                "[Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/checkbox.html)"
            ]
        },
        "properties": {
            "nativeCheckbox": {
                "comment": {
                    "shortText": [
                        "Returns reference to the native checkbox element.",
                        "```typescript",
                        "let checkboxElement =  this.checkbox.checkboxElement;",
                        "```"
                    ]
                }
            },
            "nativeLabel": {
                "comment": {
                    "shortText": [
                        "Returns reference to the native label element.",
                        "```typescript",
                        "let labelElement =  this.checkbox.nativeLabel;",
                        "```"
                    ]
                }
            },
            "placeholderLabel": {
                "comment": {
                    "shortText": [
                        "Returns reference to the label placeholder element.",
                        "```typescript",
                        "let labelPlaceholder =  this.checkbox.placeholderLabel;",
                        "```"
                    ]
                }
            },
            "id": {
                "comment": {
                    "shortText": [
                        "Sets/gets the `id` of the checkbox component.",
                        "If not set, the `id` of the first checkbox component will be `\"igx-checkbox-0\"`.",
                        "```html",
                        "<igx-checkbox id=\"my-first-checkbox\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let checkboxId =  this.checkbox.id;",
                        "```"
                    ]
                }
            },
            "labelId": {
                "comment": {
                    "shortText": [
                        "Sets/gets the id of the `label` element.",
                        "If not set, the id of the `label` in the first checkbox component will be `\"igx-checkbox-0-label\"`.",
                        "```html",
                        "<igx-checkbox labelId = \"Label1\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let labelId =  this.checkbox.labelId;",
                        "```"
                    ]
                }
            },
            "value": {
                "comment": {
                    "shortText": [
                        "Sets/gets the `value` attribute.",
                        "```html",
                        "<igx-checkbox [value] = \"'CheckboxValue'\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let value =  this.checkbox.value;",
                        "```"
                    ]
                }
            },
            "name": {
                "comment": {
                    "shortText": [
                        "Sets/gets the `name` attribute.",
                        "```html",
                        "<igx-checkbox name = \"Checkbox1\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let name =  this.checkbox.name;",
                        "```"
                    ]
                }
            },
            "tabindex": {
                "comment": {
                    "shortText": [
                        "Sets/gets the value of the `tabindex` attribute.",
                        "```html",
                        "<igx-checkbox [tabindex] = \"1\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let tabIndex =  this.checkbox.tabindex;",
                        "```"
                    ]
                }
            },
            "labelPosition": {
                "comment": {
                    "shortText": [
                        " Sets/gets the position of the `label`.",
                        " If not set, the `labelPosition` will have value `\"after\"`.",
                        "```html",
                        "<igx-checkbox labelPosition = \"before\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let labelPosition =  this.checkbox.labelPosition;",
                        "```"
                    ]
                }
            },
            "disableRipple": {
                "comment": {
                    "shortText": [
                        "Enables/Disables the ripple effect.",
                        "If not set, `disableRipple` will have value `false`.",
                        "```html",
                        "<igx-checkbox [disableRipple] = \"true\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let isRippleDisabled = this.checkbox.desableRipple;",
                        "```"
                    ]
                }
            },
            "required": {
                "comment": {
                    "shortText": [
                        "Sets/gets whether the checkbox is required.",
                        "If not set, `required` will have value `false`.",
                        "```html",
                        "<igx-checkbox [required] = \"true\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let isRequired =  this.checkbox.required;",
                        "```"
                    ]
                }
            },
            "ariaLabelledBy": {
                "comment": {
                    "shortText": [
                        "Sets/gets the `aria-labelledby` attribute.",
                        "If not set, the `aria-labelledby` will be equal to the value of `labelId` attribute.",
                        "```html",
                        "<igx-checkbox aria-labelledby = \"Checkbox1\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let ariaLabelledBy =  this.checkbox.ariaLabelledBy;",
                        "```"
                    ]
                }
            },
            "ariaLabel": {
                "comment": {
                    "shortText": [
                        "Sets/gets the value of the `aria-label` attribute.",
                        "```html",
                        "<igx-checkbox aria-label = \"Checkbox1\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let ariaLabel = this.checkbox.aruaLabel;",
                        "```"
                    ]
                }
            },
            "change": {
                "comment": {
                    "shortText": [
                        "An event that is emitted after the checkbox state is changed.",
                        "Provides references to the `IgxCheckboxComponent` and the `checked` property as event arguments."
                    ]
                }
            },
            "cssClass": {
                "comment": {
                    "shortText": [
                        "Returns the class of the checkbox component.",
                        "```typescript",
                        "let class =  this.checkbox.cssClass;",
                        "```"
                    ]
                }
            },
            "focused": {
                "comment": {
                    "shortText": [
                        "Sets/gets whether the checkbox component is on focus.",
                        "Default value is `false`.",
                        "```typescript",
                        "this.checkbox.focused =  true;",
                        "```",
                        "```typescript",
                        "let isFocused =  this.checkbox.focused;",
                        "```"
                    ]
                }
            },
            "indeterminate": {
                "comment": {
                    "shortText": [
                        "Sets/gets the checkbox indeterminate visual state.",
                        "Default value is `false`;",
                        "```html",
                        "<igx-checkbox [indeterminate] = \"true\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let isIndeterminate = this.checkbox.indeterminate;",
                        "```"
                    ]
                }
            },
            "checked": {
                "comment": {
                    "shortText": [
                        "Sets/gets whether the checkbox is checked.",
                        "Default value is `false`.",
                        "```html",
                        "<igx-checkbox [checked] = \"true\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let isChecked =  this.checkbox.checked;",
                        "```"
                    ]
                }
            },
            "disabled": {
                "comment": {
                    "shortText": [
                        "Sets/gets whether the checkbox is disabled.",
                        "Default value is `false`.",
                        "```html",
                        "<igx-checkbox [disabled] = \"true\"></igx-checkbox>",
                        "```",
                        "```typescript",
                        "let isDesabled = this.checkbox.disabled;",
                        "```"
                    ]
                }
            }
        },
        "methods": {
            "toggle": {
                "comment": {
                    "shortText": [
                        "If `disabled` is `false`, switches the `checked` state.",
                        "```typescript",
                        "this.checkbox.toggle();",
                        "```"
                    ]
                }
            }
        },
        "accessors": {},
        "functions": {}
    }
}
{
    "IgxTooltipTargetDirective": {
        "comment": {
            "text": [
                "The Ignite UI for Angular Tooltip Target directive is used to mark an HTML element in the markup as one that has a tooltip.",
                "The tooltip target is used in combination with the Ignite UI for Angular Tooltip by assigning the exported tooltip reference to the",
                "target's selector property.",
                "Example:",
                "```html",
                "<button [igxTooltipTarget]=\"tooltipRef\">Hover me</button>",
                "<span #tooltipRef=\"tooltip\" igxTooltip>Hello there, I am a tooltip!</span>",
                "```"
            ],
            "shortText": [
                "**Ignite UI for Angular Tooltip Target** -",
                "[Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/tooltip.html)"
            ]
        },
        "properties": {
            "showDelay": {
                "comment": {
                    "text": [
                        "```typescript",
                        "// get",
                        "let tooltipShowDelay = this.tooltipTarget.showDelay;",
                        "```",
                        "```html",
                        "<!--set-->",
                        "<button [igxTooltipTarget]=\"tooltipRef\" showDelay=\"1500\">Hover me</button>",
                        "<span #tooltipRef=\"tooltip\" igxTooltip>Hello there, I am a tooltip!</span>",
                        "```"
                    ],
                    "shortText": "Gets/sets the amount of milliseconds that should pass before showing the tooltip."
                }
            },
            "hideDelay": {
                "comment": {
                    "text": [
                        "```typescript",
                        "// get",
                        "let tooltipHideDelay = this.tooltipTarget.hideDelay;",
                        "```",
                        "```html",
                        "<!--set-->",
                        "<button [igxTooltipTarget]=\"tooltipRef\" hideDelay=\"1500\">Hover me</button>",
                        "<span #tooltipRef=\"tooltip\" igxTooltip>Hello there, I am a tooltip!</span>",
                        "```"
                    ],
                    "shortText": "Gets/sets the amount of milliseconds that should pass before hiding the tooltip."
                }
            },
            "tooltipDisabled": {
                "comment": {
                    "text": [
                        "```typescript",
                        "// get",
                        "let tooltipDisabledValue = this.tooltipTarget.tooltipDisabled;",
                        "```",
                        "```html",
                        "<!--set-->",
                        "<button [igxTooltipTarget]=\"tooltipRef\" [tooltipDisabled]=\"true\">Hover me</button>",
                        "<span #tooltipRef=\"tooltip\" igxTooltip>Hello there, I am a tooltip!</span>",
                        "```"
                    ],
                    "shortText": [
                        "Specifies if the tooltip should not show when hovering its target with the mouse. (defaults to false)",
                        "While setting this property to 'true' will disable the user interactions that shows/hides the tooltip,",
                        "the developer will still be able to show/hide the tooltip through the API."
                    ]
                }
            },
            "onTooltipShow": {
                "comment": {
                    "text": [
                        "```typescript",
                        "tooltipShowing(args: ITooltipShowEventArgs) {",
                        "   alert(\"Tooltip started showing!\");",
                        "}",
                        "```",
                        "```html",
                        "<button [igxTooltipTarget]=\"tooltipRef\"",
                        "        (onTooltipShow)='tooltipShowing($event)'>Hover me</button>",
                        "<span #tooltipRef=\"tooltip\" igxTooltip>Hello there, I am a tooltip!</span>",
                        "```"
                    ],
                    "shortText": [
                        "Emits an event when the tooltip that is associated with this target starts showing.",
                        "This event is fired before the start of the countdown to showing the tooltip."
                    ]
                }
            },
            "onTooltipHide": {
                "comment": {
                    "text": [
                        "```typescript",
                        "tooltipHiding(args: ITooltipHideEventArgs) {",
                        "   alert(\"Tooltip started hiding!\");",
                        "}",
                        "```",
                        "```html",
                        "<button [igxTooltipTarget]=\"tooltipRef\"",
                        "        (onTooltipHide)='tooltipHiding($event)'>Hover me</button>",
                        "<span #tooltipRef=\"tooltip\" igxTooltip>Hello there, I am a tooltip!</span>",
                        "```"
                    ],
                    "shortText": [
                        "Emits an event when the tooltip that is associated with this target starts hiding.",
                        "This event is fired before the start of the countdown to hiding the tooltip."
                    ]
                }
            },
            "overlaySettings": {
                "comment": {
                    "shortText": [
                        "Provide settings that control the toggle overlay positioning, interaction and scroll behavior.",
                        "```typescript",
                        "const settings: OverlaySettings = {",
                        "     closeOnOutsideClick: false,",
                        "     modal: false",
                        " }",
                        "```",
                        "---",
                        "```html",
                        "<!--set-->",
                        "<div igxToggleAction [overlaySettings]=\"settings\"></div>",
                        "```"
                    ]
                }
            },
            "outlet": {
                "comment": {
                    "text": [
                        "```html",
                        "<!--set-->",
                        "<div igxToggleAction [igxToggleOutlet]=\"outlet\"></div>",
                        "```",
                        "Where `outlet` in an instance of `IgxOverlayOutletDirective` or an `ElementRef`"
                    ],
                    "shortText": "Determines where the toggle element overlay should be attached."
                }
            }
        },
        "methods": {
            "showTooltip": {
                "comment": {
                    "text": [
                        "```typescript",
                        "this.tooltipTarget.showTooltip();",
                        "```"
                    ],
                    "shortText": "Shows the tooltip by respecting the 'showDelay' property."
                }
            },
            "hideTooltip": {
                "comment": {
                    "text": [
                        "```typescript",
                        "this.tooltipTarget.hideTooltip();",
                        "```"
                    ],
                    "shortText": "Hides the tooltip by respecting the 'hideDelay' property."
                }
            }
        },
        "accessors": {
            "nativeElement": {
                "getter": {
                    "comment": {
                        "text": [
                            "```typescript",
                            "let tooltipTargetElement = this.tooltipTarget.nativeElement;",
                            "```"
                        ],
                        "shortText": "Gets the respective native element of the directive."
                    }
                }
            },
            "tooltipHidden": {
                "getter": {
                    "comment": {
                        "text": [
                            "```typescript",
                            "let tooltipHiddenValue = this.tooltipTarget.tooltipHidden;",
                            "```"
                        ],
                        "shortText": "Indicates if the tooltip that is is associated with this target is currently hidden."
                    }
                }
            }
        }
    }
}
{
    "IgxListItemComponent": {
        "properties": {
            "isHeader": {
                "comment": {
                    "shortText": [
                        "Sets/gets whether the `list item` is a header.",
                        "```html",
                        "<igx-list-item [isHeader] = \"true\">Header</igx-list-item>",
                        "```",
                        "```typescript",
                        "let isHeader =  this.listItem.isHeader;",
                        "```"
                    ]
                }
            },
            "hidden": {
                "comment": {
                    "shortText": [
                        "Sets/gets whether the `list item` is hidden.",
                        "By default the `hidden` value is `false`.",
                        "```html",
                        "<igx-list-item [hidden] = \"true\">Hidden Item</igx-list-item>",
                        "```",
                        "```typescript",
                        "let isHidden =  this.listItem.hidden;",
                        "```"
                    ]
                }
            },
            "ariaLabel": {
                "comment": {
                    "shortText": [
                        "Sets/gets the `aria-label` attribute of the `list item`.",
                        "```typescript",
                        "this.listItem.ariaLabel = \"Item1\";",
                        "```",
                        "```typescript",
                        "let itemAriaLabel = this.listItem.ariaLabel;",
                        "```"
                    ]
                }
            },
            "touchAction": {
                "comment": {
                    "shortText": [
                        "Gets the `touch-action` style of the `list item`.",
                        "```typescript",
                        "let touchAction = this.listItem.touchAction;",
                        "```"
                    ]
                }
            }
        },
        "methods": {},
        "accessors": {
            "role": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets the `role` attribute of the `list item`.",
                            "```typescript",
                            "let itemRole =  this.listItem.role;",
                            "```"
                        ]
                    }
                }
            },
            "headerStyle": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Indicates whether `list item` should have header style.",
                            "```typescript",
                            "let headerStyle =  this.listItem.headerStyle;",
                            "```"
                        ]
                    }
                }
            },
            "innerStyle": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Applies the inner style of the `list item` if the item is not counted as header.",
                            "```typescript",
                            "let innerStyle =  this.listItem.innerStyle;",
                            "```"
                        ]
                    }
                }
            },
            "display": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Returns string value which describes the display mode of the `list item`.",
                            "```typescript",
                            "let isHidden = this.listItem.display;",
                            "```"
                        ]
                    }
                }
            },
            "panState": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets the `panState` of a `list item`.",
                            "```typescript",
                            "let itemPanState =  this.listItem.panState;",
                            "```"
                        ]
                    }
                }
            },
            "index": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets the `index` of a `list item`.",
                            "```typescript",
                            "let itemIndex =  this.listItem.index;",
                            "```"
                        ]
                    }
                }
            },
            "element": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Returns an element reference to the list item.",
                            "```typescript",
                            "let listItemElement =  this.listItem.element.",
                            "```"
                        ]
                    }
                }
            },
            "width": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets the width of a `list item`.",
                            "```typescript",
                            "let itemWidth = this.listItem.width;",
                            "```"
                        ]
                    }
                }
            },
            "maxLeft": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets the maximum left position of the `list item`.",
                            "```typescript",
                            "let maxLeft = this.listItem.maxLeft;",
                            "```"
                        ]
                    }
                }
            },
            "maxRight": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets the maximum right position of the `list item`.",
                            "```typescript",
                            "let maxRight = this.listItem.maxRight;",
                            "```"
                        ]
                    }
                }
            }
        },
        "functions": {}
    }
}
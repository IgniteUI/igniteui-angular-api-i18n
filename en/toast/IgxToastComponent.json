{
    "IgxToastComponent": {
        "comment": {
            "text": [
                "The Ignite UI Toast provides information and warning messages that are non-interactive and cannot",
                "be dismissed by the user. Toasts can be displayed at the bottom, middle, or top of the page.",
                "",
                "Example:",
                "```html",
                "<button (click)=\"toast.show()\">Show notification</button>",
                "<igx-toast #toast",
                "          message=\"Notification displayed\"",
                "          displayTime=\"1000\">",
                "</igx-toast>",
                "```",
                ""
            ],
            "shortText": [
                "**Ignite UI for Angular Toast** -",
                "[Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/toast.html)"
            ]
        },
        "properties": {
            "id": {
                "comment": {
                    "shortText": [
                        "Sets/gets the `id` of the toast.",
                        "If not set, the `id` will have value `\"igx-toast-0\"`.",
                        "```html",
                        "<igx-toast id = \"my-first-toast\"></igx-toast>",
                        "```",
                        "```typescript",
                        "let toastId = this.toast.id;",
                        "```"
                    ]
                }
            },
            "onShowing": {
                "comment": {
                    "shortText": [
                        "Emits an event prior the toast is shown.",
                        "Provides reference to the `IgxToastComponent` as event argument.",
                        "```html",
                        "<igx-toast (onShowing) = \"onShowing($event)\"></igx-toast>",
                        "```"
                    ]
                }
            },
            "onShown": {
                "comment": {
                    "shortText": [
                        "Emits an event when the toast is shown.",
                        "Provides reference to the `IgxToastComponent` as event argument.",
                        "```html",
                        "<igx-toast (onShown) = \"onShown($event)\"></igx-toast>",
                        "```"
                    ]
                }
            },
            "onHiding": {
                "comment": {
                    "shortText": [
                        "Emits an event prior the toast is hidden.",
                        "Provides reference to the `IgxToastComponent` as event argument.",
                        "```html",
                        "<igx-toast (onHiding) = \"onHiding($event)\"></igx-toast>",
                        "```"
                    ]
                }
            },
            "onHidden": {
                "comment": {
                    "shortText": [
                        " Emits an event when the toast is hidden.",
                        " Provides reference to the `IgxToastComponent` as event argument.",
                        "```html",
                        "<igx-toast (onHidden) = \"onHidden($event)\"></igx-toast>",
                        "```"
                    ]
                }
            },
            "role": {
                "comment": {
                    "shortText": [
                        "Sets/gets the `role` attribute.",
                        "If not set, `role` will have value `\"alert\"`.",
                        "```html",
                        "<igx-toast [role] = \"'notify'\"></igx-toast>",
                        "```",
                        "```typescript",
                        "let toastRole = this.toast.role;",
                        "```"
                    ]
                }
            },
            "autoHide": {
                "comment": {
                    "shortText": [
                        "Sets/gets whether the toast will be hidden after the `displayTime` is over.",
                        "Default value is `true`.",
                        "```html",
                        "<igx-toast [autoHide] = \"false\"></igx-toast>",
                        "```",
                        "```typescript",
                        "let autoHide = this.toast.autoHide;",
                        "```"
                    ]
                }
            },
            "displayTime": {
                "comment": {
                    "shortText": [
                        "Sets/gets the duration of time span(in milliseconds) which the toast will be visible",
                        "after it is being shown.",
                        "Default value is `4000`.",
                        "```html",
                        "<igx-toast [displayTime] = \"2500\"></igx-toast>",
                        "```",
                        "```typescript",
                        "let displayTime = this.toast.displayTime;",
                        "```"
                    ]
                }
            },
            "isVisible": {
                "comment": {
                    "shortText": [
                        "Enables/Disables the visibility of the toast.",
                        "If not set, the `isVisible` attribute will have value `false`.",
                        "```html",
                        "<igx-toast [isVisible] = \"true\"></igx-toast>",
                        "```",
                        "```typescript",
                        "let isVisible = this.toast.isVisible;",
                        "```"
                    ]
                }
            },
            "message": {
                "comment": {
                    "shortText": [
                        "Sets/gets the message that will be shown by the toast.",
                        "```html",
                        "<igx-toast [message] = \"Notification\"></igx-toast>",
                        "```",
                        "```typescript",
                        "let toastMessage = this.toast.message;",
                        "```"
                    ]
                }
            },
            "position": {
                "comment": {
                    "shortText": [
                        "Sets/gets the position of the toast.",
                        "If not set, the `position` attribute will have value `IgxToastPosition.Bottom`.",
                        "```html",
                        "<igx-toast [position] = \"top\"></igx-toast>",
                        "```",
                        "```typescript",
                        "let toastPosition = this.toast.position;",
                        "```"
                    ]
                }
            }
        },
        "methods": {
            "show": {
                "comment": {
                    "shortText": [
                        "Shows the toast.",
                        "If `autoHide` is enabled, the toast will hide after `displayTime` is over.",
                        "```typescript",
                        "this.toast.show();",
                        "```"
                    ]
                }
            },
            "hide": {
                "comment": {
                    "shortText": [
                        "Hides the toast.",
                        "```typescript",
                        "this.toast.hide();",
                        "```"
                    ]
                }
            },
            "toggle": {
                "comment": {
                    "shortText": [
                        "Toggles the visible state of the toast.",
                        "```typescript",
                        "this.toast.toggle();",
                        "```"
                    ]
                }
            },
            "mapPositionToClassName": {
                "comment": {
                    "shortText": [
                        "Sets/gets the class name of the toast based on the `position` value.",
                        "```typescript",
                        "let className =  this.toast.mapPositionToClassName();",
                        "```"
                    ]
                }
            }
        },
        "accessors": {
            "element": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "Gets the nativeElement of the toast.",
                            "```typescript",
                            "let nativeElement = this.toast.element;",
                            "```"
                        ]
                    }
                }
            }
        },
        "functions": {}
    }
}
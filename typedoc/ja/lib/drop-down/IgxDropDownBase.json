{
    "IgxDropDownBase": {
        "comment": {
            "shortText": [
                "次でドロップダウン コンポーネントを定義する抽象クラス。",
                "クラスと表示スタイルのためのプロパティ。",
                "`IgxDropDownItemBase` タイプの項目のコレクション。",
                "コレクションの項目をナビゲート (強調表示/フォーカス) する ためのプロパティとメソッド。",
                "コレクションの項目を選択するためのプロパティとメソッド。"
            ]
        },
        "properties": {
            "onSelection": {
                "comment": {
                    "text": [
                        "```html",
                        "<igx-drop-down (onSelection)='handleSelection()'></igx-drop-down>",
                        "```"
                    ],
                    "shortText": "選択を完了する前にアイテム選択が変更されるときに発生されます。"
                }
            },
            "width": {
                "comment": {
                    "text": [
                        "```typescript",
                        "// 取得",
                        "let myDropDownCurrentWidth = this.dropdown.width;",
                        "```",
                        "```html",
                        "<!--set-->",
                        "<igx-drop-down [width]='160px'></igx-drop-down>",
                        "```"
                    ],
                    "shortText": " ドロップダウンの幅を取得または設定します。"
                }
            },
            "height": {
                "comment": {
                    "text": [
                        "```typescript",
                        "// 取得",
                        "let myDropDownCurrentHeight = this.dropdown.height;",
                        "```",
                        "```html",
                        "<!--set-->",
                        "<igx-drop-down [height]='400px'></igx-drop-down>",
                        "```"
                    ],
                    "shortText": "ドロップダウンの高さを取得または設定します。"
                }
            },
            "id": {
                "comment": {
                    "text": [
                        "```typescript",
                        "// 取得",
                        "let myDropDownCurrentId = this.dropdown.id;",
                        "```",
                        "```html",
                        "<!--set-->",
                        "<igx-drop-down [id]='newDropDownId'></igx-drop-down>",
                        "```"
                    ],
                    "shortText": "ドロップダウンの id を取得または設定します。"
                }
            },
            "maxHeight": {
                "comment": {
                    "text": [
                        "```typescript",
                        "// 取得",
                        "let maxHeight = this.dropdown.maxHeight;",
                        "```",
                        "```html",
                        "<!--set-->",
                        "<igx-drop-down [maxHeight]='200px'></igx-drop-down>",
                        "```"
                    ],
                    "shortText": "ドロップ ダウンのコンテナの最大の高さを取得または設定します。"
                }
            },
            "collapsed": {
                "comment": {
                    "shortText": "ドロップダウンが閉じたかどうかを取得します。"
                }
            }
        },
        "methods": {
            "onItemActionKey": {
                "comment": {
                    "shortText": "Keydown ハンドラー"
                }
            },
            "navigateItem": {
                "comment": {
                    "parameters": {
                        "newIndex": {
                            "comment": {
                                "text": "Number - `items` コレクションに含まれる項目のインデックス。"
                            }
                        }
                    },
                    "tags": {},
                    "shortText": "指定されたインデックスにある項目へ移動。"
                }
            }
        },
        "accessors": {
            "items": {
                "getter": {
                    "comment": {
                        "text": [
                            "```typescript",
                            "let myDropDownItems = this.dropdown.items;",
                            "```"
                        ],
                        "shortText": "すべてのヘッダー以外の項目を取得します。"
                    }
                }
            },
            "headers": {
                "getter": {
                    "comment": {
                        "text": [
                            "```typescript",
                            "let myDropDownHeaderItems = this.dropdown.headers;",
                            "```"
                        ],
                        "shortText": "すべてのヘッダー項目を取得します。"
                    }
                }
            },
            "element": {
                "getter": {
                    "comment": {
                        "text": [
                            "```typescript",
                            "let myDropDownElement = this.dropdown.element;",
                            "```"
                        ],
                        "shortText": "ドロップダウンの HTML 要素を取得します。"
                    }
                }
            },
            "displayDensity": {
                "getter": {
                    "comment": {
                        "shortText": [
                            "コンポーネントのテーマを返します。",
                            "デフォルト テーマは `comfortable` です。",
                            "利用可能なオプションは `comfortable`、`cosy`、および `compact` です。",
                            "```typescript",
                            "let componentTheme = this.component.displayDensity;",
                            "```"
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "shortText": "コンポーネントのテーマを設定します。"
                    }
                }
            }
        }
    }
}
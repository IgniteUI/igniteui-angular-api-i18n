{
    "IgxComboComponent": {
        "comment": {
            "blockTags": [
                {
                    "tag": "@igxModule",
                    "content": [
                        {
                            "kind": "text",
                            "text": "IgxComboModule"
                        }
                    ]
                },
                {
                    "tag": "@igxTheme",
                    "content": [
                        {
                            "kind": "text",
                            "text": "igx-combo-theme"
                        }
                    ]
                },
                {
                    "tag": "@igxKeywords",
                    "content": [
                        {
                            "kind": "text",
                            "text": "combobox, combo selection"
                        }
                    ]
                },
                {
                    "tag": "@igxGroup",
                    "content": [
                        {
                            "kind": "text",
                            "text": "グリッド & リスト"
                        }
                    ]
                },
                {
                    "tag": "@備考",
                    "content": [
                        {
                            "kind": "text",
                            "text": "項目をフィルターする機能、および提供されたデータで単一または複数の選択を実行する機能を提供します。\nまた、キーボード ナビゲーションおよびカスタム スタイル設定機能を公開します。"
                        }
                    ]
                },
                {
                    "tag": "@例",
                    "content": [
                        {
                            "kind": "code",
                            "text": "```html\n<igx-combo [itemsMaxHeight]=\"250\" [data]=\"locationData\"\n [displayKey]=\"'field'\" [valueKey]=\"'field'\"\n placeholder=\"Location(s)\" searchPlaceholder=\"Search...\">\n</igx-combo>\n```"
                        }
                    ]
                }
            ],
            "modifierTags": {},
            "summary": [
                {
                    "kind": "text",
                    "text": "編集可能な機能を提供するドロップダウン リストを表します。ユーザーは定義済みのリストからオプションを選択できます。"
                }
            ]
        },
        "properties": {
            "autoFocusSearch": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@Input",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "`opened`"
                                },
                                {
                                    "kind": "text",
                                    "text": " イベントが呼び出された後にコンボの検索ボックスにフォーカスするかどうかを制御する\n @Inputプロパティ。"
                                },
                                {
                                    "kind": "code",
                                    "text": "`false`"
                                },
                                {
                                    "kind": "text",
                                    "text": " の場合、代わりにコンボのリスト項目コンテナーがフォーカスされます。"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "\n"
                        }
                    ]
                }
            },
            "searchPlaceholder": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "コンボ ドロップダウンの検索フィールドのプレースホルダー値を定義します\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// 取得\nlet myComboSearchPlaceholder = this.combo.searchPlaceholder;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--設定-->\n<igx-combo [searchPlaceholder]='newPlaceHolder'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "selectionChanging": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "選択を完了する前に項目選択が変更されるときに発生します。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-combo (selectionChanging)='handleSelection()'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "showSearchCaseIcon": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "caseSensitive アイコンを検索入力に表示するかどうかを定義します。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// 取得\nlet myComboShowSearchCaseIcon = this.combo.showSearchCaseIcon;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--設定-->\n<igx-combo [showSearchCaseIcon]='true'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "overlaySettings": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "コンボの項目リストの表示方法を制御するカスタム オーバーレイ設定を設定します。\n次を設定:\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-combo [overlaySettings] = \"customOverlaySettings\"></igx-combo>\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n const customSettings = { positionStrategy: { settings: { target: myTarget } } };\n combo.overlaySettings = customSettings;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\nコンボで使用されるカスタム オーバーレイ設定を取得します。\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n const comboOverlaySettings: OverlaySettings = myCombo.overlaySettings;\n```"
                        }
                    ]
                }
            },
            "id": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "コンボの id を取得または設定します。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// 取得\nlet id = this.combo.id;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--設定-->\n<igx-combo [id]='combo1'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "width": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "要素のスタイルの幅を設定します。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// 取得\nlet myComboWidth = this.combo.width;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--設定-->\n<igx-combo [width]='250px'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "allowCustomValues": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "カスタム値をコレクションに追加できるかどうかを制御します。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// 取得\nlet comboAllowsCustomValues = this.combo.allowCustomValues;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--設定-->\n<igx-combo [allowCustomValues]='true'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "itemsWidth": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "ドロップダウン リストの幅を構成します。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// 取得\nlet myComboItemsWidth = this.combo.itemsWidth;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--設定-->\n<igx-combo [itemsWidth] = '\"180px\"'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "placeholder": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "コンボの値フィールドのプレースホルダー値を定義します。n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// 取得\nlet myComboPlaceholder = this.combo.placeholder;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--設定-->\n<igx-combo [placeholder]='newPlaceHolder'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "valueKey": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "値を決定するためにデータ ソースのどの列を使用するかを決定します。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// 取得\nlet myComboValueKey = this.combo.valueKey;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!--設定-->\n<igx-combo [valueKey]='myKey'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "ariaLabelledBy": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@Input",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "aria-labelledby 属性を設定する @Input プロパティ。\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-combo [ariaLabelledBy]=\"'label1'\">\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "\n"
                        }
                    ]
                }
            },
            "disabled": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@Input",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "コンボを有効/無効にする @Input プロパティ。デフォルトは "
                                },
                                {
                                    "kind": "code",
                                    "text": "`false`"
                                },
                                {
                                    "kind": "text",
                                    "text": " です。\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-combo [disabled]=\"'true'\">\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "\n"
                        }
                    ]
                }
            },
            "opening": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "ドロップダウンが開く前に発生します。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-combo opening='handleOpening($event)'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "opened": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "ドロップダウンが開いた後に発生します。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-combo (opened)='handleOpened($event)'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "closing": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "ドロップダウンが閉じる前に発生します。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-combo (closing)='handleClosing($event)'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "closed": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "ドロップダウンが閉じられた後に発生します。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-combo (closed)='handleClosed($event)'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "addition": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "項目がデータ コレクションに追加されているときに発生します。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-combo (addition)='handleAdditionEvent($event)'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "searchInputUpdate": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "検索入力の値が変更 (入力、貼り付け、クリアなど) するときに発生します。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-combo (searchInputUpdate)='handleSearchInputEvent($event)'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "dataPreLoad": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "新しいデータの塊が仮想化から読み込まれたときに発生します。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-combo (dataPreLoad)='handleDataPreloadEvent($event)'></igx-combo>\n```"
                        }
                    ]
                }
            },
            "itemTemplate": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "カスタム テンプレートがある場合は、コンボ リストの ITEMS の描画に使用されます。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// Typescript に設定\nconst myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\nmyComponent.combo.itemTemplate = myCustomTemplate;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!-- Markup に設定 -->\n <igx-combo #combo>\n     ...\n     <ng-template igxComboItem let-item let-key=\"valueKey\">\n         <div class=\"custom-item\">\n             <div class=\"custom-item__name\">{{ item[key] }}</div>\n             <div class=\"custom-item__cost\">{{ item.cost }}</div>\n         </div>\n     </ng-template>\n </igx-combo>\n```"
                        }
                    ]
                }
            },
            "headerTemplate": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "カスタム テンプレートがある場合は、コンボ項目リストのための HEADER の描画に使用されます。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// Typescript に設定\nconst myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\nmyComponent.combo.headerTemplate = myCustomTemplate;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!-- Markup に設定 -->\n <igx-combo #combo>\n     ...\n     <ng-template igxComboHeader>\n         <div class=\"combo__header\">\n             This is a custom header\n         </div>\n     </ng-template>\n </igx-combo>\n```"
                        }
                    ]
                }
            },
            "footerTemplate": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "カスタム テンプレートがある場合は、コンボ項目リストのための FOOTER の描画に使用されます\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// Typescript に設定\nconst myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\nmyComponent.combo.footerTemplate = myCustomTemplate;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!-- Markup に設定 -->\n <igx-combo #combo>\n     ...\n     <ng-template igxComboFooter>\n         <div class=\"combo__footer\">\n             This is a custom footer\n         </div>\n     </ng-template>\n </igx-combo>\n```"
                        }
                    ]
                }
            },
            "headerItemTemplate": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "カスタム テンプレートがある場合は、コンボ リスト内のグループのため HEADER ITEMS の描画に使用されます。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// Typescript に設定\nconst myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\nmyComponent.combo.headerItemTemplate = myCustomTemplate;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!-- Markup に設定 -->\n <igx-combo #combo>\n     ...\n     <ng-template igxComboHeaderItem let-item let-key=\"groupKey\">\n         <div class=\"custom-item--group\">Group header for {{ item[key] }}</div>\n     </ng-template>\n </igx-combo>\n```"
                        }
                    ]
                }
            },
            "addItemTemplate": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "カスタム テンプレートがある場合は、コンボ ドロップダウンの ADD BUTTON の描画に使用されます。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// Typescript に設定\nconst myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\nmyComponent.combo.addItemTemplate = myCustomTemplate;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!-- Set in markup -->\n <igx-combo #combo>\n     ...\n     <ng-template igxComboAddItem>\n         <button type=\"button\" igxButton=\"raised\" class=\"combo__add-button\">\n             Click to add item\n         </button>\n     </ng-template>\n </igx-combo>\n```"
                        }
                    ]
                }
            },
            "emptyTemplate": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "カスタム テンプレートがある場合は、コンボ ドロップダウンの ADD BUTTON の描画に使用されます。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// Typescript に設定\nconst myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\nmyComponent.combo.emptyTemplate = myCustomTemplate;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!-- Markup に設定 -->\n <igx-combo #combo>\n     ...\n     <ng-template igxComboEmpty>\n         <div class=\"combo--empty\">\n             There are no items to display\n         </div>\n     </ng-template>\n </igx-combo>\n```"
                        }
                    ]
                }
            },
            "toggleIconTemplate": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "カスタム テンプレートがある場合は、コンボ TOGGLE (開く/閉じる) ボタンを描画するために使用されます。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// Typescript に設定\nconst myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\nmyComponent.combo.toggleIconTemplate = myCustomTemplate;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!-- Markup に設定 -->\n <igx-combo #combo>\n     ...\n     <ng-template igxComboToggleIcon let-collapsed>\n         <igx-icon>{{ collapsed ? 'remove_circle' : 'remove_circle_outline'}}</igx-icon>\n     </ng-template>\n </igx-combo>\n```"
                        }
                    ]
                }
            },
            "clearIconTemplate": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "カスタム テンプレートがある場合は、コンボ CLEAR ボタンを描画するために使用されます。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// Typescript に設定\nconst myCustomTemplate: TemplateRef<any> = myComponent.customTemplate;\nmyComponent.combo.clearIconTemplate = myCustomTemplate;\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<!-- Markup に設定 -->\n <igx-combo #combo>\n     ...\n     <ng-template igxComboClearIcon>\n         <igx-icon>clear</igx-icon>\n     </ng-template>\n </igx-combo>\n```"
                        }
                    ]
                }
            }
        },
        "methods": {
            "select": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "定義済みの項目を選択します。"
                        }
                    ]
                }
            },
            "deselect": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "定義済みの項目の選択を解除します。"
                        }
                    ]
                }
            },
            "selectAllItems": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "すべての項目 (フィルター済み) を選択します。"
                        }
                    ]
                }
            },
            "deselectAllItems": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "フィルター済みのすべての項目の選択を解除します。"
                        }
                    ]
                }
            },
            "setSelectedItem": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "1 つの項目を選択/選択解除します。"
                        }
                    ]
                }
            },
            "__type": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@例",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n <igx-comb #combo [data]=\"localData\" [filterFunction]=\"filterFunction\"></igx-combo>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "コンボのカスタム フィルタリング機能を取得または設定します。"
                        }
                    ]
                }
            },
            "toggle": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "コンボを開く/閉じるメソッド。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<button type=\"button\" (click)=\"combo.toggle()\">Toggle Combo</button>\n<igx-combo #combo></igx-combo>\n```"
                        }
                    ]
                }
            },
            "open": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "コンボを開くメソッド。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<button type=\"button\" (click)=\"combo.open()\">Open Combo</button>\n<igx-combo #combo></igx-combo>\n```"
                        }
                    ]
                }
            },
            "close": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "コンボを閉じるメソッド。\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<button type=\"button\" (click)=\"combo.close()\">Close Combo</button>\n<igx-combo #combo></igx-combo>\n```"
                        }
                    ]
                }
            },
            "triggerCheck": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "コンボを開くメソッド。"
                        }
                    ]
                }
            },
            "getComponentSizeStyles": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "表示密度の値に基づいて "
                        },
                        {
                            "kind": "code",
                            "text": "`--component-size`"
                        },
                        {
                            "kind": "text",
                            "text": " CSS 変数を設定します。"
                        }
                    ]
                }
            }
        },
        "accessors": {
            "filterable": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@非推奨",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "バージョン 14.0.0。IComboFilteringOptions.filterable を使用してください。\n\nリストでフィルタリングを有効/無効にする"
                                    }
                                ]
                            },
                            {
                                "tag": "@Input",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "プロパティ。デフォルトは "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`true`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " です。\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-combo [filterable]=\"false\">\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": []
                    }
                }
            },
            "itemsMaxHeight": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "ドロップダウン リストの高さを構成します。\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// 取得\nlet myComboItemsMaxHeight = this.combo.itemsMaxHeight;\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<!--設定-->\n<igx-combo [itemsMaxHeight]='320'></igx-combo>\n```"
                            }
                        ]
                    }
                }
            },
            "itemHeight": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "ドロップダウン リスト項目の高さを構成します。\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// 取得\nlet myComboItemHeight = this.combo.itemHeight;\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<!--設定-->\n<igx-combo [itemHeight]='32'></igx-combo>\n```"
                            }
                        ]
                    }
                }
            },
            "data": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "コンボのデータ ソース。\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<!--設定-->\n<igx-combo [data]='items'></igx-combo>\n```"
                            }
                        ]
                    }
                }
            },
            "displayKey": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "表示値を決定するためにデータ ソースのどの列を使用するかを決定します。\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// 取得\nlet myComboDisplayKey = this.combo.displayKey;\n\n// 設定\nthis.combo.displayKey = 'val';\n\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<!--設定-->\n<igx-combo [displayKey]='myDisplayKey'></igx-combo>\n```"
                            }
                        ]
                    }
                }
            },
            "groupKey": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "項目リストで項目をグループ化する項目プロパティ。データが Object[] 型ではない場合に利用できません。\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// 取得\nlet currentGroupKey = this.combo.groupKey;\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "項目リストで項目をグループ化する項目プロパティ。データが Object[] 型ではない場合に利用できません。\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<!--設定-->\n<igx-combo [groupKey]='newGroupKey'></igx-combo>\n```"
                            }
                        ]
                    }
                }
            },
            "groupSortingDirection": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@Input",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "グループのソート順序を設定する @Input プロパティ。"
                                    }
                                ]
                            },
                            {
                                "tag": "@例",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-combo [groupSortingDirection]=\"groupSortingDirection\"></igx-combo>\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```typescript\npublic groupSortingDirection = SortingDirection.Asc;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "\n"
                            }
                        ]
                    }
                }
            },
            "type": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@Input",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "コンボのスタイルを設定する @Input プロパティ。\n有効な値は "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`line`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "、"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`box`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "、"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`border`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " および "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`search`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " です。デフォルトは "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`box`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " です。\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-combo [type]=\"'line'\">\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "\n"
                            }
                        ]
                    }
                }
            },
            "resourceStrings": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@備考",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "デフォルトで EN リソースを使用します。"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "リソース文字列を取得/設定します。"
                            }
                        ]
                    }
                }
            },
            "valid": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "フォームで使用時のコントロールが有効化どうかを取得します。\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// 取得\nlet valid = this.combo.valid;\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "フォームで使用時のコントロールが有効化どうかを設定します。\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// 設定\nthis.combo.valid = IgxComboState.INVALID;\n```"
                            }
                        ]
                    }
                }
            },
            "value": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "コンボ内で選択した項目の値です。\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// 取得\nlet comboValue = this.combo.value;\n```"
                            }
                        ]
                    }
                }
            },
            "displayValue": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "コンボ入力に表示するテキスト。\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// 取得\nlet comboDisplayValue = this.combo.displayValue;\n```"
                            }
                        ]
                    }
                }
            },
            "virtualizationState": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "仮想化データの現在の状態を定義します。"
                            },
                            {
                                "kind": "code",
                                "text": "`startIndex`"
                            },
                            {
                                "kind": "text",
                                "text": " と "
                            },
                            {
                                "kind": "code",
                                "text": "`chunkSize`"
                            },
                            {
                                "kind": "text",
                                "text": " を含みます。\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// 取得\nlet state = this.combo.virtualizationState;\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "仮想化データの現在の状態を設定します。\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// 設定\nthis.combo.virtualizationState(state);\n```"
                            }
                        ]
                    }
                }
            },
            "collapsed": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "ドロップダウン状態を取得します。\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nlet state = this.combo.collapsed;\n```"
                            }
                        ]
                    }
                }
            },
            "totalItemCount": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "リモート サービスを使用する場合、仮想データ項目の合計数を取得します。\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// 取得\nlet count = this.combo.totalItemCount;\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "リモート サービスを使用する場合、仮想データ項目の合計数を設定します。\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// 設定\nthis.combo.totalItemCount(remoteService.count);\n```"
                            }
                        ]
                    }
                }
            },
            "filteringOptions": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "コンボ項目をフィルタリングする方法を設定します。\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// 取得\nlet myFilteringOptions = this.combo.filteringOptions;\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<!--設定-->\n<igx-combo [filteringOptions]='myFilteringOptions'></igx-combo>\n```"
                            }
                        ]
                    }
                }
            },
            "selection": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@返却",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "選択された項目の配列\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nlet mySelection = this.combo.selection;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "現在の選択状態を取得します。"
                            }
                        ]
                    }
                }
            },
            "displayDensity": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@非推奨",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "バージョン 16.1.x 以降。\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`--ig-size`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " CSS カスタム プロパティを使用してください。"
                                    }
                                ]
                            },
                            {
                                "tag": "@参照",
                                "content": [
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@link",
                                        "text": "[アップデート ガイド](https://jp.infragistics.com/products/ignite-ui-angular/angular/components/general/update-guide#160x-から-161x-の場合)"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nコンポーネントのテーマを返します。\nデフォルトのテーマは "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`comfortable`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " です。\n利用可能なオプションは "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`comfortable`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "、"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`cosy`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "、または "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`compact`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " です。\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nlet componentTheme = this.component.displayDensity;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": []
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "コンポーネントのテーマを設定します。"
                            }
                        ]
                    }
                }
            }
        }
    }
}
{
    "IgxOverlayService": {
        "comment": {
            "blockTags": [],
            "modifierTags": {},
            "summary": [
                {
                    "kind": "text",
                    "text": "[Documentation](https://www.infragistics.com/products/ignite-ui-angular/angular/components/overlay-main)\nThe overlay service allows users to show components on overlay div above all other elements in the page."
                }
            ]
        },
        "properties": {
            "opening": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted just before the overlay content starts to open.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nopening(event: OverlayCancelableEventArgs){\n    const opening = event;\n}\n```"
                        }
                    ]
                }
            },
            "opened": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after the overlay content is opened and all animations are finished.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nopened(event: OverlayEventArgs){\n    const opened = event;\n}\n```"
                        }
                    ]
                }
            },
            "closing": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted just before the overlay content starts to close.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nclosing(event: OverlayCancelableEventArgs){\n    const closing = event;\n}\n```"
                        }
                    ]
                }
            },
            "closed": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after the overlay content is closed and all animations are finished.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nclosed(event: OverlayEventArgs){\n    const closed = event;\n}\n```"
                        }
                    ]
                }
            },
            "contentAppending": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted before the content is appended to the overlay.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\ncontentAppending(event: OverlayEventArgs){\n    const contentAppending = event;\n}\n```"
                        }
                    ]
                }
            },
            "contentAppended": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after the content is appended to the overlay, and before animations are started.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\ncontentAppended(event: OverlayEventArgs){\n    const contentAppended = event;\n}\n```"
                        }
                    ]
                }
            },
            "animationStarting": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted just before the overlay animation start.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nanimationStarting(event: OverlayAnimationEventArgs){\n    const animationStarting = event;\n}\n```"
                        }
                    ]
                }
            }
        },
        "methods": {
            "createAbsoluteOverlaySettings": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Non-modal overlay settings based on Global or Container position strategy and the provided position."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Creates overlay settings with global or container position strategy and preset position settings"
                        }
                    ]
                }
            },
            "createRelativeOverlaySettings": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Non-modal overlay settings based on the provided target, strategy and position."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Creates overlay settings with auto, connected or elastic position strategy and preset position settings"
                        }
                    ]
                }
            },
            "attach": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Generates an Id. Provide this Id when calling the "
                        },
                        {
                            "kind": "code",
                            "text": "`show(id)`"
                        },
                        {
                            "kind": "text",
                            "text": " method"
                        }
                    ]
                }
            },
            "detach": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Remove overlay with the provided id."
                        }
                    ]
                }
            },
            "detachAll": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Remove all the overlays.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.overlay.detachAll();\n```"
                        }
                    ]
                }
            },
            "show": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Shows the overlay for provided id."
                        }
                    ]
                }
            },
            "hide": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Hides the component with the ID provided as a parameter.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.overlay.hide(id);\n```"
                        }
                    ]
                }
            },
            "hideAll": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Hides all the components and the overlay.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nthis.overlay.hideAll();\n```"
                        }
                    ]
                }
            },
            "reposition": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Repositions the component with ID provided as a parameter."
                        }
                    ]
                }
            },
            "setOffset": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Offsets the content along the corresponding axis by the provided amount"
                        }
                    ]
                }
            }
        },
        "accessors": {}
    }
}
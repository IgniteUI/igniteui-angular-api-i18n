{
    "IgxToggleDirective": {
        "properties": {
            "opened": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "onToggleOpened(event) {",
                        "   alert(\"Toggle opened!\");",
                        "}",
                        "```",
                        "```html",
                        "<div",
                        "  igxToggle",
                        "  (onOpened)='onToggleOpened($event)'>",
                        "</div>",
                        "```"
                    ],
                    "shortText": "Emits an event after the toggle container is opened."
                }
            },
            "opening": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "onToggleOpening(event) {",
                        " alert(\"Toggle opening!\");",
                        "}",
                        "```",
                        "```html",
                        "<div",
                        "  igxToggle",
                        "  (onOpening)='onToggleOpening($event)'>",
                        "</div>",
                        "```"
                    ],
                    "shortText": "Emits an event before the toggle container is opened."
                }
            },
            "closed": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "onToggleClosed(event) {",
                        " alert(\"Toggle closed!\");",
                        "}",
                        "```",
                        "```html",
                        "<div",
                        "  igxToggle",
                        "  (onClosed)='onToggleClosed($event)'>",
                        "</div>",
                        "```"
                    ],
                    "shortText": "Emits an event after the toggle container is closed."
                }
            },
            "closing": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "onToggleClosing(event) {",
                        " alert(\"Toggle closing!\");",
                        "}",
                        "```",
                        "```html",
                        "<div",
                        " igxToggle",
                        " (closing)='onToggleClosing($event)'>",
                        "</div>",
                        "```"
                    ],
                    "shortText": "Emits an event before the toggle container is closed."
                }
            },
            "appended": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "onAppended() {",
                        " alert(\"Content appended!\");",
                        "}",
                        "```",
                        "```html",
                        "<div",
                        "  igxToggle",
                        "  (onAppended)='onToggleAppended()'>",
                        "</div>",
                        "```"
                    ],
                    "shortText": "Emits an event after the toggle element is appended to the overlay container."
                }
            },
            "id": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "let myToggleId = this.toggle.id;",
                        "```"
                    ],
                    "shortText": "Identifier which is registered into `IgxNavigationService`"
                }
            }
        },
        "methods": {
            "open": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "this.myToggle.open();",
                        "```"
                    ],
                    "shortText": "Opens the toggle."
                }
            },
            "close": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "this.myToggle.close();",
                        "```"
                    ],
                    "shortText": "Closes the toggle."
                }
            },
            "toggle": {
                "comment": {
                    "tags": {},
                    "text": [
                        "```typescript",
                        "this.myToggle.toggle();",
                        "```"
                    ],
                    "shortText": "Opens or closes the toggle, depending on its current state."
                }
            },
            "reposition": {
                "comment": {
                    "tags": {},
                    "shortText": [
                        "Repositions the toggle.",
                        "```typescript",
                        "this.myToggle.reposition();",
                        "```"
                    ]
                }
            },
            "setOffset": {
                "comment": {
                    "tags": {},
                    "shortText": "Offsets the content along the corresponding axis by the provided amount"
                }
            }
        },
        "accessors": {
            "overlayId": {
                "getter": {
                    "comment": {
                        "tags": {},
                        "shortText": [
                            "Returns the id of the overlay the content is rendered in.",
                            "```typescript",
                            "this.myToggle.overlayId;",
                            "```"
                        ]
                    }
                }
            }
        }
    }
}
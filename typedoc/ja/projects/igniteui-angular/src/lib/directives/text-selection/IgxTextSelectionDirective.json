{
    "IgxTextSelectionDirective": {
        "properties": {},
        "methods": {
            "trigger": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Triggers the selection of the element if it is marked as selectable.\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<input\n  type=\"text\"\n  id=\"firstName\"\n  igxTextSelection>\n</input>\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n@ViewChild('firstName',\n {read: IgxTextSelectionDirective})\npublic inputElement: IgxTextSelectionDirective;\n\npublic triggerElementSelection() {\n this.inputElement.trigger();\n}\n```"
                        }
                    ]
                }
            }
        },
        "accessors": {
            "selected": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns whether the input element is selectable through the directive.\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n// get\n@ViewChild('firstName',\n {read: IgxTextSelectionDirective})\npublic firstName: IgxTextSelectionDirective;\n\npublic getFirstNameSelectionStatus() {\n return this.firstName.selected;\n}\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Determines whether the input element could be selected through the directive.\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<!--set-->\n<input\n  type=\"text\"\n  id=\"firstName\"\n  [igxTextSelection]=\"true\">\n</input>\n\n<input\n  type=\"text\"\n  id=\"lastName\"\n  igxTextSelection\n  [selected]=\"true\">\n</input>\n```"
                            }
                        ]
                    }
                }
            },
            "nativeElement": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the nativeElement of the element where the directive was applied.\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<input\n  type=\"text\"\n  id=\"firstName\"\n  igxTextSelection>\n</input>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild('firstName',\n {read: IgxTextSelectionDirective})\npublic inputElement: IgxTextSelectionDirective;\n\npublic getNativeElement() {\n return this.inputElement.nativeElement;\n}\n```"
                            }
                        ]
                    }
                }
            }
        }
    }
}
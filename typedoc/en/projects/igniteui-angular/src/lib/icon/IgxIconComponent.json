{
    "IgxIconComponent": {
        "comment": {
            "tags": {
                "igxmodule": {
                    "comment": {
                        "text": "IgxIconModule",
                        "tagName": "igxmodule"
                    }
                },
                "igxtheme": {
                    "comment": {
                        "text": "igx-icon-theme",
                        "tagName": "igxtheme"
                    }
                },
                "igxkeywords": {
                    "comment": {
                        "text": "icon, picture",
                        "tagName": "igxkeywords"
                    }
                },
                "igxgroup": {
                    "comment": {
                        "text": "Display",
                        "tagName": "igxgroup"
                    }
                },
                "remarks": {
                    "comment": {
                        "text": [
                            "The Ignite UI Icon makes it easy for developers to include material design icons directly in their markup. The icons",
                            "support different icon families and can be marked as active or disabled using the `active` property. This will change the appearance",
                            "of the icon."
                        ],
                        "tagName": "remarks"
                    }
                },
                "example": {
                    "comment": {
                        "text": [
                            "```html",
                            "<igx-icon family=\"filter-icons\" active=\"true\">home</igx-icon>",
                            "```"
                        ],
                        "tagName": "example"
                    }
                }
            },
            "shortText": "Icon provides a way to include material icons to markup"
        },
        "properties": {
            "ariaHidden": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```typescript",
                                    "@ViewChild(\"MyIcon\") public icon: IgxIconComponent;",
                                    "constructor(private cdRef:ChangeDetectorRef) {}",
                                    "ngAfterViewInit() {",
                                    "    this.icon.ariaHidden = false;",
                                    "    this.cdRef.detectChanges();",
                                    "}",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": " This allows you to disable the `aria-hidden` attribute. By default it's applied."
                }
            },
            "family": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-icon family=\"material\">settings</igx-icon>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "An @Input property that sets the value of the `family`. By default it's \"material\"."
                }
            },
            "active": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-icon [active]=\"false\">settings</igx-icon>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": "An @Input property that allows you to disable the `active` property. By default it's applied."
                }
            },
            "color": {
                "comment": {
                    "tags": {
                        "deprecated": {
                            "comment": {
                                "text": [
                                    "in version 11.1.0. `color` is deprecated",
                                    "An @Input property that allows you to change the `color` of the icon."
                                ],
                                "tagName": "deprecated"
                            }
                        },
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-icon color=\"blue\">settings</igx-icon>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    }
                }
            },
            "name": {
                "comment": {
                    "tags": {
                        "example": {
                            "comment": {
                                "text": [
                                    "```html",
                                    "<igx-icon name=\"contains\" family=\"filter-icons\"></igx-icon>",
                                    "```"
                                ],
                                "tagName": "example"
                            }
                        }
                    },
                    "shortText": " An @Input property that allows you to set the `name` of the icon."
                }
            }
        },
        "methods": {},
        "accessors": {
            "getFamily": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        " @ViewChild(\"MyIcon\")",
                                        "public icon: IgxIconComponent;",
                                        "ngAfterViewInit() {",
                                        "   let iconFamily = this.icon.getFamily;",
                                        "}",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": " An accessor that returns the value of the family property."
                    }
                }
            },
            "getActive": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "@ViewChild(\"MyIcon\")",
                                        "public icon: IgxIconComponent;",
                                        "ngAfterViewInit() {",
                                        "   let iconActive = this.icon.getActive;",
                                        "}",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": " An accessor that returns the value of the active property."
                    }
                }
            },
            "getInactive": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "@ViewChild(\"MyIcon\")",
                                        "public icon: IgxIconComponent;",
                                        "ngAfterViewInit() {",
                                        "   let iconActive = this.icon.getInactive;",
                                        "}",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": " An accessor that returns inactive property."
                    }
                }
            },
            "getColor": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "@ViewChild(\"MyIcon\")",
                                        "public icon: IgxIconComponent;",
                                        "ngAfterViewInit() {",
                                        "   let color = this.icon.getColor;",
                                        "}",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "An accessor that returns the opposite value of the `color` property."
                    }
                }
            },
            "getName": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "@ViewChild(\"MyIcon\")",
                                        "public icon: IgxIconComponent;",
                                        "ngAfterViewInit() {",
                                        "   let name = this.icon.getName;",
                                        "}",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "An accessor that returns the value of the iconName property."
                    }
                }
            },
            "getSvg": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "@ViewChild(\"MyIcon\")",
                                        "public icon: IgxIconComponent;",
                                        "ngAfterViewInit() {",
                                        "   let svg: SafeHtml = this.icon.getSvg;",
                                        "}",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": " An accessor that returns the underlying SVG image as SafeHtml."
                    }
                }
            },
            "template": {
                "getter": {
                    "comment": {
                        "tags": {
                            "example": {
                                "comment": {
                                    "text": [
                                        "```typescript",
                                        "@ViewChild(\"MyIcon\")",
                                        "public icon: IgxIconComponent;",
                                        "ngAfterViewInit() {",
                                        "   let iconTemplate = this.icon.template;",
                                        "}",
                                        "```"
                                    ],
                                    "tagName": "example"
                                }
                            }
                        },
                        "shortText": "  An accessor that returns a TemplateRef to explicit, svg or no ligature."
                    }
                }
            }
        }
    }
}
{
    "IgxPivotGridComponent": {
        "comment": {
            "blockTags": [
                {
                    "tag": "@igxModule",
                    "content": [
                        {
                            "kind": "text",
                            "text": "IgxPivotGridModule"
                        }
                    ]
                },
                {
                    "tag": "@igxGroup",
                    "content": [
                        {
                            "kind": "text",
                            "text": "Grids & Lists"
                        }
                    ]
                },
                {
                    "tag": "@igxKeywords",
                    "content": [
                        {
                            "kind": "text",
                            "text": "pivot, grid, table"
                        }
                    ]
                },
                {
                    "tag": "@igxTheme",
                    "content": [
                        {
                            "kind": "text",
                            "text": "igx-grid-theme"
                        }
                    ]
                },
                {
                    "tag": "@remarks",
                    "content": [
                        {
                            "kind": "text",
                            "text": "The Ignite UI Pivot Grid is used for grouping and aggregating simple flat data into a pivot table.  Once data\nhas been bound and the dimensions and values configured it can be manipulated via sorting and filtering."
                        }
                    ]
                },
                {
                    "tag": "@example",
                    "content": [
                        {
                            "kind": "code",
                            "text": "```html\n<igx-pivot-grid [data]=\"data\" [pivotConfiguration]=\"configuration\">\n</igx-pivot-grid>\n```"
                        }
                    ]
                }
            ],
            "modifierTags": {},
            "summary": [
                {
                    "kind": "text",
                    "text": "Pivot Grid provides a way to present and manipulate data in a pivot table view."
                }
            ]
        },
        "properties": {
            "dimensionsChange": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the new dimension collection and its type:"
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-pivot-grid #grid [data]=\"localData\" [height]=\"'305px'\"\n             (dimensionsChange)=\"dimensionsChange($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when the dimension collection is changed via the grid chip area."
                        }
                    ]
                }
            },
            "pivotConfigurationChange": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-pivot-grid #grid [data]=\"localData\" [height]=\"'305px'\"\n             (pivotConfigurationChanged)=\"configurationChanged($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when any of the pivotConfiguration properties is changed via the grid chip area."
                        }
                    ]
                }
            },
            "dimensionInit": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Emits the dimension that is about to be initialized."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-pivot-grid #grid [data]=\"localData\" [height]=\"'305px'\"\n             (dimensionInit)=\"dimensionInit($event)\"></igx-pivot-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when the dimension is initialized."
                        }
                    ]
                }
            },
            "valueInit": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Emits the value that is about to be initialized."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-pivot-grid #grid [data]=\"localData\" [height]=\"'305px'\"\n             (valueInit)=\"valueInit($event)\"></igx-pivot-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when the value is initialized."
                        }
                    ]
                }
            },
            "dimensionsSortingExpressionsChange": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-pivot-grid #grid [data]=\"localData\" [height]=\"'305px'\"\n             (dimensionsSortingExpressionsChange)=\"dimensionsSortingExpressionsChange($event)\"></igx-pivot-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when a dimension is sorted."
                        }
                    ]
                }
            },
            "valuesChange": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the new dimension"
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-pivot-grid #grid [data]=\"localData\" [height]=\"'305px'\"\n             (valuesChange)=\"valuesChange($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when the values collection is changed via the grid chip area."
                        }
                    ]
                }
            },
            "valueChipTemplate": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-pivot-grid [valueChipTemplate]=\"myTemplate\"><igx-pivot-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/Sets a custom template for the value chips."
                        }
                    ]
                }
            },
            "emptyPivotGridTemplate": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-pivot-grid [emptyPivotGridTemplate]=\"myTemplate\"><igx-pivot-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/Sets a custom template when pivot grid is empty."
                        }
                    ]
                }
            },
            "emptyGridTemplate": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid [id]=\"'igx-grid-1'\" [data]=\"Data\" [emptyGridTemplate]=\"myTemplate\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/Sets a custom template when empty."
                        }
                    ]
                }
            },
            "loadingGridTemplate": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid [id]=\"'igx-grid-1'\" [data]=\"Data\" [loadingGridTemplate]=\"myTemplate\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/Sets a custom template when loading."
                        }
                    ]
                }
            },
            "clipboardOptions": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Controls the copy behavior of the grid."
                        }
                    ]
                }
            },
            "enabled": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Enables/disables the copy behavior"
                        }
                    ]
                }
            },
            "copyHeaders": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Include the columns headers in the clipboard output."
                        }
                    ]
                }
            },
            "copyFormatters": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Apply the columns formatters (if any) on the data in the clipboard output."
                        }
                    ]
                }
            },
            "separator": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "The separator used for formatting the copy output. Defaults to "
                        },
                        {
                            "kind": "code",
                            "text": "`\\t`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "filteringExpressionsTreeChange": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the filtering expressions tree of the column for which filtering was performed."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\"\n             (filteringExpressionsTreeChange)=\"filteringExprTreeChange($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after filtering is performed."
                        }
                    ]
                }
            },
            "advancedFilteringExpressionsTreeChange": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the advanced filtering expressions tree."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\"\n          (advancedFilteringExpressionsTreeChange)=\"advancedFilteringExprTreeChange($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after advanced filtering is performed."
                        }
                    ]
                }
            },
            "gridScroll": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\"\n             (gridScroll)=\"onScroll($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when grid is scrolled horizontally/vertically."
                        }
                    ]
                }
            },
            "rowClasses": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@memberof",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "IgxColumnComponent"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Sets a conditional class selector to the grid's row element.\nAccepts an object literal, containing key-value pairs,\nwhere the key is the name of the CSS class and the value is\neither a callback function that returns a boolean, or boolean, like so:\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\ncallback = (row: RowType) => { return row.selected > 6; }\nrowClasses = { 'className' : this.callback };\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-grid #grid [data]=\"Data\" [rowClasses] = \"rowClasses\" [autoGenerate]=\"true\"></igx-grid>\n```"
                        }
                    ]
                }
            },
            "rowStyles": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@memberof",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "IgxColumnComponent"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Sets conditional style properties on the grid row element.\nIt accepts an object literal where the keys are\nthe style properties and the value is an expression to be evaluated.\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nstyles = {\n background: 'yellow',\n color: (row: RowType) => row.selected : 'red': 'white'\n}\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n"
                        },
                        {
                            "kind": "code",
                            "text": "```html\n<igx-grid #grid [data]=\"Data\" [rowStyles]=\"styles\" [autoGenerate]=\"true\"></igx-grid>\n```"
                        }
                    ]
                }
            },
            "primaryKey": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" [primaryKey]=\"'ProductID'\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/Sets the primary key."
                        }
                    ]
                }
            },
            "cellClick": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxGridCell`"
                                },
                                {
                                    "kind": "text",
                                    "text": "."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid (cellClick)=\"cellClick($event)\" [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when a cell is clicked."
                        }
                    ]
                }
            },
            "formGroupCreated": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid (formGroupCreated)=\"formGroupCreated($event)\" [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when formGroup is created on edit of row/cell."
                        }
                    ]
                }
            },
            "validationStatusChange": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid (validationStatusChange)=\"validationStatusChange($event)\" [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when grid's validation status changes."
                        }
                    ]
                }
            },
            "selected": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxGridCell`"
                                },
                                {
                                    "kind": "text",
                                    "text": "."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid (selected)=\"onCellSelect($event)\" [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when a cell is selected."
                        }
                    ]
                }
            },
            "rowSelectionChanging": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid (rowSelectionChanging)=\"rowSelectionChanging($event)\" [data]=\"localData\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxGridRowComponent`"
                        },
                        {
                            "kind": "text",
                            "text": " is selected."
                        }
                    ]
                }
            },
            "columnSelectionChanging": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid (columnSelectionChanging)=\"columnSelectionChanging($event)\" [data]=\"localData\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxColumnComponent`"
                        },
                        {
                            "kind": "text",
                            "text": " is selected."
                        }
                    ]
                }
            },
            "columnInit": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the column object."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" (columnInit)=\"initColumns($event)\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when a column is initialized."
                        }
                    ]
                }
            },
            "sorting": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns an "
                                },
                                {
                                    "kind": "code",
                                    "text": "`ISortingEventArgs`"
                                },
                                {
                                    "kind": "text",
                                    "text": " object. "
                                },
                                {
                                    "kind": "code",
                                    "text": "`sortingExpressions`"
                                },
                                {
                                    "kind": "text",
                                    "text": " key holds the sorting expressions."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" [autoGenerate]=\"true\" (sorting)=\"sorting($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted before sorting expressions are applied."
                        }
                    ]
                }
            },
            "sortingDone": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the sorting expression."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" [autoGenerate]=\"true\" (sortingDone)=\"sortingDone($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after sorting is completed."
                        }
                    ]
                }
            },
            "filtering": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns an "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IFilteringEventArgs`"
                                },
                                {
                                    "kind": "text",
                                    "text": " object. "
                                },
                                {
                                    "kind": "code",
                                    "text": "`filteringExpressions`"
                                },
                                {
                                    "kind": "text",
                                    "text": " key holds the filtering expressions for the column."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\" (filtering)=\"filtering($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted before filtering expressions are applied."
                        }
                    ]
                }
            },
            "filteringDone": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the filtering expressions tree of the column for which filtering was performed."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" [height]=\"'305px'\" [autoGenerate]=\"true\" (filteringDone)=\"filteringDone($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after filtering is performed through the UI."
                        }
                    ]
                }
            },
            "columnResized": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxColumnComponent`"
                                },
                                {
                                    "kind": "text",
                                    "text": " object's old and new width."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" (columnResized)=\"resizing($event)\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after column is resized."
                        }
                    ]
                }
            },
            "contextMenu": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxGridCell`"
                                },
                                {
                                    "kind": "text",
                                    "text": " object.\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" (contextMenu)=\"contextMenu($event)\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when a cell is right clicked."
                        }
                    ]
                }
            },
            "doubleClick": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxGridCell`"
                                },
                                {
                                    "kind": "text",
                                    "text": " object."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" (doubleClick)=\"dblClick($event)\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when a cell is double clicked."
                        }
                    ]
                }
            },
            "columnVisibilityChanging": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Args: { column: any, newValue: boolean }"
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid (columnVisibilityChanging)=\"visibilityChanging($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted before column visibility is changed."
                        }
                    ]
                }
            },
            "columnVisibilityChanged": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Args: { column: IgxColumnComponent, newValue: boolean }"
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid (columnVisibilityChanged)=\"visibilityChanged($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after column visibility is changed."
                        }
                    ]
                }
            },
            "gridKeydown": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This event is fired only if the key combination is supported in the grid.\nReturn the target type, target object and the original event. This event is cancelable."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n <igx-grid (gridKeydown)=\"customKeydown($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when keydown is triggered over element inside grid's body."
                        }
                    ]
                }
            },
            "gridCopy": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Fired only if copy behavior is enabled through the ["
                                },
                                {
                                    "kind": "code",
                                    "text": "`clipboardOptions`"
                                },
                                {
                                    "kind": "text",
                                    "text": "]"
                                },
                                {
                                    "kind": "inline-tag",
                                    "tag": "@link",
                                    "text": "IgxGridBaseDirective#clipboardOptions"
                                },
                                {
                                    "kind": "text",
                                    "text": "."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when a copy operation is executed."
                        }
                    ]
                }
            },
            "rowToggle": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid [data]=\"employeeData\" (rowToggle)=\"rowToggle($event)\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when the expanded state of a row gets changed."
                        }
                    ]
                }
            },
            "activeNodeChange": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```\n<igx-grid [data]=\"data\" [autoGenerate]=\"true\" (activeNodeChange)=\"activeNodeChange($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emmited when the active node is changed."
                        }
                    ]
                }
            },
            "sortingExpressionsChange": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns the sorting expressions."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid [data]=\"localData\" [autoGenerate]=\"true\" (sortingExpressionsChange)=\"sortingExprChange($event)\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted before sorting is performed."
                        }
                    ]
                }
            },
            "rangeSelected": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Range selection can be made either through drag selection or through keyboard selection."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted when making a range selection."
                        }
                    ]
                }
            },
            "rendered": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after the ngAfterViewInit hook. At this point the grid exists in the DOM"
                        }
                    ]
                }
            },
            "dataChanging": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\n <igx-grid #grid [data]=\"localData\" [autoGenerate]=\"true\" (dataChanging)='handleDataChangingEvent()'></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted before the grid's data view is changed because of a data operation, rebinding, etc."
                        }
                    ]
                }
            },
            "dataChanged": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\n <igx-grid #grid [data]=\"localData\" [autoGenerate]=\"true\" (dataChanged)='handleDataChangedEvent()'></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Emitted after the grid's data view is changed because of a data operation, rebinding, etc."
                        }
                    ]
                }
            },
            "validationTrigger": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid #grid validationTrigger='blur'></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/Sets the trigger for validators used when editing the grid."
                        }
                    ]
                }
            }
        },
        "methods": {
            "notifyDimensionChange": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Notifies for dimension change."
                        }
                    ]
                }
            },
            "autoSizeRowDimension": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Only sizes based on the dimension cells in view."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.autoSizeRowDimension(dimension);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Auto-sizes row dimension cells."
                        }
                    ]
                }
            },
            "insertDimensionAt": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.insertDimensionAt(dimension, PivotDimensionType.Row, 1);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Inserts dimension in target collection by type at specified index or at the collection's end."
                        }
                    ]
                }
            },
            "moveDimension": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.moveDimension(dimension, PivotDimensionType.Row, 1);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Move dimension from its currently collection to the specified target collection by type at specified index or at the collection's end."
                        }
                    ]
                }
            },
            "removeDimension": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This is different than toggleDimension that enabled/disables the dimension.\nThis completely removes the specified dimension from the collection."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.removeDimension(dimension);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Removes dimension from its currently collection."
                        }
                    ]
                }
            },
            "toggleDimension": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "The dimension remains in its current collection. This just changes its enabled state."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.toggleDimension(dimension);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Toggles the dimension's enabled state on or off."
                        }
                    ]
                }
            },
            "insertValueAt": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.insertValueAt(value, 1);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Inserts value at specified index or at the end."
                        }
                    ]
                }
            },
            "moveValue": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.moveValue(value, 1);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Move value from its currently at specified index or at the end."
                        }
                    ]
                }
            },
            "removeValue": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This is different than toggleValue that enabled/disables the value.\nThis completely removes the specified value from the collection."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.removeValue(dimension);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Removes value from collection."
                        }
                    ]
                }
            },
            "toggleValue": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "The value remains in its current collection. This just changes its enabled state."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.toggleValue(value);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Toggles the value's enabled state on or off."
                        }
                    ]
                }
            },
            "sortDimension": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.sortDimension(dimension, SortingDirection.Asc);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Sort the dimension and its children in the provided direction."
                        }
                    ]
                }
            },
            "filterDimension": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\npublic filter() {\n     const set = new Set();\n     set.add('Value 1');\n     set.add('Value 2');\n     this.grid1.filterDimension(this.pivotConfigHierarchy.rows[0], set, IgxStringFilteringOperand.instance().condition('in'));\n}\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Filters a single "
                        },
                        {
                            "kind": "code",
                            "text": "`IPivotDimension`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "__type": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Provides a callback for loading unique column values on demand.\nIf this property is provided, the unique values it generates will be used by the Excel Style Filtering."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```html\n<igx-grid [data]=\"localData\" [filterMode]=\"'excelStyleFilter'\" [uniqueColumnValuesStrategy]=\"columnValuesStrategy\"></igx-grid>\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets/Sets a unique values strategy used by the Excel Style Filtering"
                        }
                    ]
                }
            },
            "toggleRow": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "ID is either the primaryKey value or the data record instance."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.toggleRow(rowID);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Toggles the row by its id."
                        }
                    ]
                }
            },
            "getHeaderGroupWidth": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gets the "
                        },
                        {
                            "kind": "code",
                            "text": "`width`"
                        },
                        {
                            "kind": "text",
                            "text": " to be set on "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxGridHeaderGroupComponent`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "getColumnByName": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nconst myCol = this.grid1.getColumnByName(\"ID\");\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns the "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxColumnComponent`"
                        },
                        {
                            "kind": "text",
                            "text": " by field name."
                        }
                    ]
                }
            },
            "recalculateAutoSizes": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid1.recalculateAutoSizes();\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Recalculates all widths of columns that have size set to "
                        },
                        {
                            "kind": "code",
                            "text": "`auto`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "markForCheck": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\ngrid.markForCheck();\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Triggers change detection for the "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxGridComponent`"
                        },
                        {
                            "kind": "text",
                            "text": ".\nCalling markForCheck also triggers the grid pipes explicitly, resulting in all updates being processed.\nMay degrade performance if used when not needed, or if misused:\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\n// DON'Ts:\n// don't call markForCheck from inside a loop\n// don't call markForCheck when a primitive has changed\ngrid.data.forEach(rec => {\n rec = newValue;\n grid.markForCheck();\n});\n\n// DOs\n// call markForCheck after updating a nested property\ngrid.data.forEach(rec => {\n rec.nestedProp1.nestedProp2 = newValue;\n});\ngrid.markForCheck();\n```"
                        }
                    ]
                }
            },
            "getRowData": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "If the primary key is not specified the row selector match the row data."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nconst data = grid.getRowData(94741);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns the data that is contained in the row component."
                        }
                    ]
                }
            },
            "sort": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Sort the "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxGridComponent`"
                                },
                                {
                                    "kind": "text",
                                    "text": "'s "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxColumnComponent`"
                                },
                                {
                                    "kind": "text",
                                    "text": " based on the provided array of sorting expressions."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.sort({ fieldName: name, dir: SortingDirection.Asc, ignoreCase: false });\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Sort a single "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxColumnComponent`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "filter": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\npublic filter(term) {\n     this.grid.filter(\"ProductName\", term, IgxStringFilteringOperand.instance().condition(\"contains\"));\n}\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Filters a single "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxColumnComponent`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "filterGlobal": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\ngrid.filterGlobal('some', IgxStringFilteringOperand.instance().condition('contains'));\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Filters all the "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxColumnComponent`"
                        },
                        {
                            "kind": "text",
                            "text": " in the "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxGridComponent`"
                        },
                        {
                            "kind": "text",
                            "text": " with the same condition."
                        }
                    ]
                }
            },
            "clearFilter": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Otherwise clears the filtering state of all "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxColumnComponent`"
                                },
                                {
                                    "kind": "text",
                                    "text": "s."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.clearFilter();\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "If name is provided, clears the filtering state of the corresponding "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxColumnComponent`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "clearSort": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "otherwise clears the sorting state of all "
                                },
                                {
                                    "kind": "code",
                                    "text": "`IgxColumnComponent`"
                                },
                                {
                                    "kind": "text",
                                    "text": "."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.clearSort();\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "If name is provided, clears the sorting state of the corresponding "
                        },
                        {
                            "kind": "code",
                            "text": "`IgxColumnComponent`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "reflow": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Should be run when changing DOM elements dimentions manually that affect the grid's size."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.reflow();\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Recalculates grid width/height dimensions."
                        }
                    ]
                }
            },
            "selectRows": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.selectRows([1,2,5], true);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Select specified rows by ID."
                        }
                    ]
                }
            },
            "deselectRows": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.deselectRows([1,2,5]);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Deselect specified rows by ID."
                        }
                    ]
                }
            },
            "selectAllRows": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "By default if filtering is in place, selectAllRows() and deselectAllRows() select/deselect all filtered rows.\nIf you set the parameter onlyFilterData to false that will select all rows in the grid exept deleted rows."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.selectAllRows();\nthis.grid.selectAllRows(false);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Selects all rows"
                        }
                    ]
                }
            },
            "deselectAllRows": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "By default if filtering is in place, selectAllRows() and deselectAllRows() select/deselect all filtered rows.\nIf you set the parameter onlyFilterData to false that will deselect all rows in the grid exept deleted rows."
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.deselectAllRows();\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Deselects all rows"
                        }
                    ]
                }
            },
            "clearCellSelection": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.clearCellSelection();\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Deselect selected cells."
                        }
                    ]
                }
            },
            "selectRange": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Select range(s) of cells between certain rows and columns of the grid."
                        }
                    ]
                }
            },
            "getSelectedRanges": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Get the currently selected ranges in the grid."
                        }
                    ]
                }
            },
            "getSelectedData": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "If "
                                },
                                {
                                    "kind": "code",
                                    "text": "`formatters`"
                                },
                                {
                                    "kind": "text",
                                    "text": " is enabled, the cell value will be formatted by its respective column formatter (if any).\nIf "
                                },
                                {
                                    "kind": "code",
                                    "text": "`headers`"
                                },
                                {
                                    "kind": "text",
                                    "text": " is enabled, it will use the column header (if any) instead of the column field."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns an array of the current cell selection in the form of "
                        },
                        {
                            "kind": "code",
                            "text": "`[{ column.field: cell.value }, ...]`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "selectedColumns": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Returns an array with selected columns\n"
                                },
                                {
                                    "kind": "code",
                                    "text": "```typescript\nconst selectedColumns = this.grid.selectedColumns();\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Get current selected columns."
                        }
                    ]
                }
            },
            "selectColumns": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.selectColumns(['ID','Name'], true);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Select specified columns."
                        }
                    ]
                }
            },
            "deselectColumns": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.deselectColumns(['ID','Name']);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Deselect specified columns by field."
                        }
                    ]
                }
            },
            "deselectAllColumns": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.deselectAllColumns();\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Deselects all columns"
                        }
                    ]
                }
            },
            "selectAllColumns": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\nthis.grid.deselectAllColumns();\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Selects all columns"
                        }
                    ]
                }
            },
            "getSelectedColumnsData": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "If "
                                },
                                {
                                    "kind": "code",
                                    "text": "`formatters`"
                                },
                                {
                                    "kind": "text",
                                    "text": " is enabled, the cell value will be formatted by its respective column formatter (if any).\nIf "
                                },
                                {
                                    "kind": "code",
                                    "text": "`headers`"
                                },
                                {
                                    "kind": "text",
                                    "text": " is enabled, it will use the column header (if any) instead of the column field."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns an array of the current columns selection in the form of "
                        },
                        {
                            "kind": "code",
                            "text": "`[{ column.field: cell.value }, ...]`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "navigateTo": {
                "comment": {
                    "blockTags": [
                        {
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Also can execute a custom logic over the target element,\nthrough a callback function that accepts { targetType: GridKeydownTargetType, target: Object }"
                                }
                            ]
                        },
                        {
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```typescript\n this.grid.navigateTo(10, 3, (args) => { args.target.nativeElement.focus(); });\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Navigates to a position in the grid based on provided "
                        },
                        {
                            "kind": "code",
                            "text": "`rowindex`"
                        },
                        {
                            "kind": "text",
                            "text": " and "
                        },
                        {
                            "kind": "code",
                            "text": "`visibleColumnIndex`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            }
        },
        "accessors": {
            "dimensionsSortingExpressions": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst expressions = this.grid.dimensionsSortingExpressions;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the sorting expressions generated for the dimensions."
                            }
                        ]
                    }
                }
            },
            "superCompactMode": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "Overrides the displayDensity option if one is set."
                                    }
                                ]
                            },
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-pivot-grid [superCompactMode]=\"true\"></igx-pivot-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Enables a super compact theme for the component."
                            }
                        ]
                    }
                }
            },
            "displayDensity": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "If set while superCompactMode is enabled will have no affect.\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nlet componentTheme = this.component.displayDensity;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the theme of the component.\nThe default theme is "
                            },
                            {
                                "kind": "code",
                                "text": "`comfortable`"
                            },
                            {
                                "kind": "text",
                                "text": ".\nAvailable options are "
                            },
                            {
                                "kind": "code",
                                "text": "`comfortable`"
                            },
                            {
                                "kind": "text",
                                "text": ", "
                            },
                            {
                                "kind": "code",
                                "text": "`cosy`"
                            },
                            {
                                "kind": "text",
                                "text": ", "
                            },
                            {
                                "kind": "code",
                                "text": "`compact`"
                            },
                            {
                                "kind": "text",
                                "text": "."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the theme of the component."
                            }
                        ]
                    }
                }
            },
            "defaultExpandState": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the default expand state for all rows."
                            }
                        ]
                    }
                }
            },
            "defaultRowHeight": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst rowHeigh = this.grid.defaultRowHeight;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the default row height."
                            }
                        ]
                    }
                }
            },
            "allDimensions": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst dimensions = this.grid.allDimensions;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the full list of dimensions."
                            }
                        ]
                    }
                }
            },
            "id": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "If not provided it will be automatically generated."
                                    }
                                ]
                            },
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-pivot-grid [id]=\"'igx-pivot-1'\" [data]=\"Data\"></igx-pivot-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the value of the "
                            },
                            {
                                "kind": "code",
                                "text": "`id`"
                            },
                            {
                                "kind": "text",
                                "text": " attribute."
                            }
                        ]
                    }
                }
            },
            "data": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns an array of data set to the component.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\nlet data = this.grid.data;\n```"
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@Input",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "property that lets you fill the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`IgxPivotGridComponent`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " with an array of data.\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-pivot-grid [data]=\"Data\"></igx-pivot-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "An"
                            }
                        ]
                    }
                }
            },
            "dataCloneStrategy": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n <igx-grid #grid [data]=\"localData\" [dataCloneStrategy]=\"customCloneStrategy\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the data clone strategy of the grid when in edit mode."
                            }
                        ]
                    }
                }
            },
            "dragGhostCustomTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the custom template, if any, used for row drag ghost."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets a custom template for the row drag ghost.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template #template igxRowDragGhost>\n   <igx-icon>menu</igx-icon>\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"'template'\", {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.dragGhostCustomTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "rowEditTextTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the row edit text template."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the row edit text template.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template #template igxRowEditText let-rowChangesCount>\nChanges: {{rowChangesCount}}\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild('template', {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.rowEditTextTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "rowAddTextTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the row add text template."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the row add text template.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template #template igxRowAddText>\nAdding Row\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild('template', {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.rowAddTextTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "rowEditActionsTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the row edit actions template."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the row edit actions template.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template #template igxRowEditActions let-endRowEdit>\n<button igxButton igxRowEditTabStop (click)=\"endRowEdit(false)\">Cancel</button>\n<button igxButton igxRowEditTabStop (click)=\"endRowEdit(true)\">Apply</button>\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild('template', {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.rowEditActionsTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "rowExpandedIndicatorTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the row expand indicator template."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the row expand indicator template.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template igxRowExpandedIndicator>\n <igx-icon role=\"button\">remove</igx-icon>\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild('template', {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.rowExpandedIndicatorTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "rowCollapsedIndicatorTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the row collapse indicator template."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the row collapse indicator template.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template igxRowCollapsedIndicator>\n <igx-icon role=\"button\">add</igx-icon>\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild('template', {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.rowCollapsedIndicatorTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "headerExpandedIndicatorTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the header expand indicator template."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the header expand indicator template.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template igxHeaderExpandedIndicator>\n <igx-icon role=\"button\">remove</igx-icon>\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild('template', {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.headerExpandedIndicatorTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "headerCollapsedIndicatorTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the row collapse indicator template."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the row collapse indicator template.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template igxHeaderCollapsedIndicator>\n <igx-icon role=\"button\">add</igx-icon>\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild('template', {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.headerCollapsedIndicatorTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "excelStyleHeaderIconTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the excel style header icon."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the excel style header icon.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template #template igxExcelStyleHeaderIcon>\n<igx-icon>filter_alt</igx-icon>\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild('template', {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.excelStyleHeaderIconTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "sortAscendingHeaderIconTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "The custom template, if any, that should be used when rendering a header sorting indicator when columns are sorted in asc order."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets a custom template that should be used when rendering a header sorting indicator when columns are sorted in asc order.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template #template igxSortAscendingHeaderIcon>\n   <igx-icon>expand_less</igx-icon>\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"'template'\", {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.sortAscendingHeaderIconTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "sortDescendingHeaderIconTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "The custom template, if any, that should be used when rendering a header sorting indicator when columns are sorted in desc order."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets a custom template that should be used when rendering a header sorting indicator when columns are sorted in desc order.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template #template igxSortDescendingHeaderIcon>\n   <igx-icon>expand_more</igx-icon>\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"'template'\", {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.sortDescendingHeaderIconTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "sortHeaderIconTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets custom template, if any, that should be used when rendering a header sorting indicator when columns are not sorted."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets a custom template that should be used when rendering a header sorting indicator when columns are not sorted.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template #template igxSortHeaderIcon>\n   <igx-icon>unfold_more</igx-icon>\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"'template'\", {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.sortHeaderIconTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "resourceStrings": {
                "setter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "By default it uses EN resources."
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the resource strings."
                            }
                        ]
                    }
                }
            },
            "filteringLogic": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "The default is AND."
                                    }
                                ]
                            },
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid [data]=\"Data\" [autoGenerate]=\"true\" [filteringLogic]=\"filtering\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the filtering logic of the "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxGridComponent`"
                            },
                            {
                                "kind": "text",
                                "text": "."
                            }
                        ]
                    }
                }
            },
            "filteringExpressionsTree": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [data]=\"Data\" [autoGenerate]=\"true\" [(filteringExpressionsTree)]=\"model.filteringExpressions\"></igx-grid>\n```"
                                    }
                                ]
                            },
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "Supports two-way binding."
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the filtering state."
                            }
                        ]
                    }
                }
            },
            "advancedFilteringExpressionsTree": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nlet advancedFilteringExpressionsTree = this.grid.advancedFilteringExpressionsTree;\nthis.grid.advancedFilteringExpressionsTree = logic;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the advanced filtering state."
                            }
                        ]
                    }
                }
            },
            "locale": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "If not set, returns browser's language."
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the locale."
                            }
                        ]
                    }
                }
            },
            "height": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [data]=\"Data\" [height]=\"'305px'\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the height."
                            }
                        ]
                    }
                }
            },
            "width": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nlet gridWidth = this.grid.width;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the width of the grid."
                            }
                        ]
                    }
                }
            },
            "rowHeight": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [data]=\"localData\" [rowHeight]=\"100\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the row height."
                            }
                        ]
                    }
                }
            },
            "columnWidth": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [data]=\"localData\" [columnWidth]=\"100\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the default width of the columns."
                            }
                        ]
                    }
                }
            },
            "emptyGridMessage": {
                "setter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [data]=\"Data\" [emptyGridMessage]=\"'The grid is empty'\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Get/Sets the message displayed when there are no records."
                            }
                        ]
                    }
                }
            },
            "isLoading": {
                "setter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [data]=\"Data\" [isLoading]=\"true\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets whether the grid is going to show a loading indicator."
                            }
                        ]
                    }
                }
            },
            "emptyFilteredGridMessage": {
                "setter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [data]=\"Data\" [emptyGridMessage]=\"'The grid is empty'\" [autoGenerate]=\"true\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the message displayed when there are no records and the grid is filtered."
                            }
                        ]
                    }
                }
            },
            "filterStrategy": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n <igx-grid #grid [data]=\"localData\" [filterStrategy]=\"filterStrategy\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the filtering strategy of the grid."
                            }
                        ]
                    }
                }
            },
            "sortStrategy": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n <igx-grid #grid [data]=\"localData\" [sortStrategy]=\"sortStrategy\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the sorting strategy of the grid."
                            }
                        ]
                    }
                }
            },
            "sortingOptions": {
                "setter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst _sortingOptions: ISortingOptions = {\n     mode: 'single'\n}\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "html\n<igx-grid [sortingOptions]=\"sortingOptions\"><igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the sorting options - single or multiple sorting.\nAccepts an "
                            },
                            {
                                "kind": "code",
                                "text": "`ISortingOptions`"
                            },
                            {
                                "kind": "text",
                                "text": " object with any of the "
                            },
                            {
                                "kind": "code",
                                "text": "`mode`"
                            },
                            {
                                "kind": "text",
                                "text": " properties."
                            }
                        ]
                    }
                }
            },
            "rowList": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst rowList = this.grid.rowList;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "A list of "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxGridRowComponent`"
                            },
                            {
                                "kind": "text",
                                "text": "."
                            }
                        ]
                    }
                }
            },
            "dataRowList": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst dataList = this.grid.dataRowList;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "A list of currently rendered "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxGridRowComponent`"
                            },
                            {
                                "kind": "text",
                                "text": "'s."
                            }
                        ]
                    }
                }
            },
            "headSelectorTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the header row selector template."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the header row selector template.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template #template igxHeadSelector let-headContext>\n{{ headContext.selectedCount }} / {{ headContext.totalCount  }}\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"'template'\", {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.headSelectorTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "rowSelectorTemplate": {
                "getter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the row selector template."
                            }
                        ]
                    }
                },
                "setter": {
                    "comment": {
                        "blockTags": [],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets a custom template for the row selectors.\n"
                            },
                            {
                                "kind": "code",
                                "text": "```html\n<ng-template #template igxRowSelector let-rowContext>\n   <igx-checkbox [checked]=\"rowContext.selected\"></igx-checkbox>\n</ng-template>\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n"
                            },
                            {
                                "kind": "code",
                                "text": "```typescript\n@ViewChild(\"'template'\", {read: TemplateRef })\npublic template: TemplateRef<any>;\nthis.grid.rowSelectorTemplate = this.template;\n```"
                            }
                        ]
                    }
                }
            },
            "sortingExpressions": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "Supports two-way data binding."
                                    }
                                ]
                            },
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [data]=\"Data\" [autoGenerate]=\"true\" [(sortingExpressions)]=\"model.sortingExpressions\"></igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the sorting state."
                            }
                        ]
                    }
                }
            },
            "cellSelection": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "By default the cell selection mode is multiple"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets cell selection mode."
                            }
                        ]
                    }
                }
            },
            "rowSelection": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "By default the row selection mode is 'none'\nNote that in IgxGrid and IgxHierarchicalGrid 'multipleCascade' behaves like 'multiple'"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets row selection mode"
                            }
                        ]
                    }
                }
            },
            "columnSelection": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "By default the row selection mode is none"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets column selection mode"
                            }
                        ]
                    }
                }
            },
            "filteredData": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nlet filteredData = this.grid.filteredData;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns an array of objects containing the filtered data."
                            }
                        ]
                    }
                }
            },
            "filteredSortedData": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst filteredSortedData = this.grid1.filteredSortedData;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns an array containing the filtered sorted data."
                            }
                        ]
                    }
                }
            },
            "virtualizationState": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "Includes the start index and how many records are rendered."
                                    }
                                ]
                            },
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst gridVirtState = this.grid1.virtualizationState;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the state of the grid virtualization."
                            }
                        ]
                    }
                }
            },
            "expansionStates": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "Includes only states that differ from the default one.\nSupports two-way binding."
                                    }
                                ]
                            },
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```html\n<igx-grid #grid [data]=\"data\" [(expansionStates)]=\"model.expansionStates\">\n</igx-grid>\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets a list of key-value pairs [row ID, expansion state]."
                            }
                        ]
                    }
                }
            },
            "nativeElement": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst nativeEl = this.grid.nativeElement.\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets the native element."
                            }
                        ]
                    }
                }
            },
            "outlet": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remark",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "If set, returns the outlet defined outside the grid. Otherwise returns the grid's internal outlet directive."
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets the outlet used to attach the grid's overlays to."
                            }
                        ]
                    }
                }
            },
            "defaultHeaderGroupMinWidth": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "Used internally for restricting header group component width.\nThe values below depend on the header cell default right/left padding values."
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxGridHeaderGroupComponent`"
                            },
                            {
                                "kind": "text",
                                "text": "'s minimum allowed width."
                            }
                        ]
                    }
                }
            },
            "columns": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst colums = this.grid.columns.\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets an array of "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxColumnComponent`"
                            },
                            {
                                "kind": "text",
                                "text": "s."
                            }
                        ]
                    }
                }
            },
            "visibleColumns": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\nconst visibleColumns = this.grid.visibleColumns.\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns an array of visible "
                            },
                            {
                                "kind": "code",
                                "text": "`IgxColumnComponent`"
                            },
                            {
                                "kind": "text",
                                "text": "s."
                            }
                        ]
                    }
                }
            },
            "dataView": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@example",
                                "content": [
                                    {
                                        "kind": "code",
                                        "text": "```typescript\n     const dataView = this.grid.dataView;\n```"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Returns the currently transformed paged/filtered/sorted/grouped/pinned/unpinned row data, displayed in the grid."
                            }
                        ]
                    }
                }
            },
            "selectRowOnClick": {
                "getter": {
                    "comment": {
                        "blockTags": [
                            {
                                "tag": "@remarks",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "By default it is set to true"
                                    }
                                ]
                            }
                        ],
                        "modifierTags": {},
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Gets/Sets whether clicking over a row should select/deselect it"
                            }
                        ]
                    }
                }
            }
        }
    }
}